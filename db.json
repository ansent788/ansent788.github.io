{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","path":"js/third-party/pace.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":0,"renderable":1},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":0},{"_id":"source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":0},{"_id":"source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":0},{"_id":"source/images/custom-logo.png","path":"images/custom-logo.png","modified":0,"renderable":0},{"_id":"source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":0},{"_id":"source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":0},{"_id":"source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":0},{"_id":"source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":0},{"_id":"source/images/paypal.png","path":"images/paypal.png","modified":0,"renderable":0},{"_id":"source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":0},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","path":"js/third-party/analytics/matomo.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/tags/index.md","hash":"870ef7ef81c98ec70a6cda2eb9bbab2f513ad214","modified":1656661820952},{"_id":"source/404.md","hash":"b0451dba672c2fd9398fa26cc8a96fe82b7ce2ac","modified":1656661820935},{"_id":"source/images/apple-touch-icon-next.png","hash":"4911666d4050cf57fcf49f16c86dd2650889d664","modified":1656661820948},{"_id":"source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1656661820948},{"_id":"source/images/favicon-32x32-next.png","hash":"7af68b13a8203e98d21324a70a32673585702dd2","modified":1656661820950},{"_id":"source/images/favicon-16x16-next.png","hash":"382c19e2852ebe769c5b35da7d74427b79ed016b","modified":1656661820950},{"_id":"source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1656661820950},{"_id":"source/categories/index.md","hash":"86291d5e1a4392ee0e291da2ce665fa4707cc455","modified":1656661820946},{"_id":"source/utils/coordtransform.js","hash":"eccc118ad199a5b0284da3c77b68527e5cc75fb0","modified":1656661820952},{"_id":"source/_posts/ExperienceEssay/Git.md","hash":"13dd7065d078306a130d2c378c7cc99b16cc610a","modified":1666339278665},{"_id":"source/_posts/ExperienceEssay/GiteeHexo.md","hash":"9f31a39f5d30cb296c0cbfdda4b3243430f3c0f3","modified":1666339567382},{"_id":"source/_posts/Linux/LinuxShell.md","hash":"3da4cfa8c9c33989a5dffdc4c7a4ed5a53ee0cfd","modified":1660009825400},{"_id":"source/_posts/Problem/MacApiError.md","hash":"a449b4bcf0257fdbb4c83da307d655119b976eac","modified":1656661820939},{"_id":"source/_posts/Problem/UniApp_GPS.md","hash":"69a57f4ed2ab265cfbbf2b9a02619baa4180c4d4","modified":1656661820939},{"_id":"source/_posts/Problem/libgdiplus.md","hash":"a1365ed31cd1dba1241131c75282125e125129f8","modified":1656661820939},{"_id":"source/_posts/ExperienceEssay/Scrcpy.md","hash":"5c8a86e23b3328bceb9341cbc236d2149db3ab2e","modified":1666339582442},{"_id":"source/_posts/Python/MacM1Python.md","hash":"0f545bf2cf8fd548af2b97ab974338498fe744cd","modified":1656661820942},{"_id":"source/_posts/Utils/Coordtransform.md","hash":"f9504b5281678478fb9cdfd9fe8aeadc49044d5a","modified":1656661820943},{"_id":"source/_posts/GIS/TDT/FirstCode.md","hash":"2f7b83d6f7008b5061d2ad4422d63becbff157b4","modified":1666339384389},{"_id":"source/_posts/Python/Psycopg.md","hash":"6eb1e02257647718838069e4798d63f6d40c22d7","modified":1656661820943},{"_id":"source/_posts/ExperienceEssay/Npm.md","hash":"a10f9671d3b9e7e0daaedcae4dcc274d45b5c063","modified":1656661820935},{"_id":"source/_posts/Python/Mediapipe/FaceMesh.md","hash":"5b1004256f71022504f58e7dcd4c0ba585c7baaa","modified":1656661820942},{"_id":"source/_posts/H5/PlusAPI/Geolocation.md","hash":"c808bdc04e59bd30599450c2ec0094bd83de1e8e","modified":1656661820938},{"_id":"source/_posts/Python/Mediapipe/Face.md","hash":"5a2a3e2fbb813eea081ef16e8bbca152fe160ded","modified":1656661820942},{"_id":"source/_posts/Python/Mediapipe/Hands.md","hash":"dd00002b5a7550c0509fe3a0bc70f79f313deb3c","modified":1656661820942},{"_id":"source/_posts/Python/Mediapipe/Objectron.md","hash":"03a32e2909d9542b7740645657b312a0814c8ead","modified":1656661820942},{"_id":"source/_posts/Python/Mediapipe/Holistic.md","hash":"2776787844dcb13be92275eadf437a6047ee9a27","modified":1656661820942},{"_id":"source/_posts/Python/Mediapipe/PoseClassification.md","hash":"bc29d2442e6b52faa3dc2cff1fd38801d08aba9c","modified":1656661820943},{"_id":"source/_posts/Python/Mediapipe/SelfieSegmentation.md","hash":"06a310084b4d49bab410885872747c70402e363c","modified":1656661820943},{"_id":"source/_posts/Python/Mediapipe/Pose.md","hash":"86aabfdbc124ae48b57388cab8e17db9b6338451","modified":1656661820943},{"_id":"source/_posts/Xamarin/Forms/12_UrlData.md","hash":"8896cdec658b6cc64c7a8da9d57cc3698c7d02f5","modified":1656661820944},{"_id":"source/_posts/Xamarin/Forms/10_LifeCycle.md","hash":"db25ca51a0a27eae047fd506811b46897587edd2","modified":1656661820943},{"_id":"source/_posts/Xamarin/Forms/11_Sqlite.md","hash":"0cc59d75e0a95e7f213035deba5b7df4cb03a995","modified":1656661820943},{"_id":"source/_posts/Xamarin/Forms/1_StackLayout.md","hash":"4a3ed18064e0ddc320d34278cfc618063c4769d8","modified":1656661820944},{"_id":"source/_posts/Xamarin/Forms/2_Grid.md","hash":"453ce4480cb0a4f5cd515f30c243e4ae4ac25a46","modified":1656661820944},{"_id":"source/_posts/Paddlex/Install.md","hash":"6ab3f92d31cad54c163c1d04a535e7e466662662","modified":1656661820939},{"_id":"source/_posts/Python/Mediapipe/Install.md","hash":"6f04a3507e58c7abd2e7fefa9a618dcdeb70f0e6","modified":1656661820942},{"_id":"source/_posts/Xamarin/Forms/3_Label.md","hash":"e3b4a63b5fc3a588db65c485850eedc3c5a4b59c","modified":1656661820944},{"_id":"source/_posts/Xamarin/Forms/4_Button.md","hash":"88260c6036f9582a3059f708246dd7d27feb1d0d","modified":1656661820944},{"_id":"source/_posts/Xamarin/Forms/5_Entry.md","hash":"5b5ed26d02266587fa54b687a14b22caada67ab9","modified":1656661820944},{"_id":"source/_posts/Xamarin/Forms/6_Editor.md","hash":"be041ebc539534be0df690a3118ce142848d30c4","modified":1656661820944},{"_id":"source/_posts/Xamarin/Forms/7_Image.md","hash":"779d6bd326b0e5cf93ca0adda310f600f623b552","modified":1656661820945},{"_id":"source/_posts/Xamarin/Forms/8_ListView.md","hash":"0a7202fcf1aad6e40c75abd8d04f65ad330600c5","modified":1656661820945},{"_id":"source/_posts/Xamarin/Forms/Summarize.md","hash":"1b0b4a2cc5898ead0269f25a400798a00a6315dd","modified":1656661820945},{"_id":"source/_posts/Xamarin/Forms/9_PopWin.md","hash":"f7acbec52fd45fcc8855d6f7652ee75b827d4770","modified":1656661820945},{"_id":"source/_posts/Xamarin/Forms/FirstCode.md","hash":"5d28eef35087affe6d867decd7789b78c4fee2f6","modified":1656661820945},{"_id":"source/images/logo.svg","hash":"8849054569a170dcfa5f8b1c4b1d621076784d1f","modified":1656661820951},{"_id":"source/images/paypal.png","hash":"a108b3f7553d7a03f66f8feb000c93c394626bec","modified":1656661820951},{"_id":"source/images/alipay.png","hash":"0947fd2c3aa3d716273ba947bba9fcabf1dcf9b7","modified":1656661820948},{"_id":"source/images/wechatpay.png","hash":"b64c8b629efcdc602b678ba6c7627cfa23c9dbde","modified":1656661820952},{"_id":"source/_posts/GIS/TDT/FirstCode/image.jpg","hash":"04dedd771c9baa98aa3567409f7b1e3f1a5e2d8e","modified":1656661820937},{"_id":"node_modules/hexo-theme-next/package.json","hash":"bbe3995c35b05028273e1def2394c3333a270654","modified":1662536757569},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"6a7bab46b4fc9d7722e29e2dac549def0d8dcaa3","modified":1662536757603},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1656661860191},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"a4829c703f4ad1fc4ae16b28ffabded43af7aba1","modified":1662536757602},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1656661860227},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1656661860190},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":1656661860227},{"_id":"node_modules/hexo-theme-next/README.md","hash":"56638e4978154a2f2a3f03ba84047b77b4a499cc","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1656661860190},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/bn.yml","hash":"fccbf2855392186e11daa8590121073594037b7b","modified":1656661860227},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":1656661860227},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"819c19eb9d142e5411f77cf3821d90f740ee114a","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/tk.yml","hash":"519239e35c3bda7b62b00ff5d34644f45b16fe6a","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"8c2b6361f2de17561c1a3eede2bf47b4e2ba6ce5","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":1656661860230},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"b813da5aed9d73b809133db4dfb08f90ec56afd9","modified":1656661860228},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":1656661860229},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"c68b7343d0f8145010f93351908cc36ef6212ec1","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"6c82bfd2ec8248c248da701f091b548a7a133580","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"ccf27b9249524b9fec1c15497b4353c8d1748c6c","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"dd63e488ae8cc144335a5958acedf6a16edd7a92","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"9e16ba20c28a7f2c6bc75aa427f48122301a30aa","modified":1656661860200},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":1656661860191},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1656661860191},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"6c40aa438c658eb7f0cd0f6a759f18b43e7e8f93","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"434b3e76a040a816169e1929657e4176e7b8164c","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"eb786e8b35e354287cda345c524cd35ec955f692","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":1656661860201},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"d0c470b0f6690aa217e9ada848c5e2e73fb27c6f","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":1656661860201},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"d41eeb262978e34de4679d8971a9e7ac5d90ecbc","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"3ce10d4cce94e3d4c482c2e18bb6f0f0ca380d3d","modified":1656661860185},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_third-party/pace.njk","hash":"d7ad5714079f7f65446f880baf14722435ca9061","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"30e03a1d4828259f82d46e64cbfe2955b6cff9a9","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"9eb5310664759931287dd28ea39165dfb67f12ed","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/scripts/helpers/navigation.js","hash":"78107021101553c3d23e89290f7530b60cf4aa86","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"226fccbe9c93265e65a300e3cb4bf6f9065cfdd7","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1656661860182},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"d292b78485e8e8055712b0ed6de7cf559c5fbdcd","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"9ed799c329abf830f623689d7e136991256a24ca","modified":1656661860185},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1656661860182},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1656661860182},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"f160e39943e39d7276da86adb47c3f08e5f22c7a","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1656661860190},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1656661860201},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1656661860181},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1656661860201},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1656661860201},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"263eddabfae40e54c0591e7baa8403ade8cdd56d","modified":1656661860222},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"32d31cb5a155681c19f5ad0bb56dcb08429f93ef","modified":1656661860203},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1656661860227},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1656661860182},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"3c6798c10cc220d83481cb3f3782e78558cee789","modified":1656661860201},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1656661860215},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"a1333258726caf84f368a8f8454639c7dc1626bb","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"aff4613756456be26415febc668860fdab8d33c5","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"650de421a8ce4cf685428ffbe0087ff84cbd1356","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"41a8b0cc16f60fa085cb719d07216d86b6bc4bf8","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"ee6fc2f111572d3eeab0a2fecbb2d6b3e37ab26b","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"06480d8ec5f0b87eafd47f082f07968d7282dd5c","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"89825e75cc45e9709fa6ba89883669eedaff6f46","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1656661860189},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"0f4bc8e257da60f77c0c1738607b2bde55810684","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1656661860200},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"9fa47e4fb342811da590ee4adc91cf81118c0a39","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"bde2c7356d9362972bde41cc206d5816f8ed714d","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"57eca76cfbbe9a65bc2a77f1deebf003ed335673","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"3d8591bb92df77ceb9d5b07bc76da1ca89e5bd76","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"0ba2bf0266f1fcb8edbd961869f8521b29685c56","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"8da52a144060db1a0a088ccb2e6cc8376d1fce70","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":1656661860195},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":1656661860199},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"314805f0186e9f6208c845f0757fdb7891c540f6","modified":1662536757583},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"a5b8297c2c383124dd6a56e256ecc0c0dcf489be","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":1656661860196},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/microsoft-clarity.njk","hash":"9dc00fcb0a05899f048eace9f9160b78956655d5","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":1656661860200},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":1656661860200},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"e45ea3542cdc9ed7ec8447b5e6f35df4c5e82758","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":1656661860192},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"1ebf658690468ea197bdd0416eb7cfa4bd0b083a","modified":1662536757583},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1656661860193},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1656661860185},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"c8b59b404f5d2a0b3b5cd1a6c9a10af5f30e43b5","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1656661860197},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"7fa8701c86485b2fe7324e017101a32417902397","modified":1656661860182},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"ec996d0673f766167c86df0966e9da1ae036e103","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/navigation.js","hash":"dd3562686d95a50375e6fd32e717ccb0d99c1e3d","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"19a402a225c31edffc50f202a14e0d582d3db23e","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"64e4024376b51fe81be7ad80235abdf0a83853bd","modified":1656661860189},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1656661860189},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"62faf6b0b0020066a0dec1f0123cf1fee3198e7e","modified":1662536757546},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":1656661860198},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":1656661860194},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1656661860218},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1656661860218},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/source/js/third-party/pace.js","hash":"0ef04218b93561ba4d0ff420d556c3d90a756d32","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"163c7441d777bee87042d475e6ce0fde199add28","modified":1656661860205},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1656661860223},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1656661860214},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"eed02e6fced8e5a653077205d4d4d7834ca71472","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"b741ab96e73370711c63a6581159f2ea8b5bfa1b","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"fb550935d374e0bdf1097fce187337dc05cad3e1","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"be6cf377ae8f4a01ee76f9b3014e74161d4d5d17","modified":1656661860204},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1656661860214},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":1656661860203},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1656661860214},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1656661860202},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1656661860214},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"b7f48be3c43bfa393d62142544a5487a67871713","modified":1656661860203},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"bab653bcf226311381e8411a0492202f1bf1fce9","modified":1656661860205},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1656661860204},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"fe1868f47681e00a33a96199302be85377282f63","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":1656661860204},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"90a86045a33c1bae49fc2f6fa1e1b53170c7f77b","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"8e34df131830d4fa3725e4590a672ba1cf1903e5","modified":1656661860209},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1656661860206},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"64775c729512b30b144ab5ae9dc4a4dfd4e13f35","modified":1656661860218},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1656661860206},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"d0a7c99095f490b0d2ed6b1be43d435960798cec","modified":1656661860205},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1656661860222},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1656661860213},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1656661860204},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1656661860185},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1656661860181},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":1656661860204},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1656661860185},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"260d1a77d6a3bb33a579d3e4cca1997003e799b5","modified":1656661860182},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"b5c7782368889fa9fd93807d28ff2daf270e3703","modified":1656661860222},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"33a82207a15aad9d1c8fb2251f9e3eba50452932","modified":1662536757546},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1656661860183},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1656661860189},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1656661860186},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"fdb7b7cef1a147d897e7f7cd8903b58368ec2062","modified":1656661860181},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1656661860188},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"835cbf54c49ef1327f47df70ff2636ad36b6f57d","modified":1662536757556},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"f27d817b0c2138dd3215b1f46af0753f60a008f3","modified":1656661860187},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1656661860206},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1656661860206},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"411a72df581f5b21317dc28633c7993207eb9e1c","modified":1656661860184},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"d0805a763176b3c0003967401644f41dfe3bc9e8","modified":1656661860208},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"d757768a58743601d0d84158ba955eb15d4c3c01","modified":1656661860223},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1656661860223},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1656661860223},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"fc1a7bac6493f24aa50665574f37f3dd954f210c","modified":1656661860223},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"010c901e4ef49a606f8a350efbf09044e76d2ff3","modified":1656661860224},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1656661860224},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"b6677dc2a2368084ab82bb4f145ac79e5966c150","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":1656661860224},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1656661860223},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/disqusjs.styl","hash":"c2326ee3e8b724d99c24a818ddee32813ea5bf89","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"070737d101e7cd58e997e8c7af09958268c43a21","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"979486a41a81f2a9fd8b0b87c4f87d6416c68c7d","modified":1656661860208},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitter.styl","hash":"35104dc6883a61c31e0e368dac8ac2f697be62fe","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"41ed817e1eb64078074e245e771446ee041e5790","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"e74f4bb47a101b014ee2a1783c87f3b87323f9a0","modified":1656661860206},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"38c64c2d04e46848382bfa246a0e9c508294767b","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"56d90ae0559caa55b75f3c300ff2711f9ed65fc4","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"ff642130354a0b3be0d708c43044ed4d710b5e83","modified":1656661860209},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1656661860216},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"e72799ce3f9b79753e365b2f8c8ef6c310668d4a","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"9d995eb4871a6c273d9d51558676a1fdabf69e72","modified":1656661860215},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"cee43480eba028c37d51cb620c2d81486aa24e01","modified":1656661860211},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"759e582d34d08e3386c55d87a835a9523608619f","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"8b9407e5cfd0571ef8de7df19022b268f962fa2f","modified":1656661860209},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"021a37cf178440cc341940a299d3bca359996c6b","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"ee94a1a27090ad24e3ed579093088d97ff96d77d","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"26dd0adfcb1db6df29c6090c8d7e9b5a43583fb0","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"3103b81fc76b59e1e2c161e2c484625c770ed66f","modified":1656661860226},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"d6418fd2bbfba7b73ddf11ec62db9637fdf5d8af","modified":1656661860205},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1656661860207},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"f2328caa94645836e06fb39a6a9c9a84ed68a8b5","modified":1656661860212},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"670fc109b56a010b166b86b616823a1aae97a738","modified":1656661860206},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1656661860225},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1656661860214},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"3f76c73a891bbc10679753e702feba9e8a5ffdd2","modified":1656661860213},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"7f8a7345e6537a62cd9e9a94c8f7065b541d9b04","modified":1656661860215},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b6654a1d7cf82577d8263faffee8af3ad4a5c0e8","modified":1656661860222},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"7a39bcce7274284e87388743db62afc847fe6897","modified":1656661860226},{"_id":"source/favicon.ico","hash":"4b1fb89295439756afeb8062413821a20207579b","modified":1656661820947},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"48d35dba575a7c9e8845b16652e76b7d4a4646de","modified":1656661860218},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"d27fbf7799695295dd5860a161a13ac4d90c5ba4","modified":1656661860222},{"_id":"source/_posts/Problem/libgdiplus/install.png","hash":"747692ad42cf5bb2e84a977b061fa724f0fd36d6","modified":1656661820941},{"_id":"source/images/custom-logo.png","hash":"d187b5a72715c29569368152b2f4084959e6adce","modified":1656661820950},{"_id":"public/utils/coordtransform.js","hash":"eccc118ad199a5b0284da3c77b68527e5cc75fb0","modified":1656662892188},{"_id":"public/search.xml","hash":"a08442f6b769233dc57ade2c3eaa47e093c1122c","modified":1666340495391},{"_id":"public/tags/index.html","hash":"7cb55855ced4f06d0fc493c7fecfe6217fe0080a","modified":1666340495391},{"_id":"public/404.html","hash":"8b7fb08d14866076ae8c07fb276a1d9b22cadcf4","modified":1666340495391},{"_id":"public/categories/index.html","hash":"68effe7b0cad787a3e55ede8cd4c6e396e3d8824","modified":1666340495391},{"_id":"public/archives/page/3/index.html","hash":"9513261cb10a42e9cda5a05f0898433efdc2642a","modified":1666340495391},{"_id":"public/archives/2021/page/3/index.html","hash":"8c2afcdfb135d308675fa688978a5f9488b25f5f","modified":1666340495391},{"_id":"public/archives/2021/08/page/2/index.html","hash":"e774dc162dba7af0a24b4abb6e5d0f048e17e914","modified":1666340495391},{"_id":"public/archives/2021/12/index.html","hash":"9334f48449e1464cd5b9644a68e68ca2da3f6735","modified":1666340495391},{"_id":"public/archives/2022/index.html","hash":"bf156a0adb6869820c1727cbb165d5815eecd818","modified":1666340495391},{"_id":"public/archives/2022/04/index.html","hash":"51978f6e6445b1156fc4442ef8c68854815680fa","modified":1666340495391},{"_id":"public/archives/2022/07/index.html","hash":"c1347d27a0aafb9a7cab7664a3595583a196c720","modified":1666340495391},{"_id":"public/categories/经验随笔/index.html","hash":"6e1a5f05ca59b31aa9a30fdebae37c507bc36442","modified":1666340495391},{"_id":"public/categories/问题记录/index.html","hash":"39e5339e5c1a4aa3263a5a45587810620d0f5349","modified":1666340495391},{"_id":"public/categories/工具/index.html","hash":"c4787fadec6bfe718d32a2131967f13db6767348","modified":1666340495391},{"_id":"public/tags/Git/index.html","hash":"678e6b6409523ada3cf931a342e777639173f7e8","modified":1666340495391},{"_id":"public/tags/npm/index.html","hash":"f254c2989dc51a810a3feec7939d10f2b777b5cd","modified":1666340495391},{"_id":"public/tags/Linux/index.html","hash":"000c35f97f20f47844a0bc547362de29122a232e","modified":1666340495391},{"_id":"public/tags/Shell/index.html","hash":"8cab962a0b032fc74f0ff3f3ef8292107c2f375c","modified":1666340495391},{"_id":"public/tags/Mac/index.html","hash":"00cb8dd96472e19fec549b42a9d28ad9585d30c3","modified":1666340495391},{"_id":"public/tags/Hexo/index.html","hash":"e35d52d7fedf82ff09ed5fc637fbdacd4f51b687","modified":1666340495391},{"_id":"public/tags/Blog/index.html","hash":"26203033832d57e55e81f931d0ebc62188b8ea35","modified":1666340495391},{"_id":"public/tags/Scrcpy/index.html","hash":"b7d84ad44b6a7aab234804f230950e7d3ab781be","modified":1666340495391},{"_id":"public/tags/无线投屏/index.html","hash":"532a04f69d9f99da54e62e939799384a087e7d7d","modified":1666340495391},{"_id":"public/tags/Gitee-Pages/index.html","hash":"b7abd749fd7c2434a7d8cf300d3509b5251b0f3b","modified":1666340495391},{"_id":"public/tags/UniApp/index.html","hash":"13fcef30b2a042f1dcf7e1c2c3faa1b8d5d3eed3","modified":1666340495391},{"_id":"public/tags/GPS/index.html","hash":"a0dafe02074e814223b325e373d4b03ab3f25f6f","modified":1666340495391},{"_id":"public/tags/MacM1/index.html","hash":"ee2b7174063f38c5c47f18e062fc6376ca9c96bd","modified":1666340495391},{"_id":"public/tags/libgdiplus/index.html","hash":"055e069f2f04e859ba523eaea4fa0cca7d57ce61","modified":1666340495391},{"_id":"public/tags/Mac-M1/index.html","hash":"5475b8bc3a154e95f8c859e352b11eec70ee1051","modified":1666340495391},{"_id":"public/tags/Anaconda/index.html","hash":"e6095a027a9e71c50a14daed50fbbbba70f8c302","modified":1666340495391},{"_id":"public/tags/PaddlePaddle/index.html","hash":"536609e0d96e6434914b2ce28d89722762edc517","modified":1666340495391},{"_id":"public/tags/PaddleX/index.html","hash":"dd60e9ef7fcf8bf3284bbc54a4e7a92693faf825","modified":1666340495391},{"_id":"public/tags/VC/index.html","hash":"eb28f61234e9dc65066278257b4bf081cf57e01c","modified":1666340495391},{"_id":"public/tags/ML/index.html","hash":"6bbe0f19437c8e7937d1a6fa244505d60bd0175d","modified":1666340495391},{"_id":"public/tags/GIS/index.html","hash":"97224593fa9a30fe1a6a3c8e37d84e6101a90978","modified":1666340495391},{"_id":"public/tags/H5/index.html","hash":"88d695a4cc1a51af3318204db92617cb4262223e","modified":1666340495391},{"_id":"public/tags/定位/index.html","hash":"95a70116e64a6196ea4e71d995621ef42d19f93a","modified":1666340495391},{"_id":"public/tags/天地图/index.html","hash":"0d45d7bb27fd20523e828bb0fc7c63ac12506d08","modified":1666340495391},{"_id":"public/tags/coordinate/index.html","hash":"b4ceed8152b036cb856d84f2192a541ea1148377","modified":1666340495391},{"_id":"public/tags/wgs84/index.html","hash":"ab00500e64430443f6a5ff4090354cb82de3fdc1","modified":1666340495391},{"_id":"public/tags/bd09/index.html","hash":"e30ebe5e153aa2e69118fb1d8a20392ffe7bf5cf","modified":1666340495391},{"_id":"public/tags/gcj02/index.html","hash":"1bbd7750cb751e56ed7bcf09c985fe10f3f2a395","modified":1666340495391},{"_id":"public/tags/transform/index.html","hash":"03e8ae49b1402af684d793c3cb240d8d845b05dd","modified":1666340495391},{"_id":"public/Python/MacM1Python/index.html","hash":"f461ac6c046c850f3948f0f898f693b6afbc06d8","modified":1666340495391},{"_id":"public/ExperienceEssay/Npm/index.html","hash":"68897318d753d3e89a0191daa7df13e644a436f8","modified":1666340495391},{"_id":"public/Python/Psycopg/index.html","hash":"569aa8e9d735564bd66e822bee72bce138f9e96d","modified":1666340495391},{"_id":"public/Utils/Coordtransform/index.html","hash":"b7de976fd661e3d0450379869d0d8bc517427ccc","modified":1666340495391},{"_id":"public/Python/Mediapipe/SelfieSegmentation/index.html","hash":"9e774ccdec0ea44e5403a4cff27fbe4baa334b6d","modified":1666340495391},{"_id":"public/Python/Mediapipe/PoseClassification/index.html","hash":"d1a6f67b8393df21f67b9db7eab07e27026111ba","modified":1666340495391},{"_id":"public/Python/Mediapipe/Pose/index.html","hash":"df4447764195abae706953e7fc6ffeec7ee13e93","modified":1666340495391},{"_id":"public/Python/Mediapipe/Holistic/index.html","hash":"fad64cf5fa7d65324f68aee593a5cdb1b6e03b39","modified":1666340495391},{"_id":"public/Python/Mediapipe/Objectron/index.html","hash":"7df042488b4f42c479e582035683747777f5c45e","modified":1666340495391},{"_id":"public/Python/Mediapipe/Hands/index.html","hash":"18700acf1c19c5d778afccd571c45128c6d44896","modified":1666340495391},{"_id":"public/Python/Mediapipe/FaceMesh/index.html","hash":"fa6453789e249d1dd542636063423a6f4dda8037","modified":1666340495391},{"_id":"public/Python/Mediapipe/Face/index.html","hash":"0c256a4b328558305b93df101ddea0f5b02d998b","modified":1666340495391},{"_id":"public/Python/Mediapipe/Install/index.html","hash":"697736af5a0d213271977f3611d934bdcc7610ae","modified":1666340495391},{"_id":"public/ExperienceEssay/Scrcpy/index.html","hash":"3ea700e30e7aa14fd1bf1fc2000bb7c72311f928","modified":1666340495391},{"_id":"public/Problem/libgdiplus/index.html","hash":"f384d173019d1858f176cb68b51530c4c665a88e","modified":1666340495391},{"_id":"public/ExperienceEssay/Git/index.html","hash":"5ad59d62b28b28b5a4a47dd060bb6a560af4f0a7","modified":1666340495391},{"_id":"public/ExperienceEssay/GiteeHexo/index.html","hash":"c5b826014c6c129bb310febc1f28165ce1a762c7","modified":1666340495391},{"_id":"public/Problem/MacApiError/index.html","hash":"b95090f5f3b6980e72046bf0a060aa3f2008e622","modified":1666340495391},{"_id":"public/Linux/LinuxShell/index.html","hash":"35af9ed0aad3ea4e42cb1439ccd3fbe4705c94fe","modified":1666340495391},{"_id":"public/Problem/UniApp_GPS/index.html","hash":"619ea854282aafeb2d4aba75bdf31edccea3a58a","modified":1666340495391},{"_id":"public/Paddlex/Install/index.html","hash":"3aad5deb4995140d61ad20a52bc28052c4832bb3","modified":1666340495391},{"_id":"public/H5/PlusAPI/Geolocation/index.html","hash":"645eb7804c5d73adefd663e71a77d0f77d455d2a","modified":1666340495391},{"_id":"public/GIS/TDT/FirstCode/index.html","hash":"640fe6876af69e1b08a75338c92cf65af8f12d5f","modified":1666340495391},{"_id":"public/Xamarin/Forms/Summarize/index.html","hash":"fe1a7d9b1dc9b4ebd0ad67b2a3c6b48c9c8b381b","modified":1666340495391},{"_id":"public/Xamarin/Forms/12_UrlData/index.html","hash":"852d5e14342ac804f1b9cf3a2d80a58afd4ebaff","modified":1666340495391},{"_id":"public/Xamarin/Forms/11_Sqlite/index.html","hash":"67327748508864bc47fb15a9eab292e47f91ff57","modified":1666340495391},{"_id":"public/Xamarin/Forms/10_LifeCycle/index.html","hash":"27715e64d6f15cb5564cf8b66c124b209035b5d3","modified":1666340495391},{"_id":"public/Xamarin/Forms/9_PopWin/index.html","hash":"bfb09e308d34b2f7f73bdc60ec1e7c4095ecea68","modified":1666340495391},{"_id":"public/Xamarin/Forms/8_ListView/index.html","hash":"7d75f35a44dac28264b7e207ac15e307ed5b5397","modified":1666340495391},{"_id":"public/Xamarin/Forms/7_Image/index.html","hash":"0b9a624f2099e030ae559694492c51a9a144daa7","modified":1666340495391},{"_id":"public/Xamarin/Forms/6_Editor/index.html","hash":"660cecd7d57b1a28c69e745b316bc160c6fdc106","modified":1666340495391},{"_id":"public/Xamarin/Forms/5_Entry/index.html","hash":"dee414486e8182f63e8dcf8685f3dd63ec284a72","modified":1666340495391},{"_id":"public/Xamarin/Forms/4_Button/index.html","hash":"e30e15d74291fc842a0e834dbb5e658ddbd2048e","modified":1666340495391},{"_id":"public/Xamarin/Forms/3_Label/index.html","hash":"958a6906ee680b62c5d4043bf06a3610d85d674b","modified":1666340495391},{"_id":"public/Xamarin/Forms/2_Grid/index.html","hash":"2f4729b8340f5552ca3a196cbf880ea9bc3be6ce","modified":1666340495391},{"_id":"public/Xamarin/Forms/1_StackLayout/index.html","hash":"da29d14605c61c3697f42e6eafffac8cf1c01a2c","modified":1666340495391},{"_id":"public/archives/page/2/index.html","hash":"a154735f28d53d4ca076bec521cba01b4ec5858b","modified":1666340495391},{"_id":"public/archives/index.html","hash":"7526eda20cccc5a3f3943afd25287713666893ca","modified":1666340495391},{"_id":"public/archives/2021/page/2/index.html","hash":"ecd53728a6fecb0ab9d672ea2ac44f2697a89add","modified":1666340495391},{"_id":"public/archives/2021/index.html","hash":"c3353d1cd14e0ccba907197f275ca2cf0401410b","modified":1666340495391},{"_id":"public/Xamarin/Forms/FirstCode/index.html","hash":"5575d15265f5eca087a26229461adf2370811af2","modified":1666340495391},{"_id":"public/archives/2021/08/index.html","hash":"70a75a5e629d76663daf03840a3c4caf4ddec7a5","modified":1666340495391},{"_id":"public/archives/2021/09/index.html","hash":"77489e951183a92dbb1dcd0bcce796647d360404","modified":1666340495391},{"_id":"public/categories/学习笔记/index.html","hash":"6bf06c02df532fce998ab3b908a04375944e7f20","modified":1666340495391},{"_id":"public/categories/学习笔记/page/2/index.html","hash":"6716f0db5f16bd8772165c3cbd323af17c683160","modified":1666340495391},{"_id":"public/index.html","hash":"6295c94d1decad4780716051335227e4a40cfd11","modified":1666340495391},{"_id":"public/page/2/index.html","hash":"3187ba17b6d302bfb56c17b2ee50e2880940c465","modified":1666340495391},{"_id":"public/page/3/index.html","hash":"1f0d7a260dcd591032012deab4b766c0ebc116c4","modified":1666340495391},{"_id":"public/tags/NetCore/index.html","hash":"68fb5dfb96de5b9bac041fded7a1437c9d5d1f60","modified":1666340495391},{"_id":"public/tags/Python/index.html","hash":"8e18627953360a5943edca46afdd63ea9b33b5de","modified":1666340495391},{"_id":"public/tags/Mediapipe/index.html","hash":"37e4ed5dc4c70c69080cae75c192f8866d45e2c6","modified":1666340495391},{"_id":"public/tags/OpenCV/index.html","hash":"d8b84f506cc7bc3e3a6cf7b128e9082a17990c21","modified":1666340495391},{"_id":"public/tags/PostgreSQL/index.html","hash":"c0f0967313ec6368632187a5c2ef3e7a3c89035e","modified":1666340495391},{"_id":"public/tags/Psycopg/index.html","hash":"6758d798100a912bab6b2b1c9c1f6ca0bf5559f9","modified":1666340495391},{"_id":"public/tags/Xamarin/index.html","hash":"555899c98db480e5378466d6019ff78ab9f1271d","modified":1666340495391},{"_id":"public/images/favicon-32x32-next.png","hash":"7af68b13a8203e98d21324a70a32673585702dd2","modified":1656662892188},{"_id":"public/images/favicon-16x16-next.png","hash":"382c19e2852ebe769c5b35da7d74427b79ed016b","modified":1656662892188},{"_id":"public/images/apple-touch-icon-next.png","hash":"4911666d4050cf57fcf49f16c86dd2650889d664","modified":1656662892188},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1656662892188},{"_id":"public/images/paypal.png","hash":"a108b3f7553d7a03f66f8feb000c93c394626bec","modified":1656662892188},{"_id":"public/images/logo.svg","hash":"8849054569a170dcfa5f8b1c4b1d621076784d1f","modified":1656662892188},{"_id":"public/css/noscript.css","hash":"ec89b3425fbce20863d554c6fd495ea29c3c303d","modified":1656662892188},{"_id":"public/js/motion.js","hash":"f7c825cbff11885fa0dffa64824fd00e505d6a8d","modified":1656662892188},{"_id":"public/js/next-boot.js","hash":"da0f07f9eaaa83de70128b0feaea3fdadb90457a","modified":1656662892188},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1656662892188},{"_id":"public/js/pjax.js","hash":"919f5281c4a04d11cfd94573ecf57b3dbabd3cc8","modified":1656662892188},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1656662892188},{"_id":"public/js/schemes/muse.js","hash":"9794bd4fc6a458322949d6a0ade89cd1026bc69f","modified":1656662892188},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1656662892188},{"_id":"public/js/utils.js","hash":"200088bfd042f5304b2a04befab0829148845e0e","modified":1656662892188},{"_id":"public/js/third-party/search/local-search.js","hash":"4536cb6d0a9bbaaa86fab3fa0101f6a3a3ec5a76","modified":1656662892188},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1656662892188},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1656662892188},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1656662892188},{"_id":"public/css/main.css","hash":"03e4fbe22d467616668ddd8f8632611da1a8ee4d","modified":1656662892188},{"_id":"public/images/alipay.png","hash":"0947fd2c3aa3d716273ba947bba9fcabf1dcf9b7","modified":1656662892188},{"_id":"public/images/wechatpay.png","hash":"b64c8b629efcdc602b678ba6c7627cfa23c9dbde","modified":1656662892188},{"_id":"public/GIS/TDT/FirstCode/image.jpg","hash":"04dedd771c9baa98aa3567409f7b1e3f1a5e2d8e","modified":1656662892188},{"_id":"public/Problem/libgdiplus/install.png","hash":"747692ad42cf5bb2e84a977b061fa724f0fd36d6","modified":1656662892188},{"_id":"public/favicon.ico","hash":"4b1fb89295439756afeb8062413821a20207579b","modified":1656662892188},{"_id":"public/images/custom-logo.png","hash":"d187b5a72715c29569368152b2f4084959e6adce","modified":1656662892188},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1662536757558},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/matomo.njk","hash":"4e89648a8ec8194c5823064cbca39c938a799006","modified":1662536757584},{"_id":"public/js/third-party/analytics/matomo.js","hash":"c6a25b26a1443caa70b47fd3dfa282271574deb5","modified":1666340495391}],"Category":[{"name":"经验随笔","_id":"cl526b8xq00044d0ha87u3xvf"},{"name":"学习笔记","_id":"cl526b8xu000h4d0h81ixeyvk"},{"name":"问题记录","_id":"cl526b8xv000o4d0h74an9cx7"},{"name":"工具","_id":"cl526b8xx001d4d0h75vghlgt"}],"Data":[],"Page":[{"title":"404","date":"2021-08-19T04:09:08.000Z","comments":0,"_content":"\n<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"Back to home\">\n</script>\n","source":"404.md","raw":"---\ntitle: \"404\"\ndate: 2021-08-19 12:09:08\ncomments: false\n---\n\n<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"Back to home\">\n</script>\n","updated":"2022-07-01T07:50:20.935Z","path":"404.html","layout":"page","_id":"cl526b8xo00004d0hae430awc","content":"<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"Back to home\">\n</script>\n","site":{"data":{}},"excerpt":"","more":"<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"Back to home\">\n</script>\n"},{"title":"标签","date":"2022-07-01T07:50:20.952Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 021-08-18 17:34:20\ntype: tags\n---\n","updated":"2022-07-01T07:50:20.952Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl526b8xq00024d0h7ksff954","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"/**\n * Created by Wandergis on 2015/7/8.\n * 提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换\n */\n//UMD魔法代码\n// if the module has no dependencies, the above pattern can be simplified to\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.coordtransform = factory();\n  }\n}(this, function () {\n  //定义一些常量\n  var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\n  var PI = 3.1415926535897932384626;\n  var a = 6378245.0;\n  var ee = 0.00669342162296594323;\n  /**\n   * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02)的转换\n   * 即 百度 转 谷歌、高德\n   * @param bd_lon\n   * @param bd_lat\n   * @returns {*[]}\n   */\n  var bd09togcj02 = function bd09togcj02(bd_lon, bd_lat) {\n    var bd_lon = +bd_lon;\n    var bd_lat = +bd_lat;\n    var x = bd_lon - 0.0065;\n    var y = bd_lat - 0.006;\n    var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI);\n    var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI);\n    var gg_lng = z * Math.cos(theta);\n    var gg_lat = z * Math.sin(theta);\n    return [gg_lng, gg_lat]\n  };\n\n  /**\n   * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换\n   * 即谷歌、高德 转 百度\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02tobd09 = function gcj02tobd09(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n    var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n    var bd_lng = z * Math.cos(theta) + 0.0065;\n    var bd_lat = z * Math.sin(theta) + 0.006;\n    return [bd_lng, bd_lat]\n  };\n\n  /**\n   * WGS84转GCj02\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var wgs84togcj02 = function wgs84togcj02(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [mglng, mglat]\n    }\n  };\n\n  /**\n   * GCJ02 转换为 WGS84\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02towgs84 = function gcj02towgs84(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [lng * 2 - mglng, lat * 2 - mglat]\n    }\n  };\n\n  var transformlat = function transformlat(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n  };\n\n  var transformlng = function transformlng(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n  };\n\n  /**\n   * 判断是否在国内，不在国内则不做偏移\n   * @param lng\n   * @param lat\n   * @returns {boolean}\n   */\n  var out_of_china = function out_of_china(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    // 纬度3.86~53.55,经度73.66~135.05 \n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n  };\n\n  return {\n    bd09togcj02: bd09togcj02,\n    gcj02tobd09: gcj02tobd09,\n    wgs84togcj02: wgs84togcj02,\n    gcj02towgs84: gcj02towgs84\n  }\n}));\n","source":"utils/coordtransform.js","raw":"/**\n * Created by Wandergis on 2015/7/8.\n * 提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换\n */\n//UMD魔法代码\n// if the module has no dependencies, the above pattern can be simplified to\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.coordtransform = factory();\n  }\n}(this, function () {\n  //定义一些常量\n  var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\n  var PI = 3.1415926535897932384626;\n  var a = 6378245.0;\n  var ee = 0.00669342162296594323;\n  /**\n   * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02)的转换\n   * 即 百度 转 谷歌、高德\n   * @param bd_lon\n   * @param bd_lat\n   * @returns {*[]}\n   */\n  var bd09togcj02 = function bd09togcj02(bd_lon, bd_lat) {\n    var bd_lon = +bd_lon;\n    var bd_lat = +bd_lat;\n    var x = bd_lon - 0.0065;\n    var y = bd_lat - 0.006;\n    var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI);\n    var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI);\n    var gg_lng = z * Math.cos(theta);\n    var gg_lat = z * Math.sin(theta);\n    return [gg_lng, gg_lat]\n  };\n\n  /**\n   * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换\n   * 即谷歌、高德 转 百度\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02tobd09 = function gcj02tobd09(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n    var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n    var bd_lng = z * Math.cos(theta) + 0.0065;\n    var bd_lat = z * Math.sin(theta) + 0.006;\n    return [bd_lng, bd_lat]\n  };\n\n  /**\n   * WGS84转GCj02\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var wgs84togcj02 = function wgs84togcj02(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [mglng, mglat]\n    }\n  };\n\n  /**\n   * GCJ02 转换为 WGS84\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02towgs84 = function gcj02towgs84(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [lng * 2 - mglng, lat * 2 - mglat]\n    }\n  };\n\n  var transformlat = function transformlat(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n  };\n\n  var transformlng = function transformlng(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n  };\n\n  /**\n   * 判断是否在国内，不在国内则不做偏移\n   * @param lng\n   * @param lat\n   * @returns {boolean}\n   */\n  var out_of_china = function out_of_china(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    // 纬度3.86~53.55,经度73.66~135.05 \n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n  };\n\n  return {\n    bd09togcj02: bd09togcj02,\n    gcj02tobd09: gcj02tobd09,\n    wgs84togcj02: wgs84togcj02,\n    gcj02towgs84: gcj02towgs84\n  }\n}));\n","date":"2022-07-01T07:50:20.952Z","updated":"2022-07-01T07:50:20.952Z","path":"utils/coordtransform.js","layout":"false","title":"","comments":1,"_id":"cl526b8xr00064d0h0aq93fd0","content":"/**\n * Created by Wandergis on 2015/7/8.\n * 提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换\n */\n//UMD魔法代码\n// if the module has no dependencies, the above pattern can be simplified to\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.coordtransform = factory();\n  }\n}(this, function () {\n  //定义一些常量\n  var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\n  var PI = 3.1415926535897932384626;\n  var a = 6378245.0;\n  var ee = 0.00669342162296594323;\n  /**\n   * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02)的转换\n   * 即 百度 转 谷歌、高德\n   * @param bd_lon\n   * @param bd_lat\n   * @returns {*[]}\n   */\n  var bd09togcj02 = function bd09togcj02(bd_lon, bd_lat) {\n    var bd_lon = +bd_lon;\n    var bd_lat = +bd_lat;\n    var x = bd_lon - 0.0065;\n    var y = bd_lat - 0.006;\n    var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI);\n    var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI);\n    var gg_lng = z * Math.cos(theta);\n    var gg_lat = z * Math.sin(theta);\n    return [gg_lng, gg_lat]\n  };\n\n  /**\n   * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换\n   * 即谷歌、高德 转 百度\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02tobd09 = function gcj02tobd09(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n    var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n    var bd_lng = z * Math.cos(theta) + 0.0065;\n    var bd_lat = z * Math.sin(theta) + 0.006;\n    return [bd_lng, bd_lat]\n  };\n\n  /**\n   * WGS84转GCj02\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var wgs84togcj02 = function wgs84togcj02(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [mglng, mglat]\n    }\n  };\n\n  /**\n   * GCJ02 转换为 WGS84\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02towgs84 = function gcj02towgs84(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [lng * 2 - mglng, lat * 2 - mglat]\n    }\n  };\n\n  var transformlat = function transformlat(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n  };\n\n  var transformlng = function transformlng(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n  };\n\n  /**\n   * 判断是否在国内，不在国内则不做偏移\n   * @param lng\n   * @param lat\n   * @returns {boolean}\n   */\n  var out_of_china = function out_of_china(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    // 纬度3.86~53.55,经度73.66~135.05 \n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n  };\n\n  return {\n    bd09togcj02: bd09togcj02,\n    gcj02tobd09: gcj02tobd09,\n    wgs84togcj02: wgs84togcj02,\n    gcj02towgs84: gcj02towgs84\n  }\n}));\n","site":{"data":{}},"excerpt":"","more":"/**\n * Created by Wandergis on 2015/7/8.\n * 提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换\n */\n//UMD魔法代码\n// if the module has no dependencies, the above pattern can be simplified to\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.coordtransform = factory();\n  }\n}(this, function () {\n  //定义一些常量\n  var x_PI = 3.14159265358979324 * 3000.0 / 180.0;\n  var PI = 3.1415926535897932384626;\n  var a = 6378245.0;\n  var ee = 0.00669342162296594323;\n  /**\n   * 百度坐标系 (BD-09) 与 火星坐标系 (GCJ-02)的转换\n   * 即 百度 转 谷歌、高德\n   * @param bd_lon\n   * @param bd_lat\n   * @returns {*[]}\n   */\n  var bd09togcj02 = function bd09togcj02(bd_lon, bd_lat) {\n    var bd_lon = +bd_lon;\n    var bd_lat = +bd_lat;\n    var x = bd_lon - 0.0065;\n    var y = bd_lat - 0.006;\n    var z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_PI);\n    var theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_PI);\n    var gg_lng = z * Math.cos(theta);\n    var gg_lat = z * Math.sin(theta);\n    return [gg_lng, gg_lat]\n  };\n\n  /**\n   * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换\n   * 即谷歌、高德 转 百度\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02tobd09 = function gcj02tobd09(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var z = Math.sqrt(lng * lng + lat * lat) + 0.00002 * Math.sin(lat * x_PI);\n    var theta = Math.atan2(lat, lng) + 0.000003 * Math.cos(lng * x_PI);\n    var bd_lng = z * Math.cos(theta) + 0.0065;\n    var bd_lat = z * Math.sin(theta) + 0.006;\n    return [bd_lng, bd_lat]\n  };\n\n  /**\n   * WGS84转GCj02\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var wgs84togcj02 = function wgs84togcj02(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [mglng, mglat]\n    }\n  };\n\n  /**\n   * GCJ02 转换为 WGS84\n   * @param lng\n   * @param lat\n   * @returns {*[]}\n   */\n  var gcj02towgs84 = function gcj02towgs84(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    if (out_of_china(lng, lat)) {\n      return [lng, lat]\n    } else {\n      var dlat = transformlat(lng - 105.0, lat - 35.0);\n      var dlng = transformlng(lng - 105.0, lat - 35.0);\n      var radlat = lat / 180.0 * PI;\n      var magic = Math.sin(radlat);\n      magic = 1 - ee * magic * magic;\n      var sqrtmagic = Math.sqrt(magic);\n      dlat = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtmagic) * PI);\n      dlng = (dlng * 180.0) / (a / sqrtmagic * Math.cos(radlat) * PI);\n      var mglat = lat + dlat;\n      var mglng = lng + dlng;\n      return [lng * 2 - mglng, lat * 2 - mglat]\n    }\n  };\n\n  var transformlat = function transformlat(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = -100.0 + 2.0 * lng + 3.0 * lat + 0.2 * lat * lat + 0.1 * lng * lat + 0.2 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lat * PI) + 40.0 * Math.sin(lat / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (160.0 * Math.sin(lat / 12.0 * PI) + 320 * Math.sin(lat * PI / 30.0)) * 2.0 / 3.0;\n    return ret\n  };\n\n  var transformlng = function transformlng(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    var ret = 300.0 + lng + 2.0 * lat + 0.1 * lng * lng + 0.1 * lng * lat + 0.1 * Math.sqrt(Math.abs(lng));\n    ret += (20.0 * Math.sin(6.0 * lng * PI) + 20.0 * Math.sin(2.0 * lng * PI)) * 2.0 / 3.0;\n    ret += (20.0 * Math.sin(lng * PI) + 40.0 * Math.sin(lng / 3.0 * PI)) * 2.0 / 3.0;\n    ret += (150.0 * Math.sin(lng / 12.0 * PI) + 300.0 * Math.sin(lng / 30.0 * PI)) * 2.0 / 3.0;\n    return ret\n  };\n\n  /**\n   * 判断是否在国内，不在国内则不做偏移\n   * @param lng\n   * @param lat\n   * @returns {boolean}\n   */\n  var out_of_china = function out_of_china(lng, lat) {\n    var lat = +lat;\n    var lng = +lng;\n    // 纬度3.86~53.55,经度73.66~135.05 \n    return !(lng > 73.66 && lng < 135.05 && lat > 3.86 && lat < 53.55);\n  };\n\n  return {\n    bd09togcj02: bd09togcj02,\n    gcj02tobd09: gcj02tobd09,\n    wgs84togcj02: wgs84togcj02,\n    gcj02towgs84: gcj02towgs84\n  }\n}));\n"},{"title":"分类","date":"2022-07-01T07:50:20.946Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 021-08-18 17:34:20\ntype: categories\n---\n","updated":"2022-07-01T07:50:20.946Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl526b8xs00084d0hhvb866qz","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Git 命令行使用","date":"2021-09-14T08:55:21.000Z","_content":"\n### 1. 简介\n\nGit 命令行总结\n\n<!-- more -->\n\n### 2. init 初始化\n\n- 初始化Git代码仓库\n\n  ```bash\n  git init\n  ```\n\n### 3. config 配置\n\n- 查看配置\n\n  ```bash\n  git config --list｜-l\n  ```\n\n- 查看系统配置\n\n  ```bash\n  git config --system --list｜-l\n  ```\n\n- 查看用户（global）配置\n\n  ```bash\n  git config --global --list｜-l\n  ```\n\n- 查看仓库配置\n\n  ```bash\n  git config --local --list｜-l\n  ```\n\n### 4. add 添加\n\n- 添加所有新文件\n\n  ```bash\n  git add .\n  ```\n\n### 5. commit 提交\n\n- 提交并添加更改\n\n  ```bash\n  git commit -am 'message'\n  ```\n\n- 修改提交注释\n\n  ```bash\n  git commit --amend\n  ```\n\n### 6. remote 跟踪\n\n- 跟踪远程分支到指定分支\n\n  ```bash\n  git remote add origin/[branchName] [branchName]\n  ```\n\n- 修改远程仓库地址\n\n  ```bash\n  git remote set-url origin [newUrl]\n  ```\n\n- 查看远程仓库地址\n\n  ```bash\n  git remote -v\n  ```\n\n### 7. pull 拉取\n\n- 远程分支拉取 - 不变基\n\n  ```bash\n  git pull origin [branchName]:[branchName] --no-rebase\n  ```\n\n- 远程分支拉取 - 变基\n\n  ```bash\n  git pull origin [branchName]:[branchName] --rebase\n  ```\n\n- 允许不相关历史强制合并\n\n  ```bash\n  git pull origin master --allow-unrelated-histories\n  ```\n\n### 8. push 推送\n\n- 推送到指定的远程分支\n\n  ```bash\n  git push origin [branchName]\n  ```\n\n- 推送到指定的远程分支 - 强制\n\n  ```bash\n  git push origin [branchName] --force\n  ```\n\n- 新建并推送到远程分支\n\n  ```bash\n  git push --set-upstream origin [branchName]\n  ```\n\n### 9. reset 重置\n\n- 重置当前最后一次提交\n\n  ```bash\n  git reset --soft HEAD^\n  ```\n\n### 10. cherry-pick 应用提交\n\n- 应用指定提交到当前分支\n\n  ```bash\n  git cherry-pick [commitHash]\n  ```\n\n- 最近一次提交\n\n  ```bash\n  git cherry-pick [branchName]\n  ```\n\n- 多个提交\n\n  ```bash\n  git cherry-pick [commitHash] [commitHash] ...\n  ```\n\n- 一段提交不包含开头\n\n  ```bash\n  git cherry-pick [commitHash]..[commitHash]\n  ```\n\n- 一段提交包含开头\n\n  ```bash\n  git cherry-pick [commitHash]^..[commitHash]\n  ```\n\n-\n\n### 11. stash 储藏\n\n- 储藏当前更改\n\n  ```bash\n  git stash\n  ```\n\n- 读取储藏更改\n\n  ```bash\n  git stash pop\n  ```\n\n### 12. branch 分支\n\n- 查看分支\n\n  ```bash list\n  git branch -l\n  ```\n\n- 查看分支详情\n\n  ```bash\n  git branch -vv\n  ```\n\n- 创建分支\n\n  ```bash\n  git branch [branchName]\n  ```\n\n- 创建分支并指定跟踪分支\n\n  ```bash\n  git branch [branchName] -t origin/[branchName]\n  ```\n\n- 删除本地分支\n\n  ```bash\n  git branch -d|-D [branchName]\n  ```\n\n- 按指定提交创建分支\n\n  ```bash\n  git branch [branch] [start point]\n  ```\n\n- 设置跟踪的远程分支\n\n  ```bash\n  git branch --set-upstream-to origin/[branchName] [branchName]\n  ```\n\n- 修改跟踪的远程分支\n\n  ```bash\n  git branch -u origin/[branchName] [branchName]\n  ```\n\n### 13. checkout 检出\n\n- 撤消当前分支所有修改\n\n  ```bash\n  git checkout .\n  ```\n\n- 切换分支\n\n  ```bash\n  git checkout [branchName]\n  ```\n\n- 创建并切换\n\n  ```bash\n  git checkout -b [branchName]\n  ```\n\n- 创建并切换、设置跟踪的远程分支\n\n  ```bash\n  git checkout -b [branchName] -t origin/[branchName]\n  ```\n\n### 14. rebase 变基\n\n- no branch, rebasing master （当前无分支，可变基到master分支）\n\n  ```bash\n  git rebase --continue\n  ```\n","source":"_posts/ExperienceEssay/Git.md","raw":"---\ntitle: Git 命令行使用\ndate: 2021-09-14 16:55:21\ncategories:\n  - 经验随笔\ntags:\n  - Git\n---\n\n### 1. 简介\n\nGit 命令行总结\n\n<!-- more -->\n\n### 2. init 初始化\n\n- 初始化Git代码仓库\n\n  ```bash\n  git init\n  ```\n\n### 3. config 配置\n\n- 查看配置\n\n  ```bash\n  git config --list｜-l\n  ```\n\n- 查看系统配置\n\n  ```bash\n  git config --system --list｜-l\n  ```\n\n- 查看用户（global）配置\n\n  ```bash\n  git config --global --list｜-l\n  ```\n\n- 查看仓库配置\n\n  ```bash\n  git config --local --list｜-l\n  ```\n\n### 4. add 添加\n\n- 添加所有新文件\n\n  ```bash\n  git add .\n  ```\n\n### 5. commit 提交\n\n- 提交并添加更改\n\n  ```bash\n  git commit -am 'message'\n  ```\n\n- 修改提交注释\n\n  ```bash\n  git commit --amend\n  ```\n\n### 6. remote 跟踪\n\n- 跟踪远程分支到指定分支\n\n  ```bash\n  git remote add origin/[branchName] [branchName]\n  ```\n\n- 修改远程仓库地址\n\n  ```bash\n  git remote set-url origin [newUrl]\n  ```\n\n- 查看远程仓库地址\n\n  ```bash\n  git remote -v\n  ```\n\n### 7. pull 拉取\n\n- 远程分支拉取 - 不变基\n\n  ```bash\n  git pull origin [branchName]:[branchName] --no-rebase\n  ```\n\n- 远程分支拉取 - 变基\n\n  ```bash\n  git pull origin [branchName]:[branchName] --rebase\n  ```\n\n- 允许不相关历史强制合并\n\n  ```bash\n  git pull origin master --allow-unrelated-histories\n  ```\n\n### 8. push 推送\n\n- 推送到指定的远程分支\n\n  ```bash\n  git push origin [branchName]\n  ```\n\n- 推送到指定的远程分支 - 强制\n\n  ```bash\n  git push origin [branchName] --force\n  ```\n\n- 新建并推送到远程分支\n\n  ```bash\n  git push --set-upstream origin [branchName]\n  ```\n\n### 9. reset 重置\n\n- 重置当前最后一次提交\n\n  ```bash\n  git reset --soft HEAD^\n  ```\n\n### 10. cherry-pick 应用提交\n\n- 应用指定提交到当前分支\n\n  ```bash\n  git cherry-pick [commitHash]\n  ```\n\n- 最近一次提交\n\n  ```bash\n  git cherry-pick [branchName]\n  ```\n\n- 多个提交\n\n  ```bash\n  git cherry-pick [commitHash] [commitHash] ...\n  ```\n\n- 一段提交不包含开头\n\n  ```bash\n  git cherry-pick [commitHash]..[commitHash]\n  ```\n\n- 一段提交包含开头\n\n  ```bash\n  git cherry-pick [commitHash]^..[commitHash]\n  ```\n\n-\n\n### 11. stash 储藏\n\n- 储藏当前更改\n\n  ```bash\n  git stash\n  ```\n\n- 读取储藏更改\n\n  ```bash\n  git stash pop\n  ```\n\n### 12. branch 分支\n\n- 查看分支\n\n  ```bash list\n  git branch -l\n  ```\n\n- 查看分支详情\n\n  ```bash\n  git branch -vv\n  ```\n\n- 创建分支\n\n  ```bash\n  git branch [branchName]\n  ```\n\n- 创建分支并指定跟踪分支\n\n  ```bash\n  git branch [branchName] -t origin/[branchName]\n  ```\n\n- 删除本地分支\n\n  ```bash\n  git branch -d|-D [branchName]\n  ```\n\n- 按指定提交创建分支\n\n  ```bash\n  git branch [branch] [start point]\n  ```\n\n- 设置跟踪的远程分支\n\n  ```bash\n  git branch --set-upstream-to origin/[branchName] [branchName]\n  ```\n\n- 修改跟踪的远程分支\n\n  ```bash\n  git branch -u origin/[branchName] [branchName]\n  ```\n\n### 13. checkout 检出\n\n- 撤消当前分支所有修改\n\n  ```bash\n  git checkout .\n  ```\n\n- 切换分支\n\n  ```bash\n  git checkout [branchName]\n  ```\n\n- 创建并切换\n\n  ```bash\n  git checkout -b [branchName]\n  ```\n\n- 创建并切换、设置跟踪的远程分支\n\n  ```bash\n  git checkout -b [branchName] -t origin/[branchName]\n  ```\n\n### 14. rebase 变基\n\n- no branch, rebasing master （当前无分支，可变基到master分支）\n\n  ```bash\n  git rebase --continue\n  ```\n","slug":"ExperienceEssay/Git","published":1,"updated":"2022-10-21T08:01:18.665Z","_id":"cl526b8xo00014d0h38yj1dzv","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h3><p>Git 命令行总结</p>\n<span id=\"more\"></span>\n\n<h3 id=\"2-init-初始化\"><a href=\"#2-init-初始化\" class=\"headerlink\" title=\"2. init 初始化\"></a>2. init 初始化</h3><ul>\n<li><p>初始化Git代码仓库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"3-config-配置\"><a href=\"#3-config-配置\" class=\"headerlink\" title=\"3. config 配置\"></a>3. config 配置</h3><ul>\n<li><p>查看配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看系统配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--system</span> --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看用户（global）配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看仓库配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--local</span> --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"4-add-添加\"><a href=\"#4-add-添加\" class=\"headerlink\" title=\"4. add 添加\"></a>4. add 添加</h3><ul>\n<li><p>添加所有新文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-commit-提交\"><a href=\"#5-commit-提交\" class=\"headerlink\" title=\"5. commit 提交\"></a>5. commit 提交</h3><ul>\n<li><p>提交并添加更改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-am</span> <span class=\"token string\">'message'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>修改提交注释</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">--amend</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"6-remote-跟踪\"><a href=\"#6-remote-跟踪\" class=\"headerlink\" title=\"6. remote 跟踪\"></a>6. remote 跟踪</h3><ul>\n<li><p>跟踪远程分支到指定分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>修改远程仓库地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote set-url origin <span class=\"token punctuation\">[</span>newUrl<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看远程仓库地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"7-pull-拉取\"><a href=\"#7-pull-拉取\" class=\"headerlink\" title=\"7. pull 拉取\"></a>7. pull 拉取</h3><ul>\n<li><p>远程分支拉取 - 不变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> --no-rebase<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>远程分支拉取 - 变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">--rebase</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>允许不相关历史强制合并</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin master --allow-unrelated-histories<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"8-push-推送\"><a href=\"#8-push-推送\" class=\"headerlink\" title=\"8. push 推送\"></a>8. push 推送</h3><ul>\n<li><p>推送到指定的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>推送到指定的远程分支 - 强制</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">--force</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>新建并推送到远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push --set-upstream origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"9-reset-重置\"><a href=\"#9-reset-重置\" class=\"headerlink\" title=\"9. reset 重置\"></a>9. reset 重置</h3><ul>\n<li><p>重置当前最后一次提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--soft</span> HEAD^<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"10-cherry-pick-应用提交\"><a href=\"#10-cherry-pick-应用提交\" class=\"headerlink\" title=\"10. cherry-pick 应用提交\"></a>10. cherry-pick 应用提交</h3><ul>\n<li><p>应用指定提交到当前分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>最近一次提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>多个提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>一段提交不包含开头</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>一段提交包含开头</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span>^<span class=\"token punctuation\">..</span><span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li></li>\n</ul>\n<h3 id=\"11-stash-储藏\"><a href=\"#11-stash-储藏\" class=\"headerlink\" title=\"11. stash 储藏\"></a>11. stash 储藏</h3><ul>\n<li><p>储藏当前更改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>读取储藏更改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash pop<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"12-branch-分支\"><a href=\"#12-branch-分支\" class=\"headerlink\" title=\"12. branch 分支\"></a>12. branch 分支</h3><ul>\n<li><p>查看分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>list</span></div><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-l</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看分支详情</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-vv</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建分支并指定跟踪分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-t</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>删除本地分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch -d<span class=\"token operator\">|</span>-D <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>按指定提交创建分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>start point<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>设置跟踪的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch --set-upstream-to origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>修改跟踪的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-u</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"13-checkout-检出\"><a href=\"#13-checkout-检出\" class=\"headerlink\" title=\"13. checkout 检出\"></a>13. checkout 检出</h3><ul>\n<li><p>撤消当前分支所有修改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>切换分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建并切换</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建并切换、设置跟踪的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-t</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"14-rebase-变基\"><a href=\"#14-rebase-变基\" class=\"headerlink\" title=\"14. rebase 变基\"></a>14. rebase 变基</h3><ul>\n<li><p>no branch, rebasing master （当前无分支，可变基到master分支）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase <span class=\"token parameter variable\">--continue</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"1-简介\"><a href=\"#1-简介\" class=\"headerlink\" title=\"1. 简介\"></a>1. 简介</h3><p>Git 命令行总结</p>","more":"<h3 id=\"2-init-初始化\"><a href=\"#2-init-初始化\" class=\"headerlink\" title=\"2. init 初始化\"></a>2. init 初始化</h3><ul>\n<li><p>初始化Git代码仓库</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> init<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"3-config-配置\"><a href=\"#3-config-配置\" class=\"headerlink\" title=\"3. config 配置\"></a>3. config 配置</h3><ul>\n<li><p>查看配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看系统配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--system</span> --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看用户（global）配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看仓库配置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--local</span> --list｜-l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"4-add-添加\"><a href=\"#4-add-添加\" class=\"headerlink\" title=\"4. add 添加\"></a>4. add 添加</h3><ul>\n<li><p>添加所有新文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"5-commit-提交\"><a href=\"#5-commit-提交\" class=\"headerlink\" title=\"5. commit 提交\"></a>5. commit 提交</h3><ul>\n<li><p>提交并添加更改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-am</span> <span class=\"token string\">'message'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>修改提交注释</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> commit <span class=\"token parameter variable\">--amend</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"6-remote-跟踪\"><a href=\"#6-remote-跟踪\" class=\"headerlink\" title=\"6. remote 跟踪\"></a>6. remote 跟踪</h3><ul>\n<li><p>跟踪远程分支到指定分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>修改远程仓库地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote set-url origin <span class=\"token punctuation\">[</span>newUrl<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看远程仓库地址</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> remote <span class=\"token parameter variable\">-v</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"7-pull-拉取\"><a href=\"#7-pull-拉取\" class=\"headerlink\" title=\"7. pull 拉取\"></a>7. pull 拉取</h3><ul>\n<li><p>远程分支拉取 - 不变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> --no-rebase<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>远程分支拉取 - 变基</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span>:<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">--rebase</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>允许不相关历史强制合并</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> pull origin master --allow-unrelated-histories<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"8-push-推送\"><a href=\"#8-push-推送\" class=\"headerlink\" title=\"8. push 推送\"></a>8. push 推送</h3><ul>\n<li><p>推送到指定的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>推送到指定的远程分支 - 强制</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">--force</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>新建并推送到远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push --set-upstream origin <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"9-reset-重置\"><a href=\"#9-reset-重置\" class=\"headerlink\" title=\"9. reset 重置\"></a>9. reset 重置</h3><ul>\n<li><p>重置当前最后一次提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> reset <span class=\"token parameter variable\">--soft</span> HEAD^<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"10-cherry-pick-应用提交\"><a href=\"#10-cherry-pick-应用提交\" class=\"headerlink\" title=\"10. cherry-pick 应用提交\"></a>10. cherry-pick 应用提交</h3><ul>\n<li><p>应用指定提交到当前分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>最近一次提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>多个提交</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>一段提交不包含开头</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>一段提交包含开头</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> cherry-pick <span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span>^<span class=\"token punctuation\">..</span><span class=\"token punctuation\">[</span>commitHash<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li></li>\n</ul>\n<h3 id=\"11-stash-储藏\"><a href=\"#11-stash-储藏\" class=\"headerlink\" title=\"11. stash 储藏\"></a>11. stash 储藏</h3><ul>\n<li><p>储藏当前更改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>读取储藏更改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> stash pop<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"12-branch-分支\"><a href=\"#12-branch-分支\" class=\"headerlink\" title=\"12. branch 分支\"></a>12. branch 分支</h3><ul>\n<li><p>查看分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><div class=\"caption\"><span>list</span></div><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-l</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>查看分支详情</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-vv</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建分支并指定跟踪分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-t</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>删除本地分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch -d<span class=\"token operator\">|</span>-D <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>按指定提交创建分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token punctuation\">[</span>branch<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>start point<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>设置跟踪的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch --set-upstream-to origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>修改跟踪的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> branch <span class=\"token parameter variable\">-u</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"13-checkout-检出\"><a href=\"#13-checkout-检出\" class=\"headerlink\" title=\"13. checkout 检出\"></a>13. checkout 检出</h3><ul>\n<li><p>撤消当前分支所有修改</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token builtin class-name\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>切换分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建并切换</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li><p>创建并切换、设置跟踪的远程分支</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> checkout <span class=\"token parameter variable\">-b</span> <span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-t</span> origin/<span class=\"token punctuation\">[</span>branchName<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"14-rebase-变基\"><a href=\"#14-rebase-变基\" class=\"headerlink\" title=\"14. rebase 变基\"></a>14. rebase 变基</h3><ul>\n<li><p>no branch, rebasing master （当前无分支，可变基到master分支）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> rebase <span class=\"token parameter variable\">--continue</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></li>\n</ul>"},{"title":"npm 命令行使用","date":"2022-04-11T01:44:21.000Z","_content":"\n### 简介\n\nnpm 使用经验与命令总结\n\n<!-- more -->\n\n### node-sass 问题\n\n- MacM1 下无法编译 node-sass，问题出现是因 node-sass 不支持 arm64，node16 后支持了 M1 安装包已升级成为 arm64包。\n\n  > 解决办法，去 Node.js 官网下载对应版本的 [x64](https://nodejs.org/dist/v16.14.2/node-v16.14.2-darwin-x64.tar.gz) 版本，然后按手动复制到 /usr/local\n  >\n  > ***注：其他版本同理***\n","source":"_posts/ExperienceEssay/Npm.md","raw":"---\ntitle: npm 命令行使用\ndate: 2022-04-11 09:44:21\ncategories:\n  - 经验随笔\ntags:\n  - npm\n---\n\n### 简介\n\nnpm 使用经验与命令总结\n\n<!-- more -->\n\n### node-sass 问题\n\n- MacM1 下无法编译 node-sass，问题出现是因 node-sass 不支持 arm64，node16 后支持了 M1 安装包已升级成为 arm64包。\n\n  > 解决办法，去 Node.js 官网下载对应版本的 [x64](https://nodejs.org/dist/v16.14.2/node-v16.14.2-darwin-x64.tar.gz) 版本，然后按手动复制到 /usr/local\n  >\n  > ***注：其他版本同理***\n","slug":"ExperienceEssay/Npm","published":1,"updated":"2022-07-01T07:50:20.935Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xq00034d0h0n7b9kns","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>npm 使用经验与命令总结</p>\n<span id=\"more\"></span>\n\n<h3 id=\"node-sass-问题\"><a href=\"#node-sass-问题\" class=\"headerlink\" title=\"node-sass 问题\"></a>node-sass 问题</h3><ul>\n<li><p>MacM1 下无法编译 node-sass，问题出现是因 node-sass 不支持 arm64，node16 后支持了 M1 安装包已升级成为 arm64包。</p>\n<blockquote>\n<p>解决办法，去 Node.js 官网下载对应版本的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvdjE2LjE0LjIvbm9kZS12MTYuMTQuMi1kYXJ3aW4teDY0LnRhci5neg==\">x64<i class=\"fa fa-external-link-alt\"></i></span> 版本，然后按手动复制到 &#x2F;usr&#x2F;local</p>\n<p><em><strong>注：其他版本同理</strong></em></p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>npm 使用经验与命令总结</p>","more":"<h3 id=\"node-sass-问题\"><a href=\"#node-sass-问题\" class=\"headerlink\" title=\"node-sass 问题\"></a>node-sass 问题</h3><ul>\n<li><p>MacM1 下无法编译 node-sass，问题出现是因 node-sass 不支持 arm64，node16 后支持了 M1 安装包已升级成为 arm64包。</p>\n<blockquote>\n<p>解决办法，去 Node.js 官网下载对应版本的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvdjE2LjE0LjIvbm9kZS12MTYuMTQuMi1kYXJ3aW4teDY0LnRhci5neg==\">x64<i class=\"fa fa-external-link-alt\"></i></span> 版本，然后按手动复制到 &#x2F;usr&#x2F;local</p>\n<p><em><strong>注：其他版本同理</strong></em></p>\n</blockquote>\n</li>\n</ul>"},{"title":"Linux 常用命令","date":"2021-08-27T07:18:56.000Z","_content":"\n## 简介\n\nLinux 常用命令\n\n<!-- more -->\n\n### 环境查看\n\n- 操作系统和位数信息\n  `uname -m && cat /etc/*release`\n- 处理器\n  `arch`\n- 系统内核\n  `uname -a`\n- 系统版本\n  `cat /etc/lsb-release`\n- 已加载的文件系统\n  `cat /proc/mounts`\n- PCI 设备\n  `ls pci -tv`\n- USB 设备\n  `ls usb -tv`\n\n### 结束进程命令\n\n1. 查看端口被哪个程序占用\n  `sudo lsof -i tcp:port`\n2. 看到进程的 PID，可以将进程杀死。\n  `sudo kill -9 PID`\n","source":"_posts/Linux/LinuxShell.md","raw":"---\ntitle: Linux 常用命令\ndate: 2021-08-27 15:18:56\ncategories:\n  - 学习笔记\ntags:\n  - Linux\n  - Shell\n---\n\n## 简介\n\nLinux 常用命令\n\n<!-- more -->\n\n### 环境查看\n\n- 操作系统和位数信息\n  `uname -m && cat /etc/*release`\n- 处理器\n  `arch`\n- 系统内核\n  `uname -a`\n- 系统版本\n  `cat /etc/lsb-release`\n- 已加载的文件系统\n  `cat /proc/mounts`\n- PCI 设备\n  `ls pci -tv`\n- USB 设备\n  `ls usb -tv`\n\n### 结束进程命令\n\n1. 查看端口被哪个程序占用\n  `sudo lsof -i tcp:port`\n2. 看到进程的 PID，可以将进程杀死。\n  `sudo kill -9 PID`\n","slug":"Linux/LinuxShell","published":1,"updated":"2022-08-09T01:50:25.400Z","_id":"cl526b8xr00074d0h9oqw5478","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Linux 常用命令</p>\n<span id=\"more\"></span>\n\n<h3 id=\"环境查看\"><a href=\"#环境查看\" class=\"headerlink\" title=\"环境查看\"></a>环境查看</h3><ul>\n<li>操作系统和位数信息<br><code>uname -m &amp;&amp; cat /etc/*release</code></li>\n<li>处理器<br><code>arch</code></li>\n<li>系统内核<br><code>uname -a</code></li>\n<li>系统版本<br><code>cat /etc/lsb-release</code></li>\n<li>已加载的文件系统<br><code>cat /proc/mounts</code></li>\n<li>PCI 设备<br><code>ls pci -tv</code></li>\n<li>USB 设备<br><code>ls usb -tv</code></li>\n</ul>\n<h3 id=\"结束进程命令\"><a href=\"#结束进程命令\" class=\"headerlink\" title=\"结束进程命令\"></a>结束进程命令</h3><ol>\n<li>查看端口被哪个程序占用<br>  <code>sudo lsof -i tcp:port</code></li>\n<li>看到进程的 PID，可以将进程杀死。<br>  <code>sudo kill -9 PID</code></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Linux 常用命令</p>","more":"<h3 id=\"环境查看\"><a href=\"#环境查看\" class=\"headerlink\" title=\"环境查看\"></a>环境查看</h3><ul>\n<li>操作系统和位数信息<br><code>uname -m &amp;&amp; cat /etc/*release</code></li>\n<li>处理器<br><code>arch</code></li>\n<li>系统内核<br><code>uname -a</code></li>\n<li>系统版本<br><code>cat /etc/lsb-release</code></li>\n<li>已加载的文件系统<br><code>cat /proc/mounts</code></li>\n<li>PCI 设备<br><code>ls pci -tv</code></li>\n<li>USB 设备<br><code>ls usb -tv</code></li>\n</ul>\n<h3 id=\"结束进程命令\"><a href=\"#结束进程命令\" class=\"headerlink\" title=\"结束进程命令\"></a>结束进程命令</h3><ol>\n<li>查看端口被哪个程序占用<br>  <code>sudo lsof -i tcp:port</code></li>\n<li>看到进程的 PID，可以将进程杀死。<br>  <code>sudo kill -9 PID</code></li>\n</ol>"},{"title":"Mac + Hexo + Gitee Pages 搭建在线自生成静态Blog","date":"2021-08-31T09:20:46.000Z","_content":"\n## 简介\n\n以前都是在本地生成静态站点，然后提交到代码库再更新 Blog，很不方便。最近看到 Gitee 支持 Hexo 在线生成，于是全部上传到了代码库中，这下可以随时随地记录了。\n\n<!-- more -->\n\n## 环境配置\n\n1. git <https://git-scm.com>\n2. node.js <https://nodejs.org/zh-cn>\n3. hexo <https://hexo.io/zh-cn/docs>\n\n## 部署\n\n具体过程与部署步骤就不在这里说了，hexo 站点中很详细，这里主要说怎么部署到 Gitee\n\n1. 按 hexo 文档本地部署并配置好项目，测试正常\n\n2. 将自己的主题配置文件复制到 Blog 项目根目录\n\n   > 修改文件名为: \\_config.[theme].yml (_theme:主题文件夹名，一般是主题名称_)\n\n3. 将自己的个性化静态文件复制到 source 目录下\n\n   > 如我个性化了部分主题中的图片，于是将这些图片放到了 source 下的 images，在 config 中 使用路径为: /images/[imageName]\n\n4. 上传代码到 Gitee\n\n   > 配置文件和包文件\n   > \\_config.yml、\\_comfig.[theme].yml、package.json\n   > 及文件夹\n   > scaffolds、source、themes\n\n5. 添加 Blog 文章\n\n6. 进入代码库 -> 服务 -> Pages，点击更新\n\n### 大功告成\n\n🎉 现在可以随时在 Gitee 中的 WebIDE 编写文章了！脱离了本地环境的限制，感觉自由 🆓 原来是这么的美好！\n\n> **记得要更新 Blog 内容时去 Pages 再次点击更新哦！**\n\n___\n\n## 初始化\n\n```base\n [npx] hexo init [folder]\n```\n\n## 添加文章\n\n```base\n[npx] hexo new [post] <title>\n```\n\n| 参数          | 描述                                          |\n| :------------ | :-------------------------------------------- |\n| -p, --path    | 自定义新文章的路径                            |\n| -r, --replace | 如果存在同名文章，将其替换                    |\n| -s, --slug    | 文章的 Slug，作为新文章的文件名和发布后的 URL |\n\n## 生成静态文件\n\n```base\n[npx] hexo g | generate\n```\n\n| 选项              | 描述                                                                                                                                                      |\n| :---------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| -d, --deploy      | 文件生成后立即部署网站                                                                                                                                    |\n| -w, --watch       | 监视文件变动                                                                                                                                              |\n| -b, --bail        | 生成过程中如果发生任何未处理的异常则抛出异常                                                                                                              |\n| -f, --force       | 强制重新生成文件</br>Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。</br>使用该参数的效果接近 hexo clean && hexo generate |\n| -c, --concurrency | 最大同时生成文件的数量，默认无限制                                                                                                                        |\n\n## 运行\n\n```base\n[npx] hexo server\n```\n\n| 选项         | 描述                           |\n| :----------- | :----------------------------- |\n| -p, --port   | 重设端口                       |\n| -s, --static | 只使用静态文件                 |\n| -l, --log    | 启动日记记录，使用覆盖记录格式 |\n\n## 部署网站\n\n```base\n[npx] hexo d | deploy\n```\n\n| 选项           | 描述                     |\n| :------------- | :----------------------- |\n| -g, --generate | 部署之前预先生成静态文件 |\n\n## 渲染文件\n\n```base\n[npx] hexo render <file1> [file2] ...\n```\n\n| 选项         | 描述         |\n| :----------- | :----------- |\n| -o, --output | 设置输出路径 |\n\n## 从其他博客系统 [迁移内容](https://hexo.io/zh-cn/docs/migration)\n\n```base\n[npx] hexo migrate <file1> [file2] ...\n```\n\n## 清除缓存\n\n```base\n[npx] hexo clean\n```\n\n## 列出网站资料\n\n```base\n[npx] hexo list <type>\n```\n\n## 显示 Hexo 版本\n\n```base\n[npx] hexo version\n```\n","source":"_posts/ExperienceEssay/GiteeHexo.md","raw":"---\ntitle: Mac + Hexo + Gitee Pages 搭建在线自生成静态Blog\ndate: 2021-08-31 17:20:46\ncategories:\n  - 经验随笔\ntags:\n  - Mac\n  - Hexo\n  - Gitee Pages\n  - Blog\n---\n\n## 简介\n\n以前都是在本地生成静态站点，然后提交到代码库再更新 Blog，很不方便。最近看到 Gitee 支持 Hexo 在线生成，于是全部上传到了代码库中，这下可以随时随地记录了。\n\n<!-- more -->\n\n## 环境配置\n\n1. git <https://git-scm.com>\n2. node.js <https://nodejs.org/zh-cn>\n3. hexo <https://hexo.io/zh-cn/docs>\n\n## 部署\n\n具体过程与部署步骤就不在这里说了，hexo 站点中很详细，这里主要说怎么部署到 Gitee\n\n1. 按 hexo 文档本地部署并配置好项目，测试正常\n\n2. 将自己的主题配置文件复制到 Blog 项目根目录\n\n   > 修改文件名为: \\_config.[theme].yml (_theme:主题文件夹名，一般是主题名称_)\n\n3. 将自己的个性化静态文件复制到 source 目录下\n\n   > 如我个性化了部分主题中的图片，于是将这些图片放到了 source 下的 images，在 config 中 使用路径为: /images/[imageName]\n\n4. 上传代码到 Gitee\n\n   > 配置文件和包文件\n   > \\_config.yml、\\_comfig.[theme].yml、package.json\n   > 及文件夹\n   > scaffolds、source、themes\n\n5. 添加 Blog 文章\n\n6. 进入代码库 -> 服务 -> Pages，点击更新\n\n### 大功告成\n\n🎉 现在可以随时在 Gitee 中的 WebIDE 编写文章了！脱离了本地环境的限制，感觉自由 🆓 原来是这么的美好！\n\n> **记得要更新 Blog 内容时去 Pages 再次点击更新哦！**\n\n___\n\n## 初始化\n\n```base\n [npx] hexo init [folder]\n```\n\n## 添加文章\n\n```base\n[npx] hexo new [post] <title>\n```\n\n| 参数          | 描述                                          |\n| :------------ | :-------------------------------------------- |\n| -p, --path    | 自定义新文章的路径                            |\n| -r, --replace | 如果存在同名文章，将其替换                    |\n| -s, --slug    | 文章的 Slug，作为新文章的文件名和发布后的 URL |\n\n## 生成静态文件\n\n```base\n[npx] hexo g | generate\n```\n\n| 选项              | 描述                                                                                                                                                      |\n| :---------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| -d, --deploy      | 文件生成后立即部署网站                                                                                                                                    |\n| -w, --watch       | 监视文件变动                                                                                                                                              |\n| -b, --bail        | 生成过程中如果发生任何未处理的异常则抛出异常                                                                                                              |\n| -f, --force       | 强制重新生成文件</br>Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。</br>使用该参数的效果接近 hexo clean && hexo generate |\n| -c, --concurrency | 最大同时生成文件的数量，默认无限制                                                                                                                        |\n\n## 运行\n\n```base\n[npx] hexo server\n```\n\n| 选项         | 描述                           |\n| :----------- | :----------------------------- |\n| -p, --port   | 重设端口                       |\n| -s, --static | 只使用静态文件                 |\n| -l, --log    | 启动日记记录，使用覆盖记录格式 |\n\n## 部署网站\n\n```base\n[npx] hexo d | deploy\n```\n\n| 选项           | 描述                     |\n| :------------- | :----------------------- |\n| -g, --generate | 部署之前预先生成静态文件 |\n\n## 渲染文件\n\n```base\n[npx] hexo render <file1> [file2] ...\n```\n\n| 选项         | 描述         |\n| :----------- | :----------- |\n| -o, --output | 设置输出路径 |\n\n## 从其他博客系统 [迁移内容](https://hexo.io/zh-cn/docs/migration)\n\n```base\n[npx] hexo migrate <file1> [file2] ...\n```\n\n## 清除缓存\n\n```base\n[npx] hexo clean\n```\n\n## 列出网站资料\n\n```base\n[npx] hexo list <type>\n```\n\n## 显示 Hexo 版本\n\n```base\n[npx] hexo version\n```\n","slug":"ExperienceEssay/GiteeHexo","published":1,"updated":"2022-10-21T08:06:07.382Z","_id":"cl526b8xs00094d0h5350a5fg","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>以前都是在本地生成静态站点，然后提交到代码库再更新 Blog，很不方便。最近看到 Gitee 支持 Hexo 在线生成，于是全部上传到了代码库中，这下可以随时随地记录了。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><ol>\n<li>git <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">https://git-scm.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>node.js <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLWNu\">https://nodejs.org/zh-cn<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>hexo <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3M=\">https://hexo.io/zh-cn/docs<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>具体过程与部署步骤就不在这里说了，hexo 站点中很详细，这里主要说怎么部署到 Gitee</p>\n<ol>\n<li><p>按 hexo 文档本地部署并配置好项目，测试正常</p>\n</li>\n<li><p>将自己的主题配置文件复制到 Blog 项目根目录</p>\n<blockquote>\n<p>修改文件名为: _config.[theme].yml (<em>theme:主题文件夹名，一般是主题名称</em>)</p>\n</blockquote>\n</li>\n<li><p>将自己的个性化静态文件复制到 source 目录下</p>\n<blockquote>\n<p>如我个性化了部分主题中的图片，于是将这些图片放到了 source 下的 images，在 config 中 使用路径为: &#x2F;images&#x2F;[imageName]</p>\n</blockquote>\n</li>\n<li><p>上传代码到 Gitee</p>\n<blockquote>\n<p>配置文件和包文件<br>_config.yml、_comfig.[theme].yml、package.json<br>及文件夹<br>scaffolds、source、themes</p>\n</blockquote>\n</li>\n<li><p>添加 Blog 文章</p>\n</li>\n<li><p>进入代码库 -&gt; 服务 -&gt; Pages，点击更新</p>\n</li>\n</ol>\n<h3 id=\"大功告成\"><a href=\"#大功告成\" class=\"headerlink\" title=\"大功告成\"></a>大功告成</h3><p>🎉 现在可以随时在 Gitee 中的 WebIDE 编写文章了！脱离了本地环境的限制，感觉自由 🆓 原来是这么的美好！</p>\n<blockquote>\n<p><strong>记得要更新 Blog 内容时去 Pages 再次点击更新哦！</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo init [folder]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"添加文章\"><a href=\"#添加文章\" class=\"headerlink\" title=\"添加文章\"></a>添加文章</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo new [post] &lt;title&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-p, –path</td>\n<td align=\"left\">自定义新文章的路径</td>\n</tr>\n<tr>\n<td align=\"left\">-r, –replace</td>\n<td align=\"left\">如果存在同名文章，将其替换</td>\n</tr>\n<tr>\n<td align=\"left\">-s, –slug</td>\n<td align=\"left\">文章的 Slug，作为新文章的文件名和发布后的 URL</td>\n</tr>\n</tbody></table>\n<h2 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo g | generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-d, –deploy</td>\n<td align=\"left\">文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td align=\"left\">-w, –watch</td>\n<td align=\"left\">监视文件变动</td>\n</tr>\n<tr>\n<td align=\"left\">-b, –bail</td>\n<td align=\"left\">生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td align=\"left\">-f, –force</td>\n<td align=\"left\">强制重新生成文件</br>Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。</br>使用该参数的效果接近 hexo clean &amp;&amp; hexo generate</td>\n</tr>\n<tr>\n<td align=\"left\">-c, –concurrency</td>\n<td align=\"left\">最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-p, –port</td>\n<td align=\"left\">重设端口</td>\n</tr>\n<tr>\n<td align=\"left\">-s, –static</td>\n<td align=\"left\">只使用静态文件</td>\n</tr>\n<tr>\n<td align=\"left\">-l, –log</td>\n<td align=\"left\">启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<h2 id=\"部署网站\"><a href=\"#部署网站\" class=\"headerlink\" title=\"部署网站\"></a>部署网站</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo d | deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-g, –generate</td>\n<td align=\"left\">部署之前预先生成静态文件</td>\n</tr>\n</tbody></table>\n<h2 id=\"渲染文件\"><a href=\"#渲染文件\" class=\"headerlink\" title=\"渲染文件\"></a>渲染文件</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo render &lt;file1&gt; [file2] ...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-o, –output</td>\n<td align=\"left\">设置输出路径</td>\n</tr>\n</tbody></table>\n<h2 id=\"从其他博客系统-迁移内容\"><a href=\"#从其他博客系统-迁移内容\" class=\"headerlink\" title=\"从其他博客系统 迁移内容\"></a>从其他博客系统 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvbWlncmF0aW9u\">迁移内容<i class=\"fa fa-external-link-alt\"></i></span></h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo migrate &lt;file1&gt; [file2] ...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"清除缓存\"><a href=\"#清除缓存\" class=\"headerlink\" title=\"清除缓存\"></a>清除缓存</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo clean<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"列出网站资料\"><a href=\"#列出网站资料\" class=\"headerlink\" title=\"列出网站资料\"></a>列出网站资料</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo list &lt;type&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"显示-Hexo-版本\"><a href=\"#显示-Hexo-版本\" class=\"headerlink\" title=\"显示 Hexo 版本\"></a>显示 Hexo 版本</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>以前都是在本地生成静态站点，然后提交到代码库再更新 Blog，很不方便。最近看到 Gitee 支持 Hexo 在线生成，于是全部上传到了代码库中，这下可以随时随地记录了。</p>","more":"<h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><ol>\n<li>git <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXQtc2NtLmNvbS8=\">https://git-scm.com<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>node.js <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub2RlanMub3JnL3poLWNu\">https://nodejs.org/zh-cn<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>hexo <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3M=\">https://hexo.io/zh-cn/docs<i class=\"fa fa-external-link-alt\"></i></span></li>\n</ol>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>具体过程与部署步骤就不在这里说了，hexo 站点中很详细，这里主要说怎么部署到 Gitee</p>\n<ol>\n<li><p>按 hexo 文档本地部署并配置好项目，测试正常</p>\n</li>\n<li><p>将自己的主题配置文件复制到 Blog 项目根目录</p>\n<blockquote>\n<p>修改文件名为: _config.[theme].yml (<em>theme:主题文件夹名，一般是主题名称</em>)</p>\n</blockquote>\n</li>\n<li><p>将自己的个性化静态文件复制到 source 目录下</p>\n<blockquote>\n<p>如我个性化了部分主题中的图片，于是将这些图片放到了 source 下的 images，在 config 中 使用路径为: &#x2F;images&#x2F;[imageName]</p>\n</blockquote>\n</li>\n<li><p>上传代码到 Gitee</p>\n<blockquote>\n<p>配置文件和包文件<br>_config.yml、_comfig.[theme].yml、package.json<br>及文件夹<br>scaffolds、source、themes</p>\n</blockquote>\n</li>\n<li><p>添加 Blog 文章</p>\n</li>\n<li><p>进入代码库 -&gt; 服务 -&gt; Pages，点击更新</p>\n</li>\n</ol>\n<h3 id=\"大功告成\"><a href=\"#大功告成\" class=\"headerlink\" title=\"大功告成\"></a>大功告成</h3><p>🎉 现在可以随时在 Gitee 中的 WebIDE 编写文章了！脱离了本地环境的限制，感觉自由 🆓 原来是这么的美好！</p>\n<blockquote>\n<p><strong>记得要更新 Blog 内容时去 Pages 再次点击更新哦！</strong></p>\n</blockquote>\n<hr>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo init [folder]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"添加文章\"><a href=\"#添加文章\" class=\"headerlink\" title=\"添加文章\"></a>添加文章</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo new [post] &lt;title&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">参数</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-p, –path</td>\n<td align=\"left\">自定义新文章的路径</td>\n</tr>\n<tr>\n<td align=\"left\">-r, –replace</td>\n<td align=\"left\">如果存在同名文章，将其替换</td>\n</tr>\n<tr>\n<td align=\"left\">-s, –slug</td>\n<td align=\"left\">文章的 Slug，作为新文章的文件名和发布后的 URL</td>\n</tr>\n</tbody></table>\n<h2 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo g | generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-d, –deploy</td>\n<td align=\"left\">文件生成后立即部署网站</td>\n</tr>\n<tr>\n<td align=\"left\">-w, –watch</td>\n<td align=\"left\">监视文件变动</td>\n</tr>\n<tr>\n<td align=\"left\">-b, –bail</td>\n<td align=\"left\">生成过程中如果发生任何未处理的异常则抛出异常</td>\n</tr>\n<tr>\n<td align=\"left\">-f, –force</td>\n<td align=\"left\">强制重新生成文件</br>Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。</br>使用该参数的效果接近 hexo clean &amp;&amp; hexo generate</td>\n</tr>\n<tr>\n<td align=\"left\">-c, –concurrency</td>\n<td align=\"left\">最大同时生成文件的数量，默认无限制</td>\n</tr>\n</tbody></table>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-p, –port</td>\n<td align=\"left\">重设端口</td>\n</tr>\n<tr>\n<td align=\"left\">-s, –static</td>\n<td align=\"left\">只使用静态文件</td>\n</tr>\n<tr>\n<td align=\"left\">-l, –log</td>\n<td align=\"left\">启动日记记录，使用覆盖记录格式</td>\n</tr>\n</tbody></table>\n<h2 id=\"部署网站\"><a href=\"#部署网站\" class=\"headerlink\" title=\"部署网站\"></a>部署网站</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo d | deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-g, –generate</td>\n<td align=\"left\">部署之前预先生成静态文件</td>\n</tr>\n</tbody></table>\n<h2 id=\"渲染文件\"><a href=\"#渲染文件\" class=\"headerlink\" title=\"渲染文件\"></a>渲染文件</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo render &lt;file1&gt; [file2] ...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">选项</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">-o, –output</td>\n<td align=\"left\">设置输出路径</td>\n</tr>\n</tbody></table>\n<h2 id=\"从其他博客系统-迁移内容\"><a href=\"#从其他博客系统-迁移内容\" class=\"headerlink\" title=\"从其他博客系统 迁移内容\"></a>从其他博客系统 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvbWlncmF0aW9u\">迁移内容<i class=\"fa fa-external-link-alt\"></i></span></h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo migrate &lt;file1&gt; [file2] ...<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"清除缓存\"><a href=\"#清除缓存\" class=\"headerlink\" title=\"清除缓存\"></a>清除缓存</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo clean<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"列出网站资料\"><a href=\"#列出网站资料\" class=\"headerlink\" title=\"列出网站资料\"></a>列出网站资料</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo list &lt;type&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"显示-Hexo-版本\"><a href=\"#显示-Hexo-版本\" class=\"headerlink\" title=\"显示 Hexo 版本\"></a>显示 Hexo 版本</h2><pre class=\"line-numbers language-base\" data-language=\"base\"><code class=\"language-base\">[npx] hexo version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>"},{"title":"MacApiError 数据处理中流不可异步写入","date":"2021-08-27T03:30:44.000Z","_content":"\n## 简介\n\n最近在苹果本上运行 NetCore WebApi 时遇到的问题\n\n<!-- more -->\n\n## 出现的问题\n\n1. 未做数据过滤时正常\n2. 数据过滤，进行加密后报错\n3. 去掉数据加密正常\n4. Win 系列系统正常\n5. Mac 系统不正常（其他 Linux 未做测试）\n\n## 问题出现原因\n\n1. 数据加密需要对返回内容做加密处理，并写入流\n2. WebApi 数据处理中流不可直接异步写入，也不可同步写入\n\n## 解决办法\n\n1. 服务配置为允许同步写入: AllowSynchronousIO = true\n   ```csharp\n   services.Configure<KestrelServerOptions>(option => option.AllowSynchronousIO = true);\n   services.Configure<IISServerOptions>(option => option.AllowSynchronousIO = true);\n   ```\n2. 异步、同步都可写入了\n   ```csharp\n   using var resWriter = new StreamWriter(resOrigin);\n   await resWriter.WriteAsync(writeStr);\n   await resWriter.FlushAsync();\n   //将原始的请求和响应流替换回去\n   context.Request.Body = reqOrigin;\n   context.Response.Body = resOrigin;\n   ```\n","source":"_posts/Problem/MacApiError.md","raw":"---\ntitle: MacApiError 数据处理中流不可异步写入\ndate: 2021-08-27 11:30:44\ncategories:\n  - 问题记录\ntags:\n  - Mac\n  - NetCore\n---\n\n## 简介\n\n最近在苹果本上运行 NetCore WebApi 时遇到的问题\n\n<!-- more -->\n\n## 出现的问题\n\n1. 未做数据过滤时正常\n2. 数据过滤，进行加密后报错\n3. 去掉数据加密正常\n4. Win 系列系统正常\n5. Mac 系统不正常（其他 Linux 未做测试）\n\n## 问题出现原因\n\n1. 数据加密需要对返回内容做加密处理，并写入流\n2. WebApi 数据处理中流不可直接异步写入，也不可同步写入\n\n## 解决办法\n\n1. 服务配置为允许同步写入: AllowSynchronousIO = true\n   ```csharp\n   services.Configure<KestrelServerOptions>(option => option.AllowSynchronousIO = true);\n   services.Configure<IISServerOptions>(option => option.AllowSynchronousIO = true);\n   ```\n2. 异步、同步都可写入了\n   ```csharp\n   using var resWriter = new StreamWriter(resOrigin);\n   await resWriter.WriteAsync(writeStr);\n   await resWriter.FlushAsync();\n   //将原始的请求和响应流替换回去\n   context.Request.Body = reqOrigin;\n   context.Response.Body = resOrigin;\n   ```\n","slug":"Problem/MacApiError","published":1,"updated":"2022-07-01T07:50:20.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xs000a4d0he8x6ev1r","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>最近在苹果本上运行 NetCore WebApi 时遇到的问题</p>\n<span id=\"more\"></span>\n\n<h2 id=\"出现的问题\"><a href=\"#出现的问题\" class=\"headerlink\" title=\"出现的问题\"></a>出现的问题</h2><ol>\n<li>未做数据过滤时正常</li>\n<li>数据过滤，进行加密后报错</li>\n<li>去掉数据加密正常</li>\n<li>Win 系列系统正常</li>\n<li>Mac 系统不正常（其他 Linux 未做测试）</li>\n</ol>\n<h2 id=\"问题出现原因\"><a href=\"#问题出现原因\" class=\"headerlink\" title=\"问题出现原因\"></a>问题出现原因</h2><ol>\n<li>数据加密需要对返回内容做加密处理，并写入流</li>\n<li>WebApi 数据处理中流不可直接异步写入，也不可同步写入</li>\n</ol>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><ol>\n<li>服务配置为允许同步写入: AllowSynchronousIO &#x3D; true<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Configure</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>KestrelServerOptions<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>option <span class=\"token operator\">=></span> option<span class=\"token punctuation\">.</span>AllowSynchronousIO <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nservices<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Configure</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IISServerOptions<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>option <span class=\"token operator\">=></span> option<span class=\"token punctuation\">.</span>AllowSynchronousIO <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>异步、同步都可写入了<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> resWriter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamWriter</span><span class=\"token punctuation\">(</span>resOrigin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> resWriter<span class=\"token punctuation\">.</span><span class=\"token function\">WriteAsync</span><span class=\"token punctuation\">(</span>writeStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> resWriter<span class=\"token punctuation\">.</span><span class=\"token function\">FlushAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//将原始的请求和响应流替换回去</span>\ncontext<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> reqOrigin<span class=\"token punctuation\">;</span>\ncontext<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> resOrigin<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>最近在苹果本上运行 NetCore WebApi 时遇到的问题</p>","more":"<h2 id=\"出现的问题\"><a href=\"#出现的问题\" class=\"headerlink\" title=\"出现的问题\"></a>出现的问题</h2><ol>\n<li>未做数据过滤时正常</li>\n<li>数据过滤，进行加密后报错</li>\n<li>去掉数据加密正常</li>\n<li>Win 系列系统正常</li>\n<li>Mac 系统不正常（其他 Linux 未做测试）</li>\n</ol>\n<h2 id=\"问题出现原因\"><a href=\"#问题出现原因\" class=\"headerlink\" title=\"问题出现原因\"></a>问题出现原因</h2><ol>\n<li>数据加密需要对返回内容做加密处理，并写入流</li>\n<li>WebApi 数据处理中流不可直接异步写入，也不可同步写入</li>\n</ol>\n<h2 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h2><ol>\n<li>服务配置为允许同步写入: AllowSynchronousIO &#x3D; true<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Configure</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>KestrelServerOptions<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>option <span class=\"token operator\">=></span> option<span class=\"token punctuation\">.</span>AllowSynchronousIO <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nservices<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Configure</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>IISServerOptions<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>option <span class=\"token operator\">=></span> option<span class=\"token punctuation\">.</span>AllowSynchronousIO <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></li>\n<li>异步、同步都可写入了<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> resWriter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StreamWriter</span><span class=\"token punctuation\">(</span>resOrigin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> resWriter<span class=\"token punctuation\">.</span><span class=\"token function\">WriteAsync</span><span class=\"token punctuation\">(</span>writeStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">await</span> resWriter<span class=\"token punctuation\">.</span><span class=\"token function\">FlushAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//将原始的请求和响应流替换回去</span>\ncontext<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> reqOrigin<span class=\"token punctuation\">;</span>\ncontext<span class=\"token punctuation\">.</span>Response<span class=\"token punctuation\">.</span>Body <span class=\"token operator\">=</span> resOrigin<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>"},{"title":"Mac 无线投屏 Scrcpy","date":"2021-09-24T08:27:11.000Z","_content":"\n### 简介\n\n安卓手机无线投屏到 Mac\n\n<!-- more -->\n\n### 安装 Scrcpy\n\n国外源码 <https://github.com/mirrors/scrcpy>\n国内镜像 <https://gitee.com/mirrors/scrcpy>\n\n1. 清华源 homebrew 安装\n   > <https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/>\n2. 调试包 adb 安装\n   `brew install android-platform-tools`\n3. 安装 scrcpy\n   `brew install scrcpy`\n\n### 连接手机\n\n1. 打开手机 USB 调试\n   > 有些手机需打开“仅充电形式下打开 ADB 调试”，当通知档显示有 USB 调试即配置成功\n2. 连接 USB\n3. 运行 scrcpy\n   `scrcpy`\n\n### 无线投屏\n\n1. 按连接手机步骤完成\n2. 打开配置 adb 连接端口\n   `adb tcpip [port]`\n3. 查看手机 IP\n   `adb shell ip route | awk '{print $9}'`\n4. 拔下设备插头\n5. 打开 adb 调试链接\n   `adb connect [ip]:[port]`\n6. 运行 scrcpy\n   `scrcpy`\n","source":"_posts/ExperienceEssay/Scrcpy.md","raw":"---\ntitle: Mac 无线投屏 Scrcpy\ndate: 2021-09-24 16:27:11\ncategories:\n  - 经验随笔\ntags:\n  - Mac\n  - Scrcpy\n  - 无线投屏\n---\n\n### 简介\n\n安卓手机无线投屏到 Mac\n\n<!-- more -->\n\n### 安装 Scrcpy\n\n国外源码 <https://github.com/mirrors/scrcpy>\n国内镜像 <https://gitee.com/mirrors/scrcpy>\n\n1. 清华源 homebrew 安装\n   > <https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/>\n2. 调试包 adb 安装\n   `brew install android-platform-tools`\n3. 安装 scrcpy\n   `brew install scrcpy`\n\n### 连接手机\n\n1. 打开手机 USB 调试\n   > 有些手机需打开“仅充电形式下打开 ADB 调试”，当通知档显示有 USB 调试即配置成功\n2. 连接 USB\n3. 运行 scrcpy\n   `scrcpy`\n\n### 无线投屏\n\n1. 按连接手机步骤完成\n2. 打开配置 adb 连接端口\n   `adb tcpip [port]`\n3. 查看手机 IP\n   `adb shell ip route | awk '{print $9}'`\n4. 拔下设备插头\n5. 打开 adb 调试链接\n   `adb connect [ip]:[port]`\n6. 运行 scrcpy\n   `scrcpy`\n","slug":"ExperienceEssay/Scrcpy","published":1,"updated":"2022-10-21T08:06:22.442Z","_id":"cl526b8xt000e4d0h27pvdvpl","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>安卓手机无线投屏到 Mac</p>\n<span id=\"more\"></span>\n\n<h3 id=\"安装-Scrcpy\"><a href=\"#安装-Scrcpy\" class=\"headerlink\" title=\"安装 Scrcpy\"></a>安装 Scrcpy</h3><p>国外源码 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pcnJvcnMvc2NyY3B5\">https://github.com/mirrors/scrcpy<i class=\"fa fa-external-link-alt\"></i></span><br>国内镜像 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbWlycm9ycy9zY3JjcHk=\">https://gitee.com/mirrors/scrcpy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>清华源 homebrew 安装<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvaG9tZWJyZXcv\">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n</li>\n<li>调试包 adb 安装<br><code>brew install android-platform-tools</code></li>\n<li>安装 scrcpy<br><code>brew install scrcpy</code></li>\n</ol>\n<h3 id=\"连接手机\"><a href=\"#连接手机\" class=\"headerlink\" title=\"连接手机\"></a>连接手机</h3><ol>\n<li>打开手机 USB 调试<blockquote>\n<p>有些手机需打开“仅充电形式下打开 ADB 调试”，当通知档显示有 USB 调试即配置成功</p>\n</blockquote>\n</li>\n<li>连接 USB</li>\n<li>运行 scrcpy<br><code>scrcpy</code></li>\n</ol>\n<h3 id=\"无线投屏\"><a href=\"#无线投屏\" class=\"headerlink\" title=\"无线投屏\"></a>无线投屏</h3><ol>\n<li>按连接手机步骤完成</li>\n<li>打开配置 adb 连接端口<br><code>adb tcpip [port]</code></li>\n<li>查看手机 IP<br><code>adb shell ip route | awk &#39;&#123;print $9&#125;&#39;</code></li>\n<li>拔下设备插头</li>\n<li>打开 adb 调试链接<br><code>adb connect [ip]:[port]</code></li>\n<li>运行 scrcpy<br><code>scrcpy</code></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>安卓手机无线投屏到 Mac</p>","more":"<h3 id=\"安装-Scrcpy\"><a href=\"#安装-Scrcpy\" class=\"headerlink\" title=\"安装 Scrcpy\"></a>安装 Scrcpy</h3><p>国外源码 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pcnJvcnMvc2NyY3B5\">https://github.com/mirrors/scrcpy<i class=\"fa fa-external-link-alt\"></i></span><br>国内镜像 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRlZS5jb20vbWlycm9ycy9zY3JjcHk=\">https://gitee.com/mirrors/scrcpy<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>清华源 homebrew 安装<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvaG9tZWJyZXcv\">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n</li>\n<li>调试包 adb 安装<br><code>brew install android-platform-tools</code></li>\n<li>安装 scrcpy<br><code>brew install scrcpy</code></li>\n</ol>\n<h3 id=\"连接手机\"><a href=\"#连接手机\" class=\"headerlink\" title=\"连接手机\"></a>连接手机</h3><ol>\n<li>打开手机 USB 调试<blockquote>\n<p>有些手机需打开“仅充电形式下打开 ADB 调试”，当通知档显示有 USB 调试即配置成功</p>\n</blockquote>\n</li>\n<li>连接 USB</li>\n<li>运行 scrcpy<br><code>scrcpy</code></li>\n</ol>\n<h3 id=\"无线投屏\"><a href=\"#无线投屏\" class=\"headerlink\" title=\"无线投屏\"></a>无线投屏</h3><ol>\n<li>按连接手机步骤完成</li>\n<li>打开配置 adb 连接端口<br><code>adb tcpip [port]</code></li>\n<li>查看手机 IP<br><code>adb shell ip route | awk &#39;&#123;print $9&#125;&#39;</code></li>\n<li>拔下设备插头</li>\n<li>打开 adb 调试链接<br><code>adb connect [ip]:[port]</code></li>\n<li>运行 scrcpy<br><code>scrcpy</code></li>\n</ol>"},{"title":"uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动","date":"2021-08-25T06:33:16.000Z","_content":"\n### uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动\n\n<!-- more -->\n\n#### Native.js 原生 API\n\n```js\nlet system = uni.getSystemInfoSync(); // 获取系统信息\nif (system.platform === \"android\") {\n  // 判断平台\n  var context = plus.android.importClass(\"android.content.Context\");\n  var locationManager = plus.android.importClass(\n    \"android.location.LocationManager\"\n  );\n  var main = plus.android.runtimeMainActivity();\n  var mainSvr = main.getSystemService(context.LOCATION_SERVICE);\n  if (!mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER)) {\n    uni.showModal({\n      title: \"提示\",\n      content: \"请打开定位服务功能\",\n      showCancel: false, // 不显示取消按钮\n      success() {\n        if (!mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER)) {\n          var Intent = plus.android.importClass(\"android.content.Intent\");\n          var Settings = plus.android.importClass(\"android.provider.Settings\");\n          var intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n          main.startActivity(intent); // 打开系统设置GPS服务页面\n        } else {\n          console.log(\"GPS功能已开启\");\n        }\n      },\n    });\n  }\n} else if (system.platform === \"ios\") {\n  var cllocationManger = plus.ios.import(\"CLLocationManager\");\n  var enable = cllocationManger.locationServicesEnabled();\n  var status = cllocationManger.authorizationStatus();\n  plus.ios.deleteObject(cllocationManger);\n  if (enable && status != 2) {\n    console.log(\"手机系统的定位已经打开\");\n  } else {\n    console.log(\"手机系统的定位没有打开\");\n    uni.showModal({\n      title: \"提示\",\n      content: \"请打开定位服务功能\",\n      showCancel: false, // 不显示取消按钮\n      success() {\n        var UIApplication = plus.ios.import(\"UIApplication\");\n        var application2 = UIApplication.sharedApplication();\n        var NSURL2 = plus.ios.import(\"NSURL\");\n        // var setting2 = NSURL2.URLWithString(\"prefs:root=LOCATION_SERVICES\");\n        // var setting2 = NSURL2.URLWithString(\"App-Prefs:root=LOCATION_SERVICES\");\n        // var setting2 = NSURL2.URLWithString(\"app-settings\");\n        var setting2 = NSURL2.URLWithString(\n          \"App-Prefs:root=Privacy&path=LOCATION\"\n        );\n        // var setting2 = NSURL2.URLWithString(\"App-Prefs:root=Privacy&path=LOCATION_SERVICES\");\n        application2.openURL(setting2);\n        plus.ios.deleteObject(setting2);\n        plus.ios.deleteObject(NSURL2);\n        plus.ios.deleteObject(application2);\n      },\n    });\n  }\n}\n```\n\n#### permission 模块\n\n> <https://ext.dcloud.net.cn/plugin?id=594>\n","source":"_posts/Problem/UniApp_GPS.md","raw":"---\ntitle: uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动\ndate: 2021-08-25 14:33:16\ncategories:\n  - 问题记录\ntags:\n  - UniApp\n  - GPS\n---\n\n### uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动\n\n<!-- more -->\n\n#### Native.js 原生 API\n\n```js\nlet system = uni.getSystemInfoSync(); // 获取系统信息\nif (system.platform === \"android\") {\n  // 判断平台\n  var context = plus.android.importClass(\"android.content.Context\");\n  var locationManager = plus.android.importClass(\n    \"android.location.LocationManager\"\n  );\n  var main = plus.android.runtimeMainActivity();\n  var mainSvr = main.getSystemService(context.LOCATION_SERVICE);\n  if (!mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER)) {\n    uni.showModal({\n      title: \"提示\",\n      content: \"请打开定位服务功能\",\n      showCancel: false, // 不显示取消按钮\n      success() {\n        if (!mainSvr.isProviderEnabled(locationManager.GPS_PROVIDER)) {\n          var Intent = plus.android.importClass(\"android.content.Intent\");\n          var Settings = plus.android.importClass(\"android.provider.Settings\");\n          var intent = new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);\n          main.startActivity(intent); // 打开系统设置GPS服务页面\n        } else {\n          console.log(\"GPS功能已开启\");\n        }\n      },\n    });\n  }\n} else if (system.platform === \"ios\") {\n  var cllocationManger = plus.ios.import(\"CLLocationManager\");\n  var enable = cllocationManger.locationServicesEnabled();\n  var status = cllocationManger.authorizationStatus();\n  plus.ios.deleteObject(cllocationManger);\n  if (enable && status != 2) {\n    console.log(\"手机系统的定位已经打开\");\n  } else {\n    console.log(\"手机系统的定位没有打开\");\n    uni.showModal({\n      title: \"提示\",\n      content: \"请打开定位服务功能\",\n      showCancel: false, // 不显示取消按钮\n      success() {\n        var UIApplication = plus.ios.import(\"UIApplication\");\n        var application2 = UIApplication.sharedApplication();\n        var NSURL2 = plus.ios.import(\"NSURL\");\n        // var setting2 = NSURL2.URLWithString(\"prefs:root=LOCATION_SERVICES\");\n        // var setting2 = NSURL2.URLWithString(\"App-Prefs:root=LOCATION_SERVICES\");\n        // var setting2 = NSURL2.URLWithString(\"app-settings\");\n        var setting2 = NSURL2.URLWithString(\n          \"App-Prefs:root=Privacy&path=LOCATION\"\n        );\n        // var setting2 = NSURL2.URLWithString(\"App-Prefs:root=Privacy&path=LOCATION_SERVICES\");\n        application2.openURL(setting2);\n        plus.ios.deleteObject(setting2);\n        plus.ios.deleteObject(NSURL2);\n        plus.ios.deleteObject(application2);\n      },\n    });\n  }\n}\n```\n\n#### permission 模块\n\n> <https://ext.dcloud.net.cn/plugin?id=594>\n","slug":"Problem/UniApp_GPS","published":1,"updated":"2022-07-01T07:50:20.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xt000f4d0h1jutc9pe","content":"<h3 id=\"uniapp-判断-IOS-和-Android-的-GPS-是否开启并设置启动\"><a href=\"#uniapp-判断-IOS-和-Android-的-GPS-是否开启并设置启动\" class=\"headerlink\" title=\"uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动\"></a>uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动</h3><span id=\"more\"></span>\n\n<h4 id=\"Native-js-原生-API\"><a href=\"#Native-js-原生-API\" class=\"headerlink\" title=\"Native.js 原生 API\"></a>Native.js 原生 API</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> system <span class=\"token operator\">=</span> uni<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemInfoSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取系统信息</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">\"android\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 判断平台</span>\n  <span class=\"token keyword\">var</span> context <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.content.Context\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> locationManager <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"android.location.LocationManager\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> main <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">runtimeMainActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> mainSvr <span class=\"token operator\">=</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token constant\">LOCATION_SERVICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mainSvr<span class=\"token punctuation\">.</span><span class=\"token function\">isProviderEnabled</span><span class=\"token punctuation\">(</span>locationManager<span class=\"token punctuation\">.</span><span class=\"token constant\">GPS_PROVIDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    uni<span class=\"token punctuation\">.</span><span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请打开定位服务功能\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">showCancel</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不显示取消按钮</span>\n      <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mainSvr<span class=\"token punctuation\">.</span><span class=\"token function\">isProviderEnabled</span><span class=\"token punctuation\">(</span>locationManager<span class=\"token punctuation\">.</span><span class=\"token constant\">GPS_PROVIDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">var</span> Intent <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.content.Intent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> Settings <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.provider.Settings\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span>Settings<span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_LOCATION_SOURCE_SETTINGS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          main<span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打开系统设置GPS服务页面</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GPS功能已开启\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">\"ios\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> cllocationManger <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CLLocationManager\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> enable <span class=\"token operator\">=</span> cllocationManger<span class=\"token punctuation\">.</span><span class=\"token function\">locationServicesEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> status <span class=\"token operator\">=</span> cllocationManger<span class=\"token punctuation\">.</span><span class=\"token function\">authorizationStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span>cllocationManger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enable <span class=\"token operator\">&amp;&amp;</span> status <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手机系统的定位已经打开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手机系统的定位没有打开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    uni<span class=\"token punctuation\">.</span><span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请打开定位服务功能\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">showCancel</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不显示取消按钮</span>\n      <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> UIApplication <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UIApplication\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> application2 <span class=\"token operator\">=</span> UIApplication<span class=\"token punctuation\">.</span><span class=\"token function\">sharedApplication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> <span class=\"token constant\">NSURL2</span> <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NSURL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"prefs:root=LOCATION_SERVICES\");</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"App-Prefs:root=LOCATION_SERVICES\");</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"app-settings\");</span>\n        <span class=\"token keyword\">var</span> setting2 <span class=\"token operator\">=</span> <span class=\"token constant\">NSURL2</span><span class=\"token punctuation\">.</span><span class=\"token function\">URLWithString</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"App-Prefs:root=Privacy&amp;path=LOCATION\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"App-Prefs:root=Privacy&amp;path=LOCATION_SERVICES\");</span>\n        application2<span class=\"token punctuation\">.</span><span class=\"token function\">openURL</span><span class=\"token punctuation\">(</span>setting2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span>setting2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NSURL2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span>application2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"permission-模块\"><a href=\"#permission-模块\" class=\"headerlink\" title=\"permission 模块\"></a>permission 模块</h4><blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9leHQuZGNsb3VkLm5ldC5jbi9wbHVnaW4/aWQ9NTk0\">https://ext.dcloud.net.cn/plugin?id=594<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h3 id=\"uniapp-判断-IOS-和-Android-的-GPS-是否开启并设置启动\"><a href=\"#uniapp-判断-IOS-和-Android-的-GPS-是否开启并设置启动\" class=\"headerlink\" title=\"uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动\"></a>uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动</h3>","more":"<h4 id=\"Native-js-原生-API\"><a href=\"#Native-js-原生-API\" class=\"headerlink\" title=\"Native.js 原生 API\"></a>Native.js 原生 API</h4><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> system <span class=\"token operator\">=</span> uni<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemInfoSync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 获取系统信息</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">\"android\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 判断平台</span>\n  <span class=\"token keyword\">var</span> context <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.content.Context\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> locationManager <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"android.location.LocationManager\"</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> main <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">runtimeMainActivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> mainSvr <span class=\"token operator\">=</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">getSystemService</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token constant\">LOCATION_SERVICE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mainSvr<span class=\"token punctuation\">.</span><span class=\"token function\">isProviderEnabled</span><span class=\"token punctuation\">(</span>locationManager<span class=\"token punctuation\">.</span><span class=\"token constant\">GPS_PROVIDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    uni<span class=\"token punctuation\">.</span><span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请打开定位服务功能\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">showCancel</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不显示取消按钮</span>\n      <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mainSvr<span class=\"token punctuation\">.</span><span class=\"token function\">isProviderEnabled</span><span class=\"token punctuation\">(</span>locationManager<span class=\"token punctuation\">.</span><span class=\"token constant\">GPS_PROVIDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">var</span> Intent <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.content.Intent\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> Settings <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>android<span class=\"token punctuation\">.</span><span class=\"token function\">importClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"android.provider.Settings\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">var</span> intent <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intent</span><span class=\"token punctuation\">(</span>Settings<span class=\"token punctuation\">.</span><span class=\"token constant\">ACTION_LOCATION_SOURCE_SETTINGS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          main<span class=\"token punctuation\">.</span><span class=\"token function\">startActivity</span><span class=\"token punctuation\">(</span>intent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 打开系统设置GPS服务页面</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GPS功能已开启\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>system<span class=\"token punctuation\">.</span>platform <span class=\"token operator\">===</span> <span class=\"token string\">\"ios\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">var</span> cllocationManger <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CLLocationManager\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> enable <span class=\"token operator\">=</span> cllocationManger<span class=\"token punctuation\">.</span><span class=\"token function\">locationServicesEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> status <span class=\"token operator\">=</span> cllocationManger<span class=\"token punctuation\">.</span><span class=\"token function\">authorizationStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span>cllocationManger<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enable <span class=\"token operator\">&amp;&amp;</span> status <span class=\"token operator\">!=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手机系统的定位已经打开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"手机系统的定位没有打开\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    uni<span class=\"token punctuation\">.</span><span class=\"token function\">showModal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">\"提示\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">\"请打开定位服务功能\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">showCancel</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 不显示取消按钮</span>\n      <span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">var</span> UIApplication <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UIApplication\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> application2 <span class=\"token operator\">=</span> UIApplication<span class=\"token punctuation\">.</span><span class=\"token function\">sharedApplication</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> <span class=\"token constant\">NSURL2</span> <span class=\"token operator\">=</span> plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NSURL\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"prefs:root=LOCATION_SERVICES\");</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"App-Prefs:root=LOCATION_SERVICES\");</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"app-settings\");</span>\n        <span class=\"token keyword\">var</span> setting2 <span class=\"token operator\">=</span> <span class=\"token constant\">NSURL2</span><span class=\"token punctuation\">.</span><span class=\"token function\">URLWithString</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"App-Prefs:root=Privacy&amp;path=LOCATION\"</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// var setting2 = NSURL2.URLWithString(\"App-Prefs:root=Privacy&amp;path=LOCATION_SERVICES\");</span>\n        application2<span class=\"token punctuation\">.</span><span class=\"token function\">openURL</span><span class=\"token punctuation\">(</span>setting2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span>setting2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NSURL2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        plus<span class=\"token punctuation\">.</span>ios<span class=\"token punctuation\">.</span><span class=\"token function\">deleteObject</span><span class=\"token punctuation\">(</span>application2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"permission-模块\"><a href=\"#permission-模块\" class=\"headerlink\" title=\"permission 模块\"></a>permission 模块</h4><blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9leHQuZGNsb3VkLm5ldC5jbi9wbHVnaW4/aWQ9NTk0\">https://ext.dcloud.net.cn/plugin?id=594<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>"},{"title":"MacM1 添加 libgdiplus 包","date":"2021-09-17T07:14:53.000Z","_content":"\n### 简介\n\nMacM1 添加 libgdiplus 包\n\n<!-- more -->\n\n### 安装 libgdiplus\n\n```bash\nbrew install mono-libgdiplus\n```\n\n![install](install.png)\n\n### 引用 CoreCompat\n\n```bash\ndotnet add package runtime.osx.10.10-x64.CoreCompat.System.Drawing\n```\n","source":"_posts/Problem/libgdiplus.md","raw":"---\ntitle: MacM1 添加 libgdiplus 包\ndate: 2021-09-17 15:14:53\ncategories:\n  - 问题记录\ntags:\n  - MacM1\n  - NetCore\n  - libgdiplus\n---\n\n### 简介\n\nMacM1 添加 libgdiplus 包\n\n<!-- more -->\n\n### 安装 libgdiplus\n\n```bash\nbrew install mono-libgdiplus\n```\n\n![install](install.png)\n\n### 引用 CoreCompat\n\n```bash\ndotnet add package runtime.osx.10.10-x64.CoreCompat.System.Drawing\n```\n","slug":"Problem/libgdiplus","published":1,"updated":"2022-07-01T07:50:20.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xu000j4d0h5z142glx","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>MacM1 添加 libgdiplus 包</p>\n<span id=\"more\"></span>\n\n<h3 id=\"安装-libgdiplus\"><a href=\"#安装-libgdiplus\" class=\"headerlink\" title=\"安装 libgdiplus\"></a>安装 libgdiplus</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> mono-libgdiplus<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"/Problem/libgdiplus/install.png\" alt=\"install\"></p>\n<h3 id=\"引用-CoreCompat\"><a href=\"#引用-CoreCompat\" class=\"headerlink\" title=\"引用 CoreCompat\"></a>引用 CoreCompat</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dotnet <span class=\"token function\">add</span> package runtime.osx.10.10-x64.CoreCompat.System.Drawing<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>MacM1 添加 libgdiplus 包</p>","more":"<h3 id=\"安装-libgdiplus\"><a href=\"#安装-libgdiplus\" class=\"headerlink\" title=\"安装 libgdiplus\"></a>安装 libgdiplus</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">brew <span class=\"token function\">install</span> mono-libgdiplus<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><img data-src=\"/Problem/libgdiplus/install.png\" alt=\"install\"></p>\n<h3 id=\"引用-CoreCompat\"><a href=\"#引用-CoreCompat\" class=\"headerlink\" title=\"引用 CoreCompat\"></a>引用 CoreCompat</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dotnet <span class=\"token function\">add</span> package runtime.osx.10.10-x64.CoreCompat.System.Drawing<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>"},{"title":"MacM1 配置 Python 环境","date":"2022-07-01T07:50:20.942Z","_content":"\n## 简介\n\nMacM1 部署 Python 环境后，大多数 AI 框架支持总是出问题，这里分享下自己的经验。\n\n<!-- more -->\n\n## 安装 Anaconda\n\n推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。\n\n> Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。\n> 使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。\n\n[选择 64-Bit Graphical Installer 下载](https://www.anaconda.com/products/individual)\n\n## 处理架构不匹配问题\n\n```console\n# 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR=osx-64 conda create -n [paddlexName] python=[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c \"import platform;print(platform.machine())\"\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR=osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho \"CONDA_SUBDIR: $CONDA_SUBDIR\"\n```\n\n安装完成后可进入 Python 进行测试","source":"_posts/Python/MacM1Python.md","raw":"---\ntitle: MacM1 配置 Python 环境\ndate:  2022-06-21 11：58\ncategories:\n  - 经验随笔\ntags:\n  - Mac M1\n  - Python\n  - Anaconda\n---\n\n## 简介\n\nMacM1 部署 Python 环境后，大多数 AI 框架支持总是出问题，这里分享下自己的经验。\n\n<!-- more -->\n\n## 安装 Anaconda\n\n推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。\n\n> Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。\n> 使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。\n\n[选择 64-Bit Graphical Installer 下载](https://www.anaconda.com/products/individual)\n\n## 处理架构不匹配问题\n\n```console\n# 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR=osx-64 conda create -n [paddlexName] python=[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c \"import platform;print(platform.machine())\"\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR=osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho \"CONDA_SUBDIR: $CONDA_SUBDIR\"\n```\n\n安装完成后可进入 Python 进行测试","slug":"Python/MacM1Python","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xu000m4d0h1egfe5ul","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>MacM1 部署 Python 环境后，大多数 AI 框架支持总是出问题，这里分享下自己的经验。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"安装-Anaconda\"><a href=\"#安装-Anaconda\" class=\"headerlink\" title=\"安装 Anaconda\"></a>安装 Anaconda</h2><p>推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。</p>\n<blockquote>\n<p>Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。<br>使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2luZGl2aWR1YWw=\">选择 64-Bit Graphical Installer 下载<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"处理架构不匹配问题\"><a href=\"#处理架构不匹配问题\" class=\"headerlink\" title=\"处理架构不匹配问题\"></a>处理架构不匹配问题</h2><pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\"># 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR&#x3D;osx-64 conda create -n [paddlexName] python&#x3D;[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c &quot;import platform;print(platform.machine())&quot;\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR&#x3D;osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho &quot;CONDA_SUBDIR: $CONDA_SUBDIR&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装完成后可进入 Python 进行测试</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>MacM1 部署 Python 环境后，大多数 AI 框架支持总是出问题，这里分享下自己的经验。</p>","more":"<h2 id=\"安装-Anaconda\"><a href=\"#安装-Anaconda\" class=\"headerlink\" title=\"安装 Anaconda\"></a>安装 Anaconda</h2><p>推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。</p>\n<blockquote>\n<p>Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。<br>使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。</p>\n</blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2luZGl2aWR1YWw=\">选择 64-Bit Graphical Installer 下载<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"处理架构不匹配问题\"><a href=\"#处理架构不匹配问题\" class=\"headerlink\" title=\"处理架构不匹配问题\"></a>处理架构不匹配问题</h2><pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\"># 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR&#x3D;osx-64 conda create -n [paddlexName] python&#x3D;[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c &quot;import platform;print(platform.machine())&quot;\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR&#x3D;osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho &quot;CONDA_SUBDIR: $CONDA_SUBDIR&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装完成后可进入 Python 进行测试</p>"},{"title":"Mac 安装 PaddleX","date":"2021-09-08T07:19:54.000Z","_content":"\n## 简介\n\n飞桨全流程开发工具，集飞桨核心框架、模型库、工具及组件等深度学习开发所需全部能力于一身，打通深度学习开发全流程。PaddleX 同时提供简明易懂的 Python API，及一键下载安装的图形化开发客户端。用户可根据实际生产需求选择相应的开发方式，获得飞桨全流程开发的最佳体验。\n\n<!-- more -->\n\n## API 方式\n\n推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。\n\n> Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。\n> 使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。\n\n1. [Anaconda 下载](https://www.anaconda.com/products/individual)\n   > 选择 64-Bit Graphical Installer 下载\n1. 创建 Python 环境\n   > conda create -n [paddlexName] python=[version]\n   > 注：_M1 版本 CPU 选择 3.8，Intel 建议选择 Python3_\n1. 进入 Python 环境，部署依赖库\n   > conda activate [paddlexName]\n   > pip install cython\n   > pip install pycocotools\n1. 安装 PaddlePaddle 与 PaddleX\n   > pip install paddlepaddle 或 paddlepaddle-gpu\n   > pip install paddlex\n\n### 架构不匹配可按如下方式创建环境\n\n```console\n# 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR=osx-64 conda create -n [paddlexName] python=[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c \"import platform;print(platform.machine())\"\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR=osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho \"CONDA_SUBDIR: $CONDA_SUBDIR\"\n```\n\n安装完成后可进入 Python 进行测试\n\n## GUI 方式\n\n1. [PaddleX GUI 下载](https://www.paddlepaddle.org.cn/paddlex/download)\n1. 解压后，修改文件夹名称为：[可执行文件名称].app\n1. 拷贝到应用程序目录下，安装完毕\n\n> 也可按文件夹中提示方式直接使用\n\n## Restful 方式\n\n[Mac 版下载地址](https://bj.bcebos.com/paddlex/PaddleX_Remote_GUI/mac/PaddleX_Remote_GUI.zip)\n[Win 版下载地址](https://bj.bcebos.com/paddlex/PaddleX_Remote_GUI/windows/PaddleX_Remote_GUI.zip)\n\n> 下载后解压按说明文件操作即可\n> [详细说明](https://github.com/PaddlePaddle/PaddleX/blob/develop/docs/Resful_API/docs/readme.md)\n","source":"_posts/Paddlex/Install.md","raw":"---\ntitle: Mac 安装 PaddleX\ndate: 2021-09-08 15:19:54\ncategories:\n  - 学习笔记\ntags:\n  - PaddlePaddle\n  - PaddleX\n  - VC\n  - ML\n  - Python\n---\n\n## 简介\n\n飞桨全流程开发工具，集飞桨核心框架、模型库、工具及组件等深度学习开发所需全部能力于一身，打通深度学习开发全流程。PaddleX 同时提供简明易懂的 Python API，及一键下载安装的图形化开发客户端。用户可根据实际生产需求选择相应的开发方式，获得飞桨全流程开发的最佳体验。\n\n<!-- more -->\n\n## API 方式\n\n推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。\n\n> Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。\n> 使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。\n\n1. [Anaconda 下载](https://www.anaconda.com/products/individual)\n   > 选择 64-Bit Graphical Installer 下载\n1. 创建 Python 环境\n   > conda create -n [paddlexName] python=[version]\n   > 注：_M1 版本 CPU 选择 3.8，Intel 建议选择 Python3_\n1. 进入 Python 环境，部署依赖库\n   > conda activate [paddlexName]\n   > pip install cython\n   > pip install pycocotools\n1. 安装 PaddlePaddle 与 PaddleX\n   > pip install paddlepaddle 或 paddlepaddle-gpu\n   > pip install paddlex\n\n### 架构不匹配可按如下方式创建环境\n\n```console\n# 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR=osx-64 conda create -n [paddlexName] python=[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c \"import platform;print(platform.machine())\"\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR=osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho \"CONDA_SUBDIR: $CONDA_SUBDIR\"\n```\n\n安装完成后可进入 Python 进行测试\n\n## GUI 方式\n\n1. [PaddleX GUI 下载](https://www.paddlepaddle.org.cn/paddlex/download)\n1. 解压后，修改文件夹名称为：[可执行文件名称].app\n1. 拷贝到应用程序目录下，安装完毕\n\n> 也可按文件夹中提示方式直接使用\n\n## Restful 方式\n\n[Mac 版下载地址](https://bj.bcebos.com/paddlex/PaddleX_Remote_GUI/mac/PaddleX_Remote_GUI.zip)\n[Win 版下载地址](https://bj.bcebos.com/paddlex/PaddleX_Remote_GUI/windows/PaddleX_Remote_GUI.zip)\n\n> 下载后解压按说明文件操作即可\n> [详细说明](https://github.com/PaddlePaddle/PaddleX/blob/develop/docs/Resful_API/docs/readme.md)\n","slug":"Paddlex/Install","published":1,"updated":"2022-07-01T07:50:20.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xv000q4d0h7wq49s31","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>飞桨全流程开发工具，集飞桨核心框架、模型库、工具及组件等深度学习开发所需全部能力于一身，打通深度学习开发全流程。PaddleX 同时提供简明易懂的 Python API，及一键下载安装的图形化开发客户端。用户可根据实际生产需求选择相应的开发方式，获得飞桨全流程开发的最佳体验。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"API-方式\"><a href=\"#API-方式\" class=\"headerlink\" title=\"API 方式\"></a>API 方式</h2><p>推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。</p>\n<blockquote>\n<p>Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。<br>使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。</p>\n</blockquote>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2luZGl2aWR1YWw=\">Anaconda 下载<i class=\"fa fa-external-link-alt\"></i></span><blockquote>\n<p>选择 64-Bit Graphical Installer 下载</p>\n</blockquote>\n</li>\n<li>创建 Python 环境<blockquote>\n<p>conda create -n [paddlexName] python&#x3D;[version]<br>注：<em>M1 版本 CPU 选择 3.8，Intel 建议选择 Python3</em></p>\n</blockquote>\n</li>\n<li>进入 Python 环境，部署依赖库<blockquote>\n<p>conda activate [paddlexName]<br>pip install cython<br>pip install pycocotools</p>\n</blockquote>\n</li>\n<li>安装 PaddlePaddle 与 PaddleX<blockquote>\n<p>pip install paddlepaddle 或 paddlepaddle-gpu<br>pip install paddlex</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"架构不匹配可按如下方式创建环境\"><a href=\"#架构不匹配可按如下方式创建环境\" class=\"headerlink\" title=\"架构不匹配可按如下方式创建环境\"></a>架构不匹配可按如下方式创建环境</h3><pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\"># 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR&#x3D;osx-64 conda create -n [paddlexName] python&#x3D;[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c &quot;import platform;print(platform.machine())&quot;\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR&#x3D;osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho &quot;CONDA_SUBDIR: $CONDA_SUBDIR&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装完成后可进入 Python 进行测试</p>\n<h2 id=\"GUI-方式\"><a href=\"#GUI-方式\" class=\"headerlink\" title=\"GUI 方式\"></a>GUI 方式</h2><ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGFkZGxlcGFkZGxlLm9yZy5jbi9wYWRkbGV4L2Rvd25sb2Fk\">PaddleX GUI 下载<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>解压后，修改文件夹名称为：[可执行文件名称].app</li>\n<li>拷贝到应用程序目录下，安装完毕</li>\n</ol>\n<blockquote>\n<p>也可按文件夹中提示方式直接使用</p>\n</blockquote>\n<h2 id=\"Restful-方式\"><a href=\"#Restful-方式\" class=\"headerlink\" title=\"Restful 方式\"></a>Restful 方式</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iai5iY2Vib3MuY29tL3BhZGRsZXgvUGFkZGxlWF9SZW1vdGVfR1VJL21hYy9QYWRkbGVYX1JlbW90ZV9HVUkuemlw\">Mac 版下载地址<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iai5iY2Vib3MuY29tL3BhZGRsZXgvUGFkZGxlWF9SZW1vdGVfR1VJL3dpbmRvd3MvUGFkZGxlWF9SZW1vdGVfR1VJLnppcA==\">Win 版下载地址<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>下载后解压按说明文件操作即可<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BhZGRsZVBhZGRsZS9QYWRkbGVYL2Jsb2IvZGV2ZWxvcC9kb2NzL1Jlc2Z1bF9BUEkvZG9jcy9yZWFkbWUubWQ=\">详细说明<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>飞桨全流程开发工具，集飞桨核心框架、模型库、工具及组件等深度学习开发所需全部能力于一身，打通深度学习开发全流程。PaddleX 同时提供简明易懂的 Python API，及一键下载安装的图形化开发客户端。用户可根据实际生产需求选择相应的开发方式，获得飞桨全流程开发的最佳体验。</p>","more":"<h2 id=\"API-方式\"><a href=\"#API-方式\" class=\"headerlink\" title=\"API 方式\"></a>API 方式</h2><p>推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。</p>\n<blockquote>\n<p>Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。<br>使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。</p>\n</blockquote>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2luZGl2aWR1YWw=\">Anaconda 下载<i class=\"fa fa-external-link-alt\"></i></span><blockquote>\n<p>选择 64-Bit Graphical Installer 下载</p>\n</blockquote>\n</li>\n<li>创建 Python 环境<blockquote>\n<p>conda create -n [paddlexName] python&#x3D;[version]<br>注：<em>M1 版本 CPU 选择 3.8，Intel 建议选择 Python3</em></p>\n</blockquote>\n</li>\n<li>进入 Python 环境，部署依赖库<blockquote>\n<p>conda activate [paddlexName]<br>pip install cython<br>pip install pycocotools</p>\n</blockquote>\n</li>\n<li>安装 PaddlePaddle 与 PaddleX<blockquote>\n<p>pip install paddlepaddle 或 paddlepaddle-gpu<br>pip install paddlex</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"架构不匹配可按如下方式创建环境\"><a href=\"#架构不匹配可按如下方式创建环境\" class=\"headerlink\" title=\"架构不匹配可按如下方式创建环境\"></a>架构不匹配可按如下方式创建环境</h3><pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\"># 创建一个可以安装 x64 包的虚拟环境\nCONDA_SUBDIR&#x3D;osx-64 conda create -n [paddlexName] python&#x3D;[version]\n\n# 激活该环境\nconda activate [paddlexName]\n\n# 验证该环境支持平台\npython -c &quot;import platform;print(platform.machine())&quot;\n\n# 确保该环境为创建的包为 x64 架构所用\nconda env config vars set CONDA_SUBDIR&#x3D;osx-64\n\n# 退出该环境\nconda deactivate\n\n# 重新激活该环境\nconda activate [paddlexName]\n\n# 查看环境变量，确定是osx-64\necho &quot;CONDA_SUBDIR: $CONDA_SUBDIR&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>安装完成后可进入 Python 进行测试</p>\n<h2 id=\"GUI-方式\"><a href=\"#GUI-方式\" class=\"headerlink\" title=\"GUI 方式\"></a>GUI 方式</h2><ol>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucGFkZGxlcGFkZGxlLm9yZy5jbi9wYWRkbGV4L2Rvd25sb2Fk\">PaddleX GUI 下载<i class=\"fa fa-external-link-alt\"></i></span></li>\n<li>解压后，修改文件夹名称为：[可执行文件名称].app</li>\n<li>拷贝到应用程序目录下，安装完毕</li>\n</ol>\n<blockquote>\n<p>也可按文件夹中提示方式直接使用</p>\n</blockquote>\n<h2 id=\"Restful-方式\"><a href=\"#Restful-方式\" class=\"headerlink\" title=\"Restful 方式\"></a>Restful 方式</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iai5iY2Vib3MuY29tL3BhZGRsZXgvUGFkZGxlWF9SZW1vdGVfR1VJL21hYy9QYWRkbGVYX1JlbW90ZV9HVUkuemlw\">Mac 版下载地址<i class=\"fa fa-external-link-alt\"></i></span><br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9iai5iY2Vib3MuY29tL3BhZGRsZXgvUGFkZGxlWF9SZW1vdGVfR1VJL3dpbmRvd3MvUGFkZGxlWF9SZW1vdGVfR1VJLnppcA==\">Win 版下载地址<i class=\"fa fa-external-link-alt\"></i></span></p>\n<blockquote>\n<p>下载后解压按说明文件操作即可<br><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1BhZGRsZVBhZGRsZS9QYWRkbGVYL2Jsb2IvZGV2ZWxvcC9kb2NzL1Jlc2Z1bF9BUEkvZG9jcy9yZWFkbWUubWQ=\">详细说明<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>"},{"title":"GIS - 天地图应用开发基础知识 - 编写第一个Map应用","date":"2021-08-23T05:57:07.000Z","_content":"\n## 简介\n\n使用第三方 GIS 平台 - “天地图”，搭建 Map 应用。\n\n<!-- more -->\n\n## 注册账号\n\n<https://uums.tianditu.gov.cn/register>\n\n## 打开控制台\n\n<https://console.tianditu.gov.cn/api/key>\n\n1. 创建新应用（浏览器端）\n2. 复制 Key 备用\n\n## 示例代码\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"keywords\" content=\"天地图\" />\n    <title>GIS - 天地图应用开发基础知识 - 生成第一个Map应用</title>\n    <script\n      type=\"text/javascript\"\n      src=\"http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥\"\n    ></script>\n    <style type=\"text/css\">\n      body,\n      html {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        font-family: \"Microsoft YaHei\";\n      }\n      #mapDiv {\n        width: 100%;\n        height: 400px;\n      }\n      input,\n      b,\n      p {\n        margin-left: 5px;\n        font-size: 14px;\n      }\n    </style>\n    <script>\n      var map;\n      var zoom = 12;\n      function onLoad() {\n        // map = new T.Map(\"mapDiv\"); // 默认为：球面墨卡托投影\n        map = new T.Map(\"mapDiv\", {\n          projection: \"EPSG:4326\", // 经纬度直投，编码为：EPSG:4326\n        });\n        map.centerAndZoom(new T.LngLat(112.54502, 37.86789), zoom);\n      }\n    </script>\n  </head>\n  <body onLoad=\"onLoad()\">\n    <div id=\"mapDiv\"></div>\n  </body>\n</html>\n```\n\n![效果图片](image.jpg)\n","source":"_posts/GIS/TDT/FirstCode.md","raw":"---\ntitle: GIS - 天地图应用开发基础知识 - 编写第一个Map应用\ndate: 2021-08-23 13:57:07\ncategories:\n\t- 学习笔记\ntags:\n    - GIS\n    - 天地图\n---\n\n## 简介\n\n使用第三方 GIS 平台 - “天地图”，搭建 Map 应用。\n\n<!-- more -->\n\n## 注册账号\n\n<https://uums.tianditu.gov.cn/register>\n\n## 打开控制台\n\n<https://console.tianditu.gov.cn/api/key>\n\n1. 创建新应用（浏览器端）\n2. 复制 Key 备用\n\n## 示例代码\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\" />\n    <meta name=\"keywords\" content=\"天地图\" />\n    <title>GIS - 天地图应用开发基础知识 - 生成第一个Map应用</title>\n    <script\n      type=\"text/javascript\"\n      src=\"http://api.tianditu.gov.cn/api?v=4.0&tk=您的密钥\"\n    ></script>\n    <style type=\"text/css\">\n      body,\n      html {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        font-family: \"Microsoft YaHei\";\n      }\n      #mapDiv {\n        width: 100%;\n        height: 400px;\n      }\n      input,\n      b,\n      p {\n        margin-left: 5px;\n        font-size: 14px;\n      }\n    </style>\n    <script>\n      var map;\n      var zoom = 12;\n      function onLoad() {\n        // map = new T.Map(\"mapDiv\"); // 默认为：球面墨卡托投影\n        map = new T.Map(\"mapDiv\", {\n          projection: \"EPSG:4326\", // 经纬度直投，编码为：EPSG:4326\n        });\n        map.centerAndZoom(new T.LngLat(112.54502, 37.86789), zoom);\n      }\n    </script>\n  </head>\n  <body onLoad=\"onLoad()\">\n    <div id=\"mapDiv\"></div>\n  </body>\n</html>\n```\n\n![效果图片](image.jpg)\n","slug":"GIS/TDT/FirstCode","published":1,"updated":"2022-10-21T08:03:04.389Z","_id":"cl526b8xv000s4d0h2k6ldcdc","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>使用第三方 GIS 平台 - “天地图”，搭建 Map 应用。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91dW1zLnRpYW5kaXR1Lmdvdi5jbi9yZWdpc3Rlcg==\">https://uums.tianditu.gov.cn/register<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"打开控制台\"><a href=\"#打开控制台\" class=\"headerlink\" title=\"打开控制台\"></a>打开控制台</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLnRpYW5kaXR1Lmdvdi5jbi9hcGkva2V5\">https://console.tianditu.gov.cn/api/key<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>创建新应用（浏览器端）</li>\n<li>复制 Key 备用</li>\n</ol>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content-type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>keywords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>天地图<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>GIS - 天地图应用开发基础知识 - 生成第一个Map应用<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://api.tianditu.gov.cn/api?v=4.0&amp;tk=您的密钥<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n      <span class=\"token selector\">body,\n      html</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Microsoft YaHei\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token selector\">#mapDiv</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token selector\">input,\n      b,\n      p</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">var</span> map<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> zoom <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// map = new T.Map(\"mapDiv\"); // 默认为：球面墨卡托投影</span>\n        map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">T<span class=\"token punctuation\">.</span>Map</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mapDiv\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">projection</span><span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:4326\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 经纬度直投，编码为：EPSG:4326</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">centerAndZoom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">T<span class=\"token punctuation\">.</span>LngLat</span><span class=\"token punctuation\">(</span><span class=\"token number\">112.54502</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37.86789</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onLoad</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mapDiv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img data-src=\"/GIS/TDT/FirstCode/image.jpg\" alt=\"效果图片\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>使用第三方 GIS 平台 - “天地图”，搭建 Map 应用。</p>","more":"<h2 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly91dW1zLnRpYW5kaXR1Lmdvdi5jbi9yZWdpc3Rlcg==\">https://uums.tianditu.gov.cn/register<i class=\"fa fa-external-link-alt\"></i></span></p>\n<h2 id=\"打开控制台\"><a href=\"#打开控制台\" class=\"headerlink\" title=\"打开控制台\"></a>打开控制台</h2><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLnRpYW5kaXR1Lmdvdi5jbi9hcGkva2V5\">https://console.tianditu.gov.cn/api/key<i class=\"fa fa-external-link-alt\"></i></span></p>\n<ol>\n<li>创建新应用（浏览器端）</li>\n<li>复制 Key 备用</li>\n</ol>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content-type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>keywords<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>天地图<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>GIS - 天地图应用开发基础知识 - 生成第一个Map应用<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span>\n      <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://api.tianditu.gov.cn/api?v=4.0&amp;tk=您的密钥<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n      <span class=\"token selector\">body,\n      html</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Microsoft YaHei\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token selector\">#mapDiv</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 400px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token selector\">input,\n      b,\n      p</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">margin-left</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n        <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 14px<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n      <span class=\"token keyword\">var</span> map<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">var</span> zoom <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">function</span> <span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// map = new T.Map(\"mapDiv\"); // 默认为：球面墨卡托投影</span>\n        map <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">T<span class=\"token punctuation\">.</span>Map</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mapDiv\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token literal-property property\">projection</span><span class=\"token operator\">:</span> <span class=\"token string\">\"EPSG:4326\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 经纬度直投，编码为：EPSG:4326</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        map<span class=\"token punctuation\">.</span><span class=\"token function\">centerAndZoom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">T<span class=\"token punctuation\">.</span>LngLat</span><span class=\"token punctuation\">(</span><span class=\"token number\">112.54502</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37.86789</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> zoom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token special-attr\"><span class=\"token attr-name\">onLoad</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\"><span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>mapDiv<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><img data-src=\"/GIS/TDT/FirstCode/image.jpg\" alt=\"效果图片\"></p>"},{"title":"H5PlusAPI 学习内容整理 - Geolocation","date":"2021-08-24T06:10:26.000Z","_content":"\n## 简介\n\nGeolocation 模块管理设备位置信息，用于获取地理位置信息，如经度、纬度等。通过 plus.geolocation 可获取设备位置管理对象。虽然 W3C 已经提供标准 API 获取位置信息，但在某些平台存在差异或未实现，为了保持各平台的统一性，定义此规范接口获取位置信息。\n\n<!-- more -->\n\n## H5Plus 功能模块配置\n\n```json\n{\n  \"permissions\": {\n    \"Geolocation\": {\n      \"description\": \"位置信息\"\n    }\n  }\n}\n```\n\n## getCurrentPosition\n\n获取当前设备位置信息\n\n> 位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取，由于获取位置信息可能需要较长的时间，当成功获取位置信息后将通过 successCB 回调函数返回。\n\n```js\nvoid plus.geolocation.getCurrentPosition(successCB, errorCB, option);\n```\n\n1. successCB: ( GeolocationSuccessCallback )\n   必选 获取设备位置信息成功回调函数\n   回调参数: Position\n2. errorCB: ( GeolocationErrorCallback )\n   可选 获取设备位置信息失败回调函数\n   回调参数: GeolocationError\n3. options: ( PositionOptions )\n   可选 获取设备位置信息的参数\n\n## watchPosition\n\n监听设备位置变化信息\n\n> 位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取。 当位置信息更新后将通过 successCB 回调函数返回。 位置信息获取失败则调用回调函数 errorCB。\n\n```js\nNumber plus.geolocation.watchPosition(successCB, errorCB, option);\n```\n\n1. successCB: ( GeolocationSuccessCallback )\n   必选 获取设备位置信息成功回调函数\n   回调参数: Position\n2. errorCB: ( GeolocationErrorCallback )\n   可选 获取设备位置信息失败回调函数\n   回调参数: GeolocationError\n3. options: ( PositionOptions )\n   可选 获取设备位置信息的参数\n4. 返回值: ( Number )\n   用于标识位置信息监听器(watchId)，可通过 clearWatch 方法取消监听\n\n## clearWatch\n\n关闭监听设备位置信息\n\n```js\nvoid plus.geolocation.clearWatch(watchId);\n```\n\n1. watchId: ( Number )\n   必选 需要取消的位置监听器标识，调用 watchPosition 方法的返回值\n\n## GeolocationSuccessCallback\n\n获取设备位置信息成功的回调函数\n\n```js\nvoid onSuccess(position);\n```\n\n1. position: ( Position )\n   必选 设备的地理位置信息\n\n## GeolocationErrorCallback\n\n获取设备位置信息失败的回调函数\n\n```js\nvoid onError(error);\n```\n\n1. error: ( GeolocationError )\n   必选 获取位置操作的错误信息\n\n## Position\n\n设备位置信息数据\n\n- coords: (Coordinates 类型 )地理坐标信息，包括经纬度、海拔、速度等信息\n- coordsType: (String 类型 )获取到地理坐标信息的坐标系类型\n  > 可取以下坐标系类型： \"wgs84\"：表示 WGS-84 坐标系； \"gcj02\"：表示国测局经纬度坐标系； \"bd09\"：表示百度墨卡托坐标系，仅百度定位支持； \"bd09ll\"：表示百度经纬度坐标系，仅百度定位支持。\n- timestamp: (Number 类型 )获取到地理坐标的时间戳信息\n  > 时间戳值为从 1970 年 1 月 1 日至今的毫秒数\n- address: (Address 类型 )获取到地理位置对应的地址信息\n  > 获取地址信息需要连接到服务器进行解析，所以会消耗更多的资源，如果不需要获取地址信息可通过设置 PositionOptions 参数的 geocode 属性值为 false 避免获取地址信息。 如果没有获取到地址信息则返回 undefined。\n- addresses: (String 类型 )获取完整地址描述信息\n  > 获取完整地址描述信息，如果没有获取到地址信息则返回 undefined\n\n## Address\n\n地址信息\n\n- country: (String 类型 )国家\n  > 如“中国”，如果无法获取此信息则返回 undefined。\n- province: (String 类型 )省份名称\n  > 如“北京市”，如果无法获取此信息则返回 undefined。\n- city: (String 类型 )城市名称\n  > 如“北京市”，如果无法获取此信息则返回 undefined。\n- district: (String 类型 )区（县）名称\n  > 如“朝阳区”，如果无法获取此信息则返回 undefined。\n- street: (String 类型 )街道信息\n  > 如“酒仙桥路”，如果无法获取此信息则返回 undefined。\n- streetNum: (String 类型 )获取街道门牌号信息\n  > 如“3 号”，如果无法获取此信息则返回 undefined。\n- poiName: (String 类型 )POI 信息\n  > 如“电子城．国际电子总部”，如果无法获取此信息则返回 undefined。\n- postalCode: (String 类型 )邮政编码\n  > 如“100016”，如果无法获取此信息则返回 undefined。\n- cityCode: (String 类型 )城市代码\n  > 如“010”，如果无法获取此信息则返回 undefined。\n\n## Coordinates\n\n地理坐标信息\n\n- latitude: (Number 类型 )坐标纬度值\n  > 数据类型对象，地理坐标中的纬度值。\n- longitude: (Number 类型 )坐标经度值\n  > 数据类型对象，地理坐标中的经度值。\n- altitude: (Number 类型 )海拔信息\n  > 数据类型对象，如果无法获取此信息，则此值为空（null）。\n- accuracy: (Number 类型 )地理坐标信息的精确度信息\n  > 数据类型对象，单位为米，其有效值必须大于 0。\n- altitudeAccuracy: (Number 类型 )海拔的精确度信息\n  > 数据类型对象，单位为米，其有效值必须大于 0。如果无法获取海拔信息，则此值为空（null）。\n- heading: (Number 类型 )表示设备移动的方向\n  > 数据类型对象，范围为 0 到 360，表示相对于正北方向的角度。如果无法获取此信息，则此值为空（null）。如果设备没有移动则此值为 NaN。\n- speed: (Number 类型 )表示设备移动的速度\n  > 数据类型对象，单位为米每秒（m/s），其有效值必须大于 0。如果无法获取速度信息，则此值为空（null）。\n\n## PositionOptions\n\n监听设备位置信息参数\n\n- enableHighAccuracy: (Boolean 类型 )是否高精确度获取位置信息\n  > 高精度获取表示需要使用更多的系统资源，默认值为 false。\n- timeout: (Number 类型 )获取位置信息的超时时间\n  > 单位为毫秒（ms），默认值为不超时。如果在指定的时间内没有获取到位置信息则触发错误回调函数。\n- maximumAge: (Number 类型 )获取位置信息的间隔时间\n  > 单位为毫秒（ms），默认值为 5000（即 5 秒）。调用 plus.geolocation.watchPosition 时为更新位置信息的间隔时间。 注意：在不同定位模块下支持范围值可能不同，如百度定位模块的间隔范围为大于等于 1 秒，如果设置的值小于最小值则使用最小值。\n- provider: (String 类型 )优先使用的定位模块\n  > 可取以下供应者： \"system\"：表示系统定位模块，支持 wgs84 坐标系； \"baidu\"：表示百度定位模块，支持 gcj02/bd09/bd09ll 坐标系； \"amap\"：表示高德定位模块，支持 gcj02 坐标系。 默认值按以下优先顺序获取（amap>baidu>system），若指定的 provider 不存在或无效则返回错误回调。 注意：百度/高德定位模块需要配置百度/高德地图相关参数才能正常使用。\n- coordsType: (String 类型 )指定获取的定位数据坐标系类型\n  > 可取以下坐标系类型： \"wgs84\"：表示 WGS-84 坐标系； \"gcj02\"：表示国测局经纬度坐标系； \"bd09\"：表示百度墨卡托坐标系； \"bd09ll\"：表示百度经纬度坐标系； provider 为\"system\"时，支持 wgs84 坐标系，默认使用\"wgs84\"坐标系； provider 为\"baidu\"时，支持 gcj02/bd09/bd09ll 坐标系，默认使用\"gcj02\"坐标系； provider 为\"amap\"时，支持 gcj02 坐标系，默认使用\"gcj02\"坐标系。 如果设置的坐标系类型 provider 不支持，则返回错误。\n- geocode: (Boolean 类型 )是否解析地址信息\n  > 解析的地址信息保存到 Position 对象的 address、addresses 属性中，true 表示解析地址信息，false 表示不解析地址信息，返回的 Position 对象的 address、addresses 属性值为 undefined，默认值为 true。 如果解析地址信息失败则返回的 Position 对象的 address、addresses 属性值为 null。\n\n## GeolocationError\n\n定位错误信息\n\n- PERMISSION_DENIED: (Number 类型 )访问权限被拒绝\n  > 系统不允许程序获取定位功能，错误代码常量值为 1。\n- POSITION_UNAVAILABLE: (Number 类型 )位置信息不可用\n  > 无法获取有效的位置信息，错误代码常量值为 2。\n- TIMEOUT: (Number 类型 )获取位置信息超时\n  > 无法在指定的时间内获取位置信息，错误代码常量值为 3。\n- code: (Number 类型 )错误代码\n  > 可取值:\n  >\n  > - PERMISSION_DENIED - 用户拒绝授权\n  > - POSITION_UNAVAILABLE - 位置服务不可用，如系统定位服务关闭\n  > - TIMEOUT - 定位超时，定位时超过 PositionOptions.timeout 设置的时间触发，此时通常可以重试\n  > - 其它错误 - 5+ 扩展错误码，参考 5+ API 错误代码中的“Geolocation 模块错误”\n- message: (String 类型 )错误描述信息\n  > 详细错误描述信息。\n","source":"_posts/H5/PlusAPI/Geolocation.md","raw":"---\ntitle: H5PlusAPI 学习内容整理 - Geolocation\ndate: 2021-08-24 14:10:26\ncategories:\n  - 学习笔记\ntags:\n  - H5\n  - 定位\n  - UniApp\n---\n\n## 简介\n\nGeolocation 模块管理设备位置信息，用于获取地理位置信息，如经度、纬度等。通过 plus.geolocation 可获取设备位置管理对象。虽然 W3C 已经提供标准 API 获取位置信息，但在某些平台存在差异或未实现，为了保持各平台的统一性，定义此规范接口获取位置信息。\n\n<!-- more -->\n\n## H5Plus 功能模块配置\n\n```json\n{\n  \"permissions\": {\n    \"Geolocation\": {\n      \"description\": \"位置信息\"\n    }\n  }\n}\n```\n\n## getCurrentPosition\n\n获取当前设备位置信息\n\n> 位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取，由于获取位置信息可能需要较长的时间，当成功获取位置信息后将通过 successCB 回调函数返回。\n\n```js\nvoid plus.geolocation.getCurrentPosition(successCB, errorCB, option);\n```\n\n1. successCB: ( GeolocationSuccessCallback )\n   必选 获取设备位置信息成功回调函数\n   回调参数: Position\n2. errorCB: ( GeolocationErrorCallback )\n   可选 获取设备位置信息失败回调函数\n   回调参数: GeolocationError\n3. options: ( PositionOptions )\n   可选 获取设备位置信息的参数\n\n## watchPosition\n\n监听设备位置变化信息\n\n> 位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取。 当位置信息更新后将通过 successCB 回调函数返回。 位置信息获取失败则调用回调函数 errorCB。\n\n```js\nNumber plus.geolocation.watchPosition(successCB, errorCB, option);\n```\n\n1. successCB: ( GeolocationSuccessCallback )\n   必选 获取设备位置信息成功回调函数\n   回调参数: Position\n2. errorCB: ( GeolocationErrorCallback )\n   可选 获取设备位置信息失败回调函数\n   回调参数: GeolocationError\n3. options: ( PositionOptions )\n   可选 获取设备位置信息的参数\n4. 返回值: ( Number )\n   用于标识位置信息监听器(watchId)，可通过 clearWatch 方法取消监听\n\n## clearWatch\n\n关闭监听设备位置信息\n\n```js\nvoid plus.geolocation.clearWatch(watchId);\n```\n\n1. watchId: ( Number )\n   必选 需要取消的位置监听器标识，调用 watchPosition 方法的返回值\n\n## GeolocationSuccessCallback\n\n获取设备位置信息成功的回调函数\n\n```js\nvoid onSuccess(position);\n```\n\n1. position: ( Position )\n   必选 设备的地理位置信息\n\n## GeolocationErrorCallback\n\n获取设备位置信息失败的回调函数\n\n```js\nvoid onError(error);\n```\n\n1. error: ( GeolocationError )\n   必选 获取位置操作的错误信息\n\n## Position\n\n设备位置信息数据\n\n- coords: (Coordinates 类型 )地理坐标信息，包括经纬度、海拔、速度等信息\n- coordsType: (String 类型 )获取到地理坐标信息的坐标系类型\n  > 可取以下坐标系类型： \"wgs84\"：表示 WGS-84 坐标系； \"gcj02\"：表示国测局经纬度坐标系； \"bd09\"：表示百度墨卡托坐标系，仅百度定位支持； \"bd09ll\"：表示百度经纬度坐标系，仅百度定位支持。\n- timestamp: (Number 类型 )获取到地理坐标的时间戳信息\n  > 时间戳值为从 1970 年 1 月 1 日至今的毫秒数\n- address: (Address 类型 )获取到地理位置对应的地址信息\n  > 获取地址信息需要连接到服务器进行解析，所以会消耗更多的资源，如果不需要获取地址信息可通过设置 PositionOptions 参数的 geocode 属性值为 false 避免获取地址信息。 如果没有获取到地址信息则返回 undefined。\n- addresses: (String 类型 )获取完整地址描述信息\n  > 获取完整地址描述信息，如果没有获取到地址信息则返回 undefined\n\n## Address\n\n地址信息\n\n- country: (String 类型 )国家\n  > 如“中国”，如果无法获取此信息则返回 undefined。\n- province: (String 类型 )省份名称\n  > 如“北京市”，如果无法获取此信息则返回 undefined。\n- city: (String 类型 )城市名称\n  > 如“北京市”，如果无法获取此信息则返回 undefined。\n- district: (String 类型 )区（县）名称\n  > 如“朝阳区”，如果无法获取此信息则返回 undefined。\n- street: (String 类型 )街道信息\n  > 如“酒仙桥路”，如果无法获取此信息则返回 undefined。\n- streetNum: (String 类型 )获取街道门牌号信息\n  > 如“3 号”，如果无法获取此信息则返回 undefined。\n- poiName: (String 类型 )POI 信息\n  > 如“电子城．国际电子总部”，如果无法获取此信息则返回 undefined。\n- postalCode: (String 类型 )邮政编码\n  > 如“100016”，如果无法获取此信息则返回 undefined。\n- cityCode: (String 类型 )城市代码\n  > 如“010”，如果无法获取此信息则返回 undefined。\n\n## Coordinates\n\n地理坐标信息\n\n- latitude: (Number 类型 )坐标纬度值\n  > 数据类型对象，地理坐标中的纬度值。\n- longitude: (Number 类型 )坐标经度值\n  > 数据类型对象，地理坐标中的经度值。\n- altitude: (Number 类型 )海拔信息\n  > 数据类型对象，如果无法获取此信息，则此值为空（null）。\n- accuracy: (Number 类型 )地理坐标信息的精确度信息\n  > 数据类型对象，单位为米，其有效值必须大于 0。\n- altitudeAccuracy: (Number 类型 )海拔的精确度信息\n  > 数据类型对象，单位为米，其有效值必须大于 0。如果无法获取海拔信息，则此值为空（null）。\n- heading: (Number 类型 )表示设备移动的方向\n  > 数据类型对象，范围为 0 到 360，表示相对于正北方向的角度。如果无法获取此信息，则此值为空（null）。如果设备没有移动则此值为 NaN。\n- speed: (Number 类型 )表示设备移动的速度\n  > 数据类型对象，单位为米每秒（m/s），其有效值必须大于 0。如果无法获取速度信息，则此值为空（null）。\n\n## PositionOptions\n\n监听设备位置信息参数\n\n- enableHighAccuracy: (Boolean 类型 )是否高精确度获取位置信息\n  > 高精度获取表示需要使用更多的系统资源，默认值为 false。\n- timeout: (Number 类型 )获取位置信息的超时时间\n  > 单位为毫秒（ms），默认值为不超时。如果在指定的时间内没有获取到位置信息则触发错误回调函数。\n- maximumAge: (Number 类型 )获取位置信息的间隔时间\n  > 单位为毫秒（ms），默认值为 5000（即 5 秒）。调用 plus.geolocation.watchPosition 时为更新位置信息的间隔时间。 注意：在不同定位模块下支持范围值可能不同，如百度定位模块的间隔范围为大于等于 1 秒，如果设置的值小于最小值则使用最小值。\n- provider: (String 类型 )优先使用的定位模块\n  > 可取以下供应者： \"system\"：表示系统定位模块，支持 wgs84 坐标系； \"baidu\"：表示百度定位模块，支持 gcj02/bd09/bd09ll 坐标系； \"amap\"：表示高德定位模块，支持 gcj02 坐标系。 默认值按以下优先顺序获取（amap>baidu>system），若指定的 provider 不存在或无效则返回错误回调。 注意：百度/高德定位模块需要配置百度/高德地图相关参数才能正常使用。\n- coordsType: (String 类型 )指定获取的定位数据坐标系类型\n  > 可取以下坐标系类型： \"wgs84\"：表示 WGS-84 坐标系； \"gcj02\"：表示国测局经纬度坐标系； \"bd09\"：表示百度墨卡托坐标系； \"bd09ll\"：表示百度经纬度坐标系； provider 为\"system\"时，支持 wgs84 坐标系，默认使用\"wgs84\"坐标系； provider 为\"baidu\"时，支持 gcj02/bd09/bd09ll 坐标系，默认使用\"gcj02\"坐标系； provider 为\"amap\"时，支持 gcj02 坐标系，默认使用\"gcj02\"坐标系。 如果设置的坐标系类型 provider 不支持，则返回错误。\n- geocode: (Boolean 类型 )是否解析地址信息\n  > 解析的地址信息保存到 Position 对象的 address、addresses 属性中，true 表示解析地址信息，false 表示不解析地址信息，返回的 Position 对象的 address、addresses 属性值为 undefined，默认值为 true。 如果解析地址信息失败则返回的 Position 对象的 address、addresses 属性值为 null。\n\n## GeolocationError\n\n定位错误信息\n\n- PERMISSION_DENIED: (Number 类型 )访问权限被拒绝\n  > 系统不允许程序获取定位功能，错误代码常量值为 1。\n- POSITION_UNAVAILABLE: (Number 类型 )位置信息不可用\n  > 无法获取有效的位置信息，错误代码常量值为 2。\n- TIMEOUT: (Number 类型 )获取位置信息超时\n  > 无法在指定的时间内获取位置信息，错误代码常量值为 3。\n- code: (Number 类型 )错误代码\n  > 可取值:\n  >\n  > - PERMISSION_DENIED - 用户拒绝授权\n  > - POSITION_UNAVAILABLE - 位置服务不可用，如系统定位服务关闭\n  > - TIMEOUT - 定位超时，定位时超过 PositionOptions.timeout 设置的时间触发，此时通常可以重试\n  > - 其它错误 - 5+ 扩展错误码，参考 5+ API 错误代码中的“Geolocation 模块错误”\n- message: (String 类型 )错误描述信息\n  > 详细错误描述信息。\n","slug":"H5/PlusAPI/Geolocation","published":1,"updated":"2022-07-01T07:50:20.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xv000w4d0h132cgrw4","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Geolocation 模块管理设备位置信息，用于获取地理位置信息，如经度、纬度等。通过 plus.geolocation 可获取设备位置管理对象。虽然 W3C 已经提供标准 API 获取位置信息，但在某些平台存在差异或未实现，为了保持各平台的统一性，定义此规范接口获取位置信息。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"H5Plus-功能模块配置\"><a href=\"#H5Plus-功能模块配置\" class=\"headerlink\" title=\"H5Plus 功能模块配置\"></a>H5Plus 功能模块配置</h2><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"Geolocation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"位置信息\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"getCurrentPosition\"><a href=\"#getCurrentPosition\" class=\"headerlink\" title=\"getCurrentPosition\"></a>getCurrentPosition</h2><p>获取当前设备位置信息</p>\n<blockquote>\n<p>位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取，由于获取位置信息可能需要较长的时间，当成功获取位置信息后将通过 successCB 回调函数返回。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> plus<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span>successCB<span class=\"token punctuation\">,</span> errorCB<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>successCB: ( GeolocationSuccessCallback )<br>必选 获取设备位置信息成功回调函数<br>回调参数: Position</li>\n<li>errorCB: ( GeolocationErrorCallback )<br>可选 获取设备位置信息失败回调函数<br>回调参数: GeolocationError</li>\n<li>options: ( PositionOptions )<br>可选 获取设备位置信息的参数</li>\n</ol>\n<h2 id=\"watchPosition\"><a href=\"#watchPosition\" class=\"headerlink\" title=\"watchPosition\"></a>watchPosition</h2><p>监听设备位置变化信息</p>\n<blockquote>\n<p>位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取。 当位置信息更新后将通过 successCB 回调函数返回。 位置信息获取失败则调用回调函数 errorCB。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Number plus<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">watchPosition</span><span class=\"token punctuation\">(</span>successCB<span class=\"token punctuation\">,</span> errorCB<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>successCB: ( GeolocationSuccessCallback )<br>必选 获取设备位置信息成功回调函数<br>回调参数: Position</li>\n<li>errorCB: ( GeolocationErrorCallback )<br>可选 获取设备位置信息失败回调函数<br>回调参数: GeolocationError</li>\n<li>options: ( PositionOptions )<br>可选 获取设备位置信息的参数</li>\n<li>返回值: ( Number )<br>用于标识位置信息监听器(watchId)，可通过 clearWatch 方法取消监听</li>\n</ol>\n<h2 id=\"clearWatch\"><a href=\"#clearWatch\" class=\"headerlink\" title=\"clearWatch\"></a>clearWatch</h2><p>关闭监听设备位置信息</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> plus<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">clearWatch</span><span class=\"token punctuation\">(</span>watchId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>watchId: ( Number )<br>必选 需要取消的位置监听器标识，调用 watchPosition 方法的返回值</li>\n</ol>\n<h2 id=\"GeolocationSuccessCallback\"><a href=\"#GeolocationSuccessCallback\" class=\"headerlink\" title=\"GeolocationSuccessCallback\"></a>GeolocationSuccessCallback</h2><p>获取设备位置信息成功的回调函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> <span class=\"token function\">onSuccess</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>position: ( Position )<br>必选 设备的地理位置信息</li>\n</ol>\n<h2 id=\"GeolocationErrorCallback\"><a href=\"#GeolocationErrorCallback\" class=\"headerlink\" title=\"GeolocationErrorCallback\"></a>GeolocationErrorCallback</h2><p>获取设备位置信息失败的回调函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>error: ( GeolocationError )<br>必选 获取位置操作的错误信息</li>\n</ol>\n<h2 id=\"Position\"><a href=\"#Position\" class=\"headerlink\" title=\"Position\"></a>Position</h2><p>设备位置信息数据</p>\n<ul>\n<li>coords: (Coordinates 类型 )地理坐标信息，包括经纬度、海拔、速度等信息</li>\n<li>coordsType: (String 类型 )获取到地理坐标信息的坐标系类型<blockquote>\n<p>可取以下坐标系类型： “wgs84”：表示 WGS-84 坐标系； “gcj02”：表示国测局经纬度坐标系； “bd09”：表示百度墨卡托坐标系，仅百度定位支持； “bd09ll”：表示百度经纬度坐标系，仅百度定位支持。</p>\n</blockquote>\n</li>\n<li>timestamp: (Number 类型 )获取到地理坐标的时间戳信息<blockquote>\n<p>时间戳值为从 1970 年 1 月 1 日至今的毫秒数</p>\n</blockquote>\n</li>\n<li>address: (Address 类型 )获取到地理位置对应的地址信息<blockquote>\n<p>获取地址信息需要连接到服务器进行解析，所以会消耗更多的资源，如果不需要获取地址信息可通过设置 PositionOptions 参数的 geocode 属性值为 false 避免获取地址信息。 如果没有获取到地址信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>addresses: (String 类型 )获取完整地址描述信息<blockquote>\n<p>获取完整地址描述信息，如果没有获取到地址信息则返回 undefined</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Address\"><a href=\"#Address\" class=\"headerlink\" title=\"Address\"></a>Address</h2><p>地址信息</p>\n<ul>\n<li>country: (String 类型 )国家<blockquote>\n<p>如“中国”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>province: (String 类型 )省份名称<blockquote>\n<p>如“北京市”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>city: (String 类型 )城市名称<blockquote>\n<p>如“北京市”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>district: (String 类型 )区（县）名称<blockquote>\n<p>如“朝阳区”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>street: (String 类型 )街道信息<blockquote>\n<p>如“酒仙桥路”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>streetNum: (String 类型 )获取街道门牌号信息<blockquote>\n<p>如“3 号”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>poiName: (String 类型 )POI 信息<blockquote>\n<p>如“电子城．国际电子总部”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>postalCode: (String 类型 )邮政编码<blockquote>\n<p>如“100016”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>cityCode: (String 类型 )城市代码<blockquote>\n<p>如“010”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Coordinates\"><a href=\"#Coordinates\" class=\"headerlink\" title=\"Coordinates\"></a>Coordinates</h2><p>地理坐标信息</p>\n<ul>\n<li>latitude: (Number 类型 )坐标纬度值<blockquote>\n<p>数据类型对象，地理坐标中的纬度值。</p>\n</blockquote>\n</li>\n<li>longitude: (Number 类型 )坐标经度值<blockquote>\n<p>数据类型对象，地理坐标中的经度值。</p>\n</blockquote>\n</li>\n<li>altitude: (Number 类型 )海拔信息<blockquote>\n<p>数据类型对象，如果无法获取此信息，则此值为空（null）。</p>\n</blockquote>\n</li>\n<li>accuracy: (Number 类型 )地理坐标信息的精确度信息<blockquote>\n<p>数据类型对象，单位为米，其有效值必须大于 0。</p>\n</blockquote>\n</li>\n<li>altitudeAccuracy: (Number 类型 )海拔的精确度信息<blockquote>\n<p>数据类型对象，单位为米，其有效值必须大于 0。如果无法获取海拔信息，则此值为空（null）。</p>\n</blockquote>\n</li>\n<li>heading: (Number 类型 )表示设备移动的方向<blockquote>\n<p>数据类型对象，范围为 0 到 360，表示相对于正北方向的角度。如果无法获取此信息，则此值为空（null）。如果设备没有移动则此值为 NaN。</p>\n</blockquote>\n</li>\n<li>speed: (Number 类型 )表示设备移动的速度<blockquote>\n<p>数据类型对象，单位为米每秒（m&#x2F;s），其有效值必须大于 0。如果无法获取速度信息，则此值为空（null）。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"PositionOptions\"><a href=\"#PositionOptions\" class=\"headerlink\" title=\"PositionOptions\"></a>PositionOptions</h2><p>监听设备位置信息参数</p>\n<ul>\n<li>enableHighAccuracy: (Boolean 类型 )是否高精确度获取位置信息<blockquote>\n<p>高精度获取表示需要使用更多的系统资源，默认值为 false。</p>\n</blockquote>\n</li>\n<li>timeout: (Number 类型 )获取位置信息的超时时间<blockquote>\n<p>单位为毫秒（ms），默认值为不超时。如果在指定的时间内没有获取到位置信息则触发错误回调函数。</p>\n</blockquote>\n</li>\n<li>maximumAge: (Number 类型 )获取位置信息的间隔时间<blockquote>\n<p>单位为毫秒（ms），默认值为 5000（即 5 秒）。调用 plus.geolocation.watchPosition 时为更新位置信息的间隔时间。 注意：在不同定位模块下支持范围值可能不同，如百度定位模块的间隔范围为大于等于 1 秒，如果设置的值小于最小值则使用最小值。</p>\n</blockquote>\n</li>\n<li>provider: (String 类型 )优先使用的定位模块<blockquote>\n<p>可取以下供应者： “system”：表示系统定位模块，支持 wgs84 坐标系； “baidu”：表示百度定位模块，支持 gcj02&#x2F;bd09&#x2F;bd09ll 坐标系； “amap”：表示高德定位模块，支持 gcj02 坐标系。 默认值按以下优先顺序获取（amap&gt;baidu&gt;system），若指定的 provider 不存在或无效则返回错误回调。 注意：百度&#x2F;高德定位模块需要配置百度&#x2F;高德地图相关参数才能正常使用。</p>\n</blockquote>\n</li>\n<li>coordsType: (String 类型 )指定获取的定位数据坐标系类型<blockquote>\n<p>可取以下坐标系类型： “wgs84”：表示 WGS-84 坐标系； “gcj02”：表示国测局经纬度坐标系； “bd09”：表示百度墨卡托坐标系； “bd09ll”：表示百度经纬度坐标系； provider 为”system”时，支持 wgs84 坐标系，默认使用”wgs84”坐标系； provider 为”baidu”时，支持 gcj02&#x2F;bd09&#x2F;bd09ll 坐标系，默认使用”gcj02”坐标系； provider 为”amap”时，支持 gcj02 坐标系，默认使用”gcj02”坐标系。 如果设置的坐标系类型 provider 不支持，则返回错误。</p>\n</blockquote>\n</li>\n<li>geocode: (Boolean 类型 )是否解析地址信息<blockquote>\n<p>解析的地址信息保存到 Position 对象的 address、addresses 属性中，true 表示解析地址信息，false 表示不解析地址信息，返回的 Position 对象的 address、addresses 属性值为 undefined，默认值为 true。 如果解析地址信息失败则返回的 Position 对象的 address、addresses 属性值为 null。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"GeolocationError\"><a href=\"#GeolocationError\" class=\"headerlink\" title=\"GeolocationError\"></a>GeolocationError</h2><p>定位错误信息</p>\n<ul>\n<li>PERMISSION_DENIED: (Number 类型 )访问权限被拒绝<blockquote>\n<p>系统不允许程序获取定位功能，错误代码常量值为 1。</p>\n</blockquote>\n</li>\n<li>POSITION_UNAVAILABLE: (Number 类型 )位置信息不可用<blockquote>\n<p>无法获取有效的位置信息，错误代码常量值为 2。</p>\n</blockquote>\n</li>\n<li>TIMEOUT: (Number 类型 )获取位置信息超时<blockquote>\n<p>无法在指定的时间内获取位置信息，错误代码常量值为 3。</p>\n</blockquote>\n</li>\n<li>code: (Number 类型 )错误代码<blockquote>\n<p>可取值:</p>\n<ul>\n<li>PERMISSION_DENIED - 用户拒绝授权</li>\n<li>POSITION_UNAVAILABLE - 位置服务不可用，如系统定位服务关闭</li>\n<li>TIMEOUT - 定位超时，定位时超过 PositionOptions.timeout 设置的时间触发，此时通常可以重试</li>\n<li>其它错误 - 5+ 扩展错误码，参考 5+ API 错误代码中的“Geolocation 模块错误”</li>\n</ul>\n</blockquote>\n</li>\n<li>message: (String 类型 )错误描述信息<blockquote>\n<p>详细错误描述信息。</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Geolocation 模块管理设备位置信息，用于获取地理位置信息，如经度、纬度等。通过 plus.geolocation 可获取设备位置管理对象。虽然 W3C 已经提供标准 API 获取位置信息，但在某些平台存在差异或未实现，为了保持各平台的统一性，定义此规范接口获取位置信息。</p>","more":"<h2 id=\"H5Plus-功能模块配置\"><a href=\"#H5Plus-功能模块配置\" class=\"headerlink\" title=\"H5Plus 功能模块配置\"></a>H5Plus 功能模块配置</h2><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">\"permissions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"Geolocation\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token property\">\"description\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"位置信息\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"getCurrentPosition\"><a href=\"#getCurrentPosition\" class=\"headerlink\" title=\"getCurrentPosition\"></a>getCurrentPosition</h2><p>获取当前设备位置信息</p>\n<blockquote>\n<p>位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取，由于获取位置信息可能需要较长的时间，当成功获取位置信息后将通过 successCB 回调函数返回。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> plus<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentPosition</span><span class=\"token punctuation\">(</span>successCB<span class=\"token punctuation\">,</span> errorCB<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>successCB: ( GeolocationSuccessCallback )<br>必选 获取设备位置信息成功回调函数<br>回调参数: Position</li>\n<li>errorCB: ( GeolocationErrorCallback )<br>可选 获取设备位置信息失败回调函数<br>回调参数: GeolocationError</li>\n<li>options: ( PositionOptions )<br>可选 获取设备位置信息的参数</li>\n</ol>\n<h2 id=\"watchPosition\"><a href=\"#watchPosition\" class=\"headerlink\" title=\"watchPosition\"></a>watchPosition</h2><p>监听设备位置变化信息</p>\n<blockquote>\n<p>位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取。 当位置信息更新后将通过 successCB 回调函数返回。 位置信息获取失败则调用回调函数 errorCB。</p>\n</blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Number plus<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">watchPosition</span><span class=\"token punctuation\">(</span>successCB<span class=\"token punctuation\">,</span> errorCB<span class=\"token punctuation\">,</span> option<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>successCB: ( GeolocationSuccessCallback )<br>必选 获取设备位置信息成功回调函数<br>回调参数: Position</li>\n<li>errorCB: ( GeolocationErrorCallback )<br>可选 获取设备位置信息失败回调函数<br>回调参数: GeolocationError</li>\n<li>options: ( PositionOptions )<br>可选 获取设备位置信息的参数</li>\n<li>返回值: ( Number )<br>用于标识位置信息监听器(watchId)，可通过 clearWatch 方法取消监听</li>\n</ol>\n<h2 id=\"clearWatch\"><a href=\"#clearWatch\" class=\"headerlink\" title=\"clearWatch\"></a>clearWatch</h2><p>关闭监听设备位置信息</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> plus<span class=\"token punctuation\">.</span>geolocation<span class=\"token punctuation\">.</span><span class=\"token function\">clearWatch</span><span class=\"token punctuation\">(</span>watchId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>watchId: ( Number )<br>必选 需要取消的位置监听器标识，调用 watchPosition 方法的返回值</li>\n</ol>\n<h2 id=\"GeolocationSuccessCallback\"><a href=\"#GeolocationSuccessCallback\" class=\"headerlink\" title=\"GeolocationSuccessCallback\"></a>GeolocationSuccessCallback</h2><p>获取设备位置信息成功的回调函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> <span class=\"token function\">onSuccess</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>position: ( Position )<br>必选 设备的地理位置信息</li>\n</ol>\n<h2 id=\"GeolocationErrorCallback\"><a href=\"#GeolocationErrorCallback\" class=\"headerlink\" title=\"GeolocationErrorCallback\"></a>GeolocationErrorCallback</h2><p>获取设备位置信息失败的回调函数</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">void</span> <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ol>\n<li>error: ( GeolocationError )<br>必选 获取位置操作的错误信息</li>\n</ol>\n<h2 id=\"Position\"><a href=\"#Position\" class=\"headerlink\" title=\"Position\"></a>Position</h2><p>设备位置信息数据</p>\n<ul>\n<li>coords: (Coordinates 类型 )地理坐标信息，包括经纬度、海拔、速度等信息</li>\n<li>coordsType: (String 类型 )获取到地理坐标信息的坐标系类型<blockquote>\n<p>可取以下坐标系类型： “wgs84”：表示 WGS-84 坐标系； “gcj02”：表示国测局经纬度坐标系； “bd09”：表示百度墨卡托坐标系，仅百度定位支持； “bd09ll”：表示百度经纬度坐标系，仅百度定位支持。</p>\n</blockquote>\n</li>\n<li>timestamp: (Number 类型 )获取到地理坐标的时间戳信息<blockquote>\n<p>时间戳值为从 1970 年 1 月 1 日至今的毫秒数</p>\n</blockquote>\n</li>\n<li>address: (Address 类型 )获取到地理位置对应的地址信息<blockquote>\n<p>获取地址信息需要连接到服务器进行解析，所以会消耗更多的资源，如果不需要获取地址信息可通过设置 PositionOptions 参数的 geocode 属性值为 false 避免获取地址信息。 如果没有获取到地址信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>addresses: (String 类型 )获取完整地址描述信息<blockquote>\n<p>获取完整地址描述信息，如果没有获取到地址信息则返回 undefined</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Address\"><a href=\"#Address\" class=\"headerlink\" title=\"Address\"></a>Address</h2><p>地址信息</p>\n<ul>\n<li>country: (String 类型 )国家<blockquote>\n<p>如“中国”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>province: (String 类型 )省份名称<blockquote>\n<p>如“北京市”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>city: (String 类型 )城市名称<blockquote>\n<p>如“北京市”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>district: (String 类型 )区（县）名称<blockquote>\n<p>如“朝阳区”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>street: (String 类型 )街道信息<blockquote>\n<p>如“酒仙桥路”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>streetNum: (String 类型 )获取街道门牌号信息<blockquote>\n<p>如“3 号”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>poiName: (String 类型 )POI 信息<blockquote>\n<p>如“电子城．国际电子总部”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>postalCode: (String 类型 )邮政编码<blockquote>\n<p>如“100016”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n<li>cityCode: (String 类型 )城市代码<blockquote>\n<p>如“010”，如果无法获取此信息则返回 undefined。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"Coordinates\"><a href=\"#Coordinates\" class=\"headerlink\" title=\"Coordinates\"></a>Coordinates</h2><p>地理坐标信息</p>\n<ul>\n<li>latitude: (Number 类型 )坐标纬度值<blockquote>\n<p>数据类型对象，地理坐标中的纬度值。</p>\n</blockquote>\n</li>\n<li>longitude: (Number 类型 )坐标经度值<blockquote>\n<p>数据类型对象，地理坐标中的经度值。</p>\n</blockquote>\n</li>\n<li>altitude: (Number 类型 )海拔信息<blockquote>\n<p>数据类型对象，如果无法获取此信息，则此值为空（null）。</p>\n</blockquote>\n</li>\n<li>accuracy: (Number 类型 )地理坐标信息的精确度信息<blockquote>\n<p>数据类型对象，单位为米，其有效值必须大于 0。</p>\n</blockquote>\n</li>\n<li>altitudeAccuracy: (Number 类型 )海拔的精确度信息<blockquote>\n<p>数据类型对象，单位为米，其有效值必须大于 0。如果无法获取海拔信息，则此值为空（null）。</p>\n</blockquote>\n</li>\n<li>heading: (Number 类型 )表示设备移动的方向<blockquote>\n<p>数据类型对象，范围为 0 到 360，表示相对于正北方向的角度。如果无法获取此信息，则此值为空（null）。如果设备没有移动则此值为 NaN。</p>\n</blockquote>\n</li>\n<li>speed: (Number 类型 )表示设备移动的速度<blockquote>\n<p>数据类型对象，单位为米每秒（m&#x2F;s），其有效值必须大于 0。如果无法获取速度信息，则此值为空（null）。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"PositionOptions\"><a href=\"#PositionOptions\" class=\"headerlink\" title=\"PositionOptions\"></a>PositionOptions</h2><p>监听设备位置信息参数</p>\n<ul>\n<li>enableHighAccuracy: (Boolean 类型 )是否高精确度获取位置信息<blockquote>\n<p>高精度获取表示需要使用更多的系统资源，默认值为 false。</p>\n</blockquote>\n</li>\n<li>timeout: (Number 类型 )获取位置信息的超时时间<blockquote>\n<p>单位为毫秒（ms），默认值为不超时。如果在指定的时间内没有获取到位置信息则触发错误回调函数。</p>\n</blockquote>\n</li>\n<li>maximumAge: (Number 类型 )获取位置信息的间隔时间<blockquote>\n<p>单位为毫秒（ms），默认值为 5000（即 5 秒）。调用 plus.geolocation.watchPosition 时为更新位置信息的间隔时间。 注意：在不同定位模块下支持范围值可能不同，如百度定位模块的间隔范围为大于等于 1 秒，如果设置的值小于最小值则使用最小值。</p>\n</blockquote>\n</li>\n<li>provider: (String 类型 )优先使用的定位模块<blockquote>\n<p>可取以下供应者： “system”：表示系统定位模块，支持 wgs84 坐标系； “baidu”：表示百度定位模块，支持 gcj02&#x2F;bd09&#x2F;bd09ll 坐标系； “amap”：表示高德定位模块，支持 gcj02 坐标系。 默认值按以下优先顺序获取（amap&gt;baidu&gt;system），若指定的 provider 不存在或无效则返回错误回调。 注意：百度&#x2F;高德定位模块需要配置百度&#x2F;高德地图相关参数才能正常使用。</p>\n</blockquote>\n</li>\n<li>coordsType: (String 类型 )指定获取的定位数据坐标系类型<blockquote>\n<p>可取以下坐标系类型： “wgs84”：表示 WGS-84 坐标系； “gcj02”：表示国测局经纬度坐标系； “bd09”：表示百度墨卡托坐标系； “bd09ll”：表示百度经纬度坐标系； provider 为”system”时，支持 wgs84 坐标系，默认使用”wgs84”坐标系； provider 为”baidu”时，支持 gcj02&#x2F;bd09&#x2F;bd09ll 坐标系，默认使用”gcj02”坐标系； provider 为”amap”时，支持 gcj02 坐标系，默认使用”gcj02”坐标系。 如果设置的坐标系类型 provider 不支持，则返回错误。</p>\n</blockquote>\n</li>\n<li>geocode: (Boolean 类型 )是否解析地址信息<blockquote>\n<p>解析的地址信息保存到 Position 对象的 address、addresses 属性中，true 表示解析地址信息，false 表示不解析地址信息，返回的 Position 对象的 address、addresses 属性值为 undefined，默认值为 true。 如果解析地址信息失败则返回的 Position 对象的 address、addresses 属性值为 null。</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"GeolocationError\"><a href=\"#GeolocationError\" class=\"headerlink\" title=\"GeolocationError\"></a>GeolocationError</h2><p>定位错误信息</p>\n<ul>\n<li>PERMISSION_DENIED: (Number 类型 )访问权限被拒绝<blockquote>\n<p>系统不允许程序获取定位功能，错误代码常量值为 1。</p>\n</blockquote>\n</li>\n<li>POSITION_UNAVAILABLE: (Number 类型 )位置信息不可用<blockquote>\n<p>无法获取有效的位置信息，错误代码常量值为 2。</p>\n</blockquote>\n</li>\n<li>TIMEOUT: (Number 类型 )获取位置信息超时<blockquote>\n<p>无法在指定的时间内获取位置信息，错误代码常量值为 3。</p>\n</blockquote>\n</li>\n<li>code: (Number 类型 )错误代码<blockquote>\n<p>可取值:</p>\n<ul>\n<li>PERMISSION_DENIED - 用户拒绝授权</li>\n<li>POSITION_UNAVAILABLE - 位置服务不可用，如系统定位服务关闭</li>\n<li>TIMEOUT - 定位超时，定位时超过 PositionOptions.timeout 设置的时间触发，此时通常可以重试</li>\n<li>其它错误 - 5+ 扩展错误码，参考 5+ API 错误代码中的“Geolocation 模块错误”</li>\n</ul>\n</blockquote>\n</li>\n<li>message: (String 类型 )错误描述信息<blockquote>\n<p>详细错误描述信息。</p>\n</blockquote>\n</li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe - 人脸检测（Face）","date":"2021-09-30T07:14:41.000Z","_content":"\n### 人脸检测（Face）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\nfrom mediapipe.python.solutions.drawing_utils import DrawingSpec\n\nmp_face_detection = mp.solutions.face_detection\nmp_drawing = mp.solutions.drawing_utils\n# model_selection: 0 或 1。\n# 0 选择最适合距离相机 2 米范围内的人脸的短距离模型，\n# 1 表示最适合 5 米以内人脸的全频模型。\nwith mp_face_detection.FaceDetection(\n    min_detection_confidence=0.5, model_selection=0\n) as face_detection:\n    cap = cv2.VideoCapture(0)\n\n    while True:\n        success, img = cap.read()\n        if success:\n            imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            results = face_detection.process(imgRGB)\n\n            if results.detections is None:\n                continue\n            for face in results.detections:\n                color = DrawingSpec((255, 0, 255))\n                mp_drawing.draw_detection(img, face, color, color)\n                cv2.imshow('face', img)\n        if cv2.waitKey(1) > 0:\n            break\n\n    cap.release()\n```\n\n### 其它功能\n\n- 人脸检测\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/Face.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 人脸检测（Face）\ndate: 2021-09-30 15:14:41\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 人脸检测（Face）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\nfrom mediapipe.python.solutions.drawing_utils import DrawingSpec\n\nmp_face_detection = mp.solutions.face_detection\nmp_drawing = mp.solutions.drawing_utils\n# model_selection: 0 或 1。\n# 0 选择最适合距离相机 2 米范围内的人脸的短距离模型，\n# 1 表示最适合 5 米以内人脸的全频模型。\nwith mp_face_detection.FaceDetection(\n    min_detection_confidence=0.5, model_selection=0\n) as face_detection:\n    cap = cv2.VideoCapture(0)\n\n    while True:\n        success, img = cap.read()\n        if success:\n            imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            results = face_detection.process(imgRGB)\n\n            if results.detections is None:\n                continue\n            for face in results.detections:\n                color = DrawingSpec((255, 0, 255))\n                mp_drawing.draw_detection(img, face, color, color)\n                cv2.imshow('face', img)\n        if cv2.waitKey(1) > 0:\n            break\n\n    cap.release()\n```\n\n### 其它功能\n\n- 人脸检测\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/Face","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xw000z4d0h845p808y","content":"<h3 id=\"人脸检测（Face）\"><a href=\"#人脸检测（Face）\" class=\"headerlink\" title=\"人脸检测（Face）\"></a>人脸检测（Face）</h3><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils <span class=\"token keyword\">import</span> DrawingSpec\n\nmp_face_detection <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>face_detection\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\n<span class=\"token comment\"># model_selection: 0 或 1。</span>\n<span class=\"token comment\"># 0 选择最适合距离相机 2 米范围内的人脸的短距离模型，</span>\n<span class=\"token comment\"># 1 表示最适合 5 米以内人脸的全频模型。</span>\n<span class=\"token keyword\">with</span> mp_face_detection<span class=\"token punctuation\">.</span>FaceDetection<span class=\"token punctuation\">(</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> model_selection<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> face_detection<span class=\"token punctuation\">:</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            imgRGB <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            results <span class=\"token operator\">=</span> face_detection<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>imgRGB<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>detections <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">for</span> face <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>detections<span class=\"token punctuation\">:</span>\n                color <span class=\"token operator\">=</span> DrawingSpec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                mp_drawing<span class=\"token punctuation\">.</span>draw_detection<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> face<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span>\n                cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'face'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li>人脸检测</li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"人脸检测（Face）\"><a href=\"#人脸检测（Face）\" class=\"headerlink\" title=\"人脸检测（Face）\"></a>人脸检测（Face）</h3>","more":"<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils <span class=\"token keyword\">import</span> DrawingSpec\n\nmp_face_detection <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>face_detection\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\n<span class=\"token comment\"># model_selection: 0 或 1。</span>\n<span class=\"token comment\"># 0 选择最适合距离相机 2 米范围内的人脸的短距离模型，</span>\n<span class=\"token comment\"># 1 表示最适合 5 米以内人脸的全频模型。</span>\n<span class=\"token keyword\">with</span> mp_face_detection<span class=\"token punctuation\">.</span>FaceDetection<span class=\"token punctuation\">(</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> model_selection<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> face_detection<span class=\"token punctuation\">:</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            imgRGB <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            results <span class=\"token operator\">=</span> face_detection<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>imgRGB<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>detections <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n            <span class=\"token keyword\">for</span> face <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>detections<span class=\"token punctuation\">:</span>\n                color <span class=\"token operator\">=</span> DrawingSpec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                mp_drawing<span class=\"token punctuation\">.</span>draw_detection<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> face<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span>\n                cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'face'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li>人脸检测</li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe - 面网格（FaceMesh）","date":"2021-09-30T07:14:59.000Z","_content":"\n### 面部网格（FaceMesh）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\n\nmp_drawing = mp.solutions.drawing_utils\nmp_drawing_styles = mp.solutions.drawing_styles\nmp_face_mesh = mp.solutions.face_mesh\n\nwith mp_face_mesh.FaceMesh(\n    static_image_mode=False,\n    max_num_faces=20,\n    min_detection_confidence=0.7,\n    min_tracking_confidence=0.7\n) as face_mesh:\n\n    drawing_spec = mp_drawing.DrawingSpec((255, 0, 255), 1, 1)\n    cap = cv2.VideoCapture(0)\n\n    while True:\n        success, img = cap.read()\n        if success:\n            results = face_mesh.process(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n\n            if results.multi_face_landmarks is None:\n                continue\n\n            for face in results.multi_face_landmarks:\n                print(\"face: \", face)\n                mp_drawing.draw_landmarks(\n                    image=img,\n                    landmark_list=face,\n                    connections=mp_face_mesh.FACEMESH_TESSELATION,\n                    landmark_drawing_spec=None,\n                    connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_tesselation_style()\n                )\n                mp_drawing.draw_landmarks(\n                    image=img,\n                    landmark_list=face,\n                    connections=mp_face_mesh.FACEMESH_CONTOURS,\n                    landmark_drawing_spec=None,\n                    connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_contours_style()\n                )\n            cv2.imshow('face mash', img)\n\n            if cv2.waitKey(1) > 0:\n                break\n\n    cap.release()\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- 面网格\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/FaceMesh.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 面网格（FaceMesh）\ndate: 2021-09-30 15:14:59\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 面部网格（FaceMesh）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\n\nmp_drawing = mp.solutions.drawing_utils\nmp_drawing_styles = mp.solutions.drawing_styles\nmp_face_mesh = mp.solutions.face_mesh\n\nwith mp_face_mesh.FaceMesh(\n    static_image_mode=False,\n    max_num_faces=20,\n    min_detection_confidence=0.7,\n    min_tracking_confidence=0.7\n) as face_mesh:\n\n    drawing_spec = mp_drawing.DrawingSpec((255, 0, 255), 1, 1)\n    cap = cv2.VideoCapture(0)\n\n    while True:\n        success, img = cap.read()\n        if success:\n            results = face_mesh.process(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n\n            if results.multi_face_landmarks is None:\n                continue\n\n            for face in results.multi_face_landmarks:\n                print(\"face: \", face)\n                mp_drawing.draw_landmarks(\n                    image=img,\n                    landmark_list=face,\n                    connections=mp_face_mesh.FACEMESH_TESSELATION,\n                    landmark_drawing_spec=None,\n                    connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_tesselation_style()\n                )\n                mp_drawing.draw_landmarks(\n                    image=img,\n                    landmark_list=face,\n                    connections=mp_face_mesh.FACEMESH_CONTOURS,\n                    landmark_drawing_spec=None,\n                    connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_contours_style()\n                )\n            cv2.imshow('face mash', img)\n\n            if cv2.waitKey(1) > 0:\n                break\n\n    cap.release()\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- 面网格\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/FaceMesh","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xw00134d0h2u3pgiv9","content":"<h3 id=\"面部网格（FaceMesh）\"><a href=\"#面部网格（FaceMesh）\" class=\"headerlink\" title=\"面部网格（FaceMesh）\"></a>面部网格（FaceMesh）</h3><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles\nmp_face_mesh <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>face_mesh\n\n<span class=\"token keyword\">with</span> mp_face_mesh<span class=\"token punctuation\">.</span>FaceMesh<span class=\"token punctuation\">(</span>\n    static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    max_num_faces<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.7</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> face_mesh<span class=\"token punctuation\">:</span>\n\n    drawing_spec <span class=\"token operator\">=</span> mp_drawing<span class=\"token punctuation\">.</span>DrawingSpec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            results <span class=\"token operator\">=</span> face_mesh<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>multi_face_landmarks <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            <span class=\"token keyword\">for</span> face <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>multi_face_landmarks<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"face: \"</span><span class=\"token punctuation\">,</span> face<span class=\"token punctuation\">)</span>\n                mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                    image<span class=\"token operator\">=</span>img<span class=\"token punctuation\">,</span>\n                    landmark_list<span class=\"token operator\">=</span>face<span class=\"token punctuation\">,</span>\n                    connections<span class=\"token operator\">=</span>mp_face_mesh<span class=\"token punctuation\">.</span>FACEMESH_TESSELATION<span class=\"token punctuation\">,</span>\n                    landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                    connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_tesselation_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                    image<span class=\"token operator\">=</span>img<span class=\"token punctuation\">,</span>\n                    landmark_list<span class=\"token operator\">=</span>face<span class=\"token punctuation\">,</span>\n                    connections<span class=\"token operator\">=</span>mp_face_mesh<span class=\"token punctuation\">.</span>FACEMESH_CONTOURS<span class=\"token punctuation\">,</span>\n                    landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                    connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_contours_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'face mash'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li>面网格</li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"面部网格（FaceMesh）\"><a href=\"#面部网格（FaceMesh）\" class=\"headerlink\" title=\"面部网格（FaceMesh）\"></a>面部网格（FaceMesh）</h3>","more":"<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles\nmp_face_mesh <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>face_mesh\n\n<span class=\"token keyword\">with</span> mp_face_mesh<span class=\"token punctuation\">.</span>FaceMesh<span class=\"token punctuation\">(</span>\n    static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    max_num_faces<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.7</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> face_mesh<span class=\"token punctuation\">:</span>\n\n    drawing_spec <span class=\"token operator\">=</span> mp_drawing<span class=\"token punctuation\">.</span>DrawingSpec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            results <span class=\"token operator\">=</span> face_mesh<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>multi_face_landmarks <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            <span class=\"token keyword\">for</span> face <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>multi_face_landmarks<span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"face: \"</span><span class=\"token punctuation\">,</span> face<span class=\"token punctuation\">)</span>\n                mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                    image<span class=\"token operator\">=</span>img<span class=\"token punctuation\">,</span>\n                    landmark_list<span class=\"token operator\">=</span>face<span class=\"token punctuation\">,</span>\n                    connections<span class=\"token operator\">=</span>mp_face_mesh<span class=\"token punctuation\">.</span>FACEMESH_TESSELATION<span class=\"token punctuation\">,</span>\n                    landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                    connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_tesselation_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n                mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                    image<span class=\"token operator\">=</span>img<span class=\"token punctuation\">,</span>\n                    landmark_list<span class=\"token operator\">=</span>face<span class=\"token punctuation\">,</span>\n                    connections<span class=\"token operator\">=</span>mp_face_mesh<span class=\"token punctuation\">.</span>FACEMESH_CONTOURS<span class=\"token punctuation\">,</span>\n                    landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                    connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_contours_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">)</span>\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'face mash'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li>面网格</li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe - 手（Hands）","date":"2021-09-30T07:15:42.000Z","_content":"\n### 手部识别（Hands）\n\n<!-- more -->\n\n1. 编写手部识别类\n\n   ```python\n    import typing\n    from cv2 import COLOR_BGR2RGB, FILLED, circle, cvtColor\n    from mediapipe.python.solutions.drawing_utils import draw_landmarks\n    from mediapipe.python.solutions.hands import HAND_CONNECTIONS, Hands\n    import numpy as np\n\n    class handDetector():\n        def __init__(self, static_image_mode=False, max_num_hands=2, min_detection_confidence=0.5, min_tracking_confidence=0.5) -> typing.Any:\n            \"\"\"\n            处理 RGB 图像并返回每只检测到的手的手部标志和惯用性。\n\n            Args:\n                static_image_mode: 是否将输入图像视为一批静态且可能不相关的图像，或视频流。\n                max_num_hands: 要检测的最大手数。\n                min_detection_confidence: 手部检测成功的最小置信值 ([0.0, 1.0])。\n                min_tracking_confidence: 要被视为成功跟踪的手部标志的最小置信值 ([0.0, 1.0])。\n\n            Raises:\n                RuntimeError: 如果底层图形抛出任何错误。\n                ValueError: 如果输入图像不是三通道 RGB。\n            \"\"\"\n\n            self.hands = Hands(\n                static_image_mode,\n                max_num_hands,\n                min_detection_confidence,\n                min_tracking_confidence\n            )\n\n        def drawHands(self, img: np.ndarray) -> typing.Any:\n            \"\"\"\n            返回手部骨骼识别后绘制图片\n\n            Args:\n                img: 表示为 numpy ndarray 的 RGB 图像。\n\n            Return:\n                绘制手部骨骼后的 numpy ndarray 的 RGB 图像\n            \"\"\"\n            results = self.findHands(img)\n            if results.multi_handedness is not None:\n                for handLms in results.multi_hand_landmarks:\n                    draw_landmarks(img, handLms, HAND_CONNECTIONS)\n                    for id, lm in enumerate(handLms.landmark):\n                        h, w, c = img.shape\n                        cx, cy = int(lm.x * w), int(lm.y * h)\n                        circle(img, (cx, cy), 2, (0, 255, 0), FILLED)\n            return img\n\n        def findHands(self, img: np.ndarray) -> typing.Any:\n            \"\"\"\n            返回手部识别骨骼数据\n\n            Args:\n                img: 表示为 numpy ndarray 的 RGB 图像。\n\n            Return:\n                具有两个字段的 NamedTuple 对象：\n                “multi_hand_landmarks”字段包含检测到的每只手上的手部标志\n                “multi_handedness”字段包含检测到的手的惯用手（左手与右手）\n            \"\"\"\n            imgRGB = cvtColor(img, COLOR_BGR2RGB)\n            return self.hands.process(imgRGB)\n   ```\n\n2. 识别视频中的手\n\n   ```python\n    from time import time\n    from Hands import handDetector\n    from cv2 import FONT_HERSHEY_PLAIN, VideoCapture, imshow, putText, waitKey\n\n    # 打开视频链接\n    cap = VideoCapture(0)\n\n    # 创建识别器，并开始识别\n    hands = handDetector(\n        static_image_mode=False,\n        max_num_hands=2,\n        min_detection_confidence=0.8,\n        min_tracking_confidence=0.8\n    )\n    start = 0\n    end = 0\n    while True:\n        start = time()\n        success, img = cap.read()\n        if success:\n            img = hands.drawHands(img)\n            end = time()\n            fps = 1 / (end - start)\n            putText(img, f'FPS:{int(fps)}', (10, 70),\n                    FONT_HERSHEY_PLAIN, 3, (0, 255, 0), 3)\n            imshow('hand', img)\n            if waitKey(1) > 0:\n                break\n\n    cap.release()\n   ```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- 手\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/Hands.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 手（Hands）\ndate: 2021-09-30 15:15:42\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 手部识别（Hands）\n\n<!-- more -->\n\n1. 编写手部识别类\n\n   ```python\n    import typing\n    from cv2 import COLOR_BGR2RGB, FILLED, circle, cvtColor\n    from mediapipe.python.solutions.drawing_utils import draw_landmarks\n    from mediapipe.python.solutions.hands import HAND_CONNECTIONS, Hands\n    import numpy as np\n\n    class handDetector():\n        def __init__(self, static_image_mode=False, max_num_hands=2, min_detection_confidence=0.5, min_tracking_confidence=0.5) -> typing.Any:\n            \"\"\"\n            处理 RGB 图像并返回每只检测到的手的手部标志和惯用性。\n\n            Args:\n                static_image_mode: 是否将输入图像视为一批静态且可能不相关的图像，或视频流。\n                max_num_hands: 要检测的最大手数。\n                min_detection_confidence: 手部检测成功的最小置信值 ([0.0, 1.0])。\n                min_tracking_confidence: 要被视为成功跟踪的手部标志的最小置信值 ([0.0, 1.0])。\n\n            Raises:\n                RuntimeError: 如果底层图形抛出任何错误。\n                ValueError: 如果输入图像不是三通道 RGB。\n            \"\"\"\n\n            self.hands = Hands(\n                static_image_mode,\n                max_num_hands,\n                min_detection_confidence,\n                min_tracking_confidence\n            )\n\n        def drawHands(self, img: np.ndarray) -> typing.Any:\n            \"\"\"\n            返回手部骨骼识别后绘制图片\n\n            Args:\n                img: 表示为 numpy ndarray 的 RGB 图像。\n\n            Return:\n                绘制手部骨骼后的 numpy ndarray 的 RGB 图像\n            \"\"\"\n            results = self.findHands(img)\n            if results.multi_handedness is not None:\n                for handLms in results.multi_hand_landmarks:\n                    draw_landmarks(img, handLms, HAND_CONNECTIONS)\n                    for id, lm in enumerate(handLms.landmark):\n                        h, w, c = img.shape\n                        cx, cy = int(lm.x * w), int(lm.y * h)\n                        circle(img, (cx, cy), 2, (0, 255, 0), FILLED)\n            return img\n\n        def findHands(self, img: np.ndarray) -> typing.Any:\n            \"\"\"\n            返回手部识别骨骼数据\n\n            Args:\n                img: 表示为 numpy ndarray 的 RGB 图像。\n\n            Return:\n                具有两个字段的 NamedTuple 对象：\n                “multi_hand_landmarks”字段包含检测到的每只手上的手部标志\n                “multi_handedness”字段包含检测到的手的惯用手（左手与右手）\n            \"\"\"\n            imgRGB = cvtColor(img, COLOR_BGR2RGB)\n            return self.hands.process(imgRGB)\n   ```\n\n2. 识别视频中的手\n\n   ```python\n    from time import time\n    from Hands import handDetector\n    from cv2 import FONT_HERSHEY_PLAIN, VideoCapture, imshow, putText, waitKey\n\n    # 打开视频链接\n    cap = VideoCapture(0)\n\n    # 创建识别器，并开始识别\n    hands = handDetector(\n        static_image_mode=False,\n        max_num_hands=2,\n        min_detection_confidence=0.8,\n        min_tracking_confidence=0.8\n    )\n    start = 0\n    end = 0\n    while True:\n        start = time()\n        success, img = cap.read()\n        if success:\n            img = hands.drawHands(img)\n            end = time()\n            fps = 1 / (end - start)\n            putText(img, f'FPS:{int(fps)}', (10, 70),\n                    FONT_HERSHEY_PLAIN, 3, (0, 255, 0), 3)\n            imshow('hand', img)\n            if waitKey(1) > 0:\n                break\n\n    cap.release()\n   ```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- 手\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/Hands","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xw00164d0h9ueiclvf","content":"<h3 id=\"手部识别（Hands）\"><a href=\"#手部识别（Hands）\" class=\"headerlink\" title=\"手部识别（Hands）\"></a>手部识别（Hands）</h3><span id=\"more\"></span>\n\n<ol>\n<li><p>编写手部识别类</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> typing\n<span class=\"token keyword\">from</span> cv2 <span class=\"token keyword\">import</span> COLOR_BGR2RGB<span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">,</span> circle<span class=\"token punctuation\">,</span> cvtColor\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils <span class=\"token keyword\">import</span> draw_landmarks\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>hands <span class=\"token keyword\">import</span> HAND_CONNECTIONS<span class=\"token punctuation\">,</span> Hands\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">handDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> max_num_hands<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        处理 RGB 图像并返回每只检测到的手的手部标志和惯用性。\n\n        Args:\n            static_image_mode: 是否将输入图像视为一批静态且可能不相关的图像，或视频流。\n            max_num_hands: 要检测的最大手数。\n            min_detection_confidence: 手部检测成功的最小置信值 ([0.0, 1.0])。\n            min_tracking_confidence: 要被视为成功跟踪的手部标志的最小置信值 ([0.0, 1.0])。\n\n        Raises:\n            RuntimeError: 如果底层图形抛出任何错误。\n            ValueError: 如果输入图像不是三通道 RGB。\n        \"\"\"</span>\n\n        self<span class=\"token punctuation\">.</span>hands <span class=\"token operator\">=</span> Hands<span class=\"token punctuation\">(</span>\n            static_image_mode<span class=\"token punctuation\">,</span>\n            max_num_hands<span class=\"token punctuation\">,</span>\n            min_detection_confidence<span class=\"token punctuation\">,</span>\n            min_tracking_confidence\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">drawHands</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>ndarray<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        返回手部骨骼识别后绘制图片\n\n        Args:\n            img: 表示为 numpy ndarray 的 RGB 图像。\n\n        Return:\n            绘制手部骨骼后的 numpy ndarray 的 RGB 图像\n        \"\"\"</span>\n        results <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>findHands<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>multi_handedness <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> handLms <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>multi_hand_landmarks<span class=\"token punctuation\">:</span>\n                draw_landmarks<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> handLms<span class=\"token punctuation\">,</span> HAND_CONNECTIONS<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> lm <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>handLms<span class=\"token punctuation\">.</span>landmark<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape\n                    cx<span class=\"token punctuation\">,</span> cy <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lm<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lm<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> h<span class=\"token punctuation\">)</span>\n                    circle<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>cx<span class=\"token punctuation\">,</span> cy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> img\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">findHands</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>ndarray<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        返回手部识别骨骼数据\n\n        Args:\n            img: 表示为 numpy ndarray 的 RGB 图像。\n\n        Return:\n            具有两个字段的 NamedTuple 对象：\n            “multi_hand_landmarks”字段包含检测到的每只手上的手部标志\n            “multi_handedness”字段包含检测到的手的惯用手（左手与右手）\n        \"\"\"</span>\n        imgRGB <span class=\"token operator\">=</span> cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>hands<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>imgRGB<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>识别视频中的手</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> Hands <span class=\"token keyword\">import</span> handDetector\n<span class=\"token keyword\">from</span> cv2 <span class=\"token keyword\">import</span> FONT_HERSHEY_PLAIN<span class=\"token punctuation\">,</span> VideoCapture<span class=\"token punctuation\">,</span> imshow<span class=\"token punctuation\">,</span> putText<span class=\"token punctuation\">,</span> waitKey\n\n<span class=\"token comment\"># 打开视频链接</span>\ncap <span class=\"token operator\">=</span> VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 创建识别器，并开始识别</span>\nhands <span class=\"token operator\">=</span> handDetector<span class=\"token punctuation\">(</span>\n    static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    max_num_hands<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.8</span>\n<span class=\"token punctuation\">)</span>\nstart <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nend <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n        img <span class=\"token operator\">=</span> hands<span class=\"token punctuation\">.</span>drawHands<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span>\n        putText<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'FPS:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                FONT_HERSHEY_PLAIN<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'hand'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\ncap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li>手</li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"手部识别（Hands）\"><a href=\"#手部识别（Hands）\" class=\"headerlink\" title=\"手部识别（Hands）\"></a>手部识别（Hands）</h3>","more":"<ol>\n<li><p>编写手部识别类</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> typing\n<span class=\"token keyword\">from</span> cv2 <span class=\"token keyword\">import</span> COLOR_BGR2RGB<span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">,</span> circle<span class=\"token punctuation\">,</span> cvtColor\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils <span class=\"token keyword\">import</span> draw_landmarks\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>hands <span class=\"token keyword\">import</span> HAND_CONNECTIONS<span class=\"token punctuation\">,</span> Hands\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">handDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> max_num_hands<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        处理 RGB 图像并返回每只检测到的手的手部标志和惯用性。\n\n        Args:\n            static_image_mode: 是否将输入图像视为一批静态且可能不相关的图像，或视频流。\n            max_num_hands: 要检测的最大手数。\n            min_detection_confidence: 手部检测成功的最小置信值 ([0.0, 1.0])。\n            min_tracking_confidence: 要被视为成功跟踪的手部标志的最小置信值 ([0.0, 1.0])。\n\n        Raises:\n            RuntimeError: 如果底层图形抛出任何错误。\n            ValueError: 如果输入图像不是三通道 RGB。\n        \"\"\"</span>\n\n        self<span class=\"token punctuation\">.</span>hands <span class=\"token operator\">=</span> Hands<span class=\"token punctuation\">(</span>\n            static_image_mode<span class=\"token punctuation\">,</span>\n            max_num_hands<span class=\"token punctuation\">,</span>\n            min_detection_confidence<span class=\"token punctuation\">,</span>\n            min_tracking_confidence\n        <span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">drawHands</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>ndarray<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        返回手部骨骼识别后绘制图片\n\n        Args:\n            img: 表示为 numpy ndarray 的 RGB 图像。\n\n        Return:\n            绘制手部骨骼后的 numpy ndarray 的 RGB 图像\n        \"\"\"</span>\n        results <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>findHands<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>multi_handedness <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> handLms <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>multi_hand_landmarks<span class=\"token punctuation\">:</span>\n                draw_landmarks<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> handLms<span class=\"token punctuation\">,</span> HAND_CONNECTIONS<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> lm <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>handLms<span class=\"token punctuation\">.</span>landmark<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                    h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> c <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span>shape\n                    cx<span class=\"token punctuation\">,</span> cy <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lm<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lm<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> h<span class=\"token punctuation\">)</span>\n                    circle<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>cx<span class=\"token punctuation\">,</span> cy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FILLED<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> img\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">findHands</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">:</span> np<span class=\"token punctuation\">.</span>ndarray<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n        <span class=\"token triple-quoted-string string\">\"\"\"\n        返回手部识别骨骼数据\n\n        Args:\n            img: 表示为 numpy ndarray 的 RGB 图像。\n\n        Return:\n            具有两个字段的 NamedTuple 对象：\n            “multi_hand_landmarks”字段包含检测到的每只手上的手部标志\n            “multi_handedness”字段包含检测到的手的惯用手（左手与右手）\n        \"\"\"</span>\n        imgRGB <span class=\"token operator\">=</span> cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>hands<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>imgRGB<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>识别视频中的手</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> time\n<span class=\"token keyword\">from</span> Hands <span class=\"token keyword\">import</span> handDetector\n<span class=\"token keyword\">from</span> cv2 <span class=\"token keyword\">import</span> FONT_HERSHEY_PLAIN<span class=\"token punctuation\">,</span> VideoCapture<span class=\"token punctuation\">,</span> imshow<span class=\"token punctuation\">,</span> putText<span class=\"token punctuation\">,</span> waitKey\n\n<span class=\"token comment\"># 打开视频链接</span>\ncap <span class=\"token operator\">=</span> VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 创建识别器，并开始识别</span>\nhands <span class=\"token operator\">=</span> handDetector<span class=\"token punctuation\">(</span>\n    static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    max_num_hands<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.8</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.8</span>\n<span class=\"token punctuation\">)</span>\nstart <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nend <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    start <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n        img <span class=\"token operator\">=</span> hands<span class=\"token punctuation\">.</span>drawHands<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n        end <span class=\"token operator\">=</span> time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        fps <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span>\n        putText<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f'FPS:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                FONT_HERSHEY_PLAIN<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n        imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'hand'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\ncap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ol>\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li>手</li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"坐标转换","date":"2021-12-23T02:43:33.000Z","_content":"\n## 简介\n\n提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换的工具模块。\n\n<!-- more -->\n\n国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)。\n\n### 需转换的坐标，一行一条，格式如下：\n分隔符：<input value=\",\" onchange=\"oldSplitChange(this)\" />\n> 116.404<span name=\"old_split\">,</span>39.915\n> 116.404<span name=\"old_split\">,</span>39.915\n<textarea id=\"old_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<select id=\"coord_select\">\n  <option>bd09 to gcj02</option>\n  <option>gcj02 to bd09</option>\n  <option>wgs84 to gcj02</option>\n  <option>gcj02 to wgs84</option>\n</select>\n<button onclick=\"ctf()\">转换</button>\n\n### 转换出的坐标\n分隔符：<input value=\",\" onchange=\"newSplitChange(this)\" />\n<textarea id=\"new_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<script src=\"/utils/coordtransform.js\"></script>\n<script>\n  var old_split = ',', new_split = ',';\n  function oldSplitChange(obj){\n    if(obj.value != '') old_split = obj.value;\n    document.getElementsByName('old_split').forEach(item=>{item.innerHTML = old_split});\n  }\n  function newSplitChange(obj){\n    if(obj.value != '') new_split = obj.value;\n  }\n  function ctf() {\n    var select = document.getElementById('coord_select'); //定位id\n    var index = select.selectedIndex; // 选中索引\n    var text = select.options[index].text; // 选中文本\n    var tffn;\n    switch(text) {\n      //百度经纬度坐标转国测局坐标\n      case 'bd09 to gcj02':\n        tffn = coordtransform.bd09togcj02;\n        break;\n      //国测局坐标转百度经纬度坐标\n      case 'gcj02 to bd09':\n        tffn = coordtransform.gcj02tobd09;\n        break;\n      //wgs84转国测局坐标\n      case 'wgs84 to gcj02':\n        tffn = coordtransform.wgs84togcj02;\n        break;\n      //国测局坐标转wgs84坐标\n      case 'gcj02 to wgs84':\n        tffn = coordtransform.gcj02towgs84;\n        break;\n      default:\n        tffn = coordtransform.bd09togcj02;\n        break;\n    }\n    var old_coord = document.getElementById('old_value').value.split('\\n').map(item=>{return item.split(old_split)});\n    var new_coord = '';\n    for(const item of old_coord) {\n      if(new_coord != '') new_coord += '\\n';\n      var coord = tffn(item[0],item[1]);\n      new_coord += coord[0] + new_split + coord[1];\n      if(item.length>2){\n        for (let index = 2; index < item.length; index += 2){\n          coord = tffn(item[index],item[index + 1]);\n          new_coord += new_split + coord[0] + new_split + coord[1];\n        }\n      }\n    }\n    document.getElementById('new_value').value = new_coord;\n  }\n</script>","source":"_posts/Utils/Coordtransform.md","raw":"---\ntitle: 坐标转换\ndate: 2021-12-23 10:43:33\ncategories:\n  - 工具\ntags:\n  - coordinate\n  - wgs84\n  - bd09\n  - gcj02\n  - transform\n---\n\n## 简介\n\n提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换的工具模块。\n\n<!-- more -->\n\n国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)。\n\n### 需转换的坐标，一行一条，格式如下：\n分隔符：<input value=\",\" onchange=\"oldSplitChange(this)\" />\n> 116.404<span name=\"old_split\">,</span>39.915\n> 116.404<span name=\"old_split\">,</span>39.915\n<textarea id=\"old_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<select id=\"coord_select\">\n  <option>bd09 to gcj02</option>\n  <option>gcj02 to bd09</option>\n  <option>wgs84 to gcj02</option>\n  <option>gcj02 to wgs84</option>\n</select>\n<button onclick=\"ctf()\">转换</button>\n\n### 转换出的坐标\n分隔符：<input value=\",\" onchange=\"newSplitChange(this)\" />\n<textarea id=\"new_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<script src=\"/utils/coordtransform.js\"></script>\n<script>\n  var old_split = ',', new_split = ',';\n  function oldSplitChange(obj){\n    if(obj.value != '') old_split = obj.value;\n    document.getElementsByName('old_split').forEach(item=>{item.innerHTML = old_split});\n  }\n  function newSplitChange(obj){\n    if(obj.value != '') new_split = obj.value;\n  }\n  function ctf() {\n    var select = document.getElementById('coord_select'); //定位id\n    var index = select.selectedIndex; // 选中索引\n    var text = select.options[index].text; // 选中文本\n    var tffn;\n    switch(text) {\n      //百度经纬度坐标转国测局坐标\n      case 'bd09 to gcj02':\n        tffn = coordtransform.bd09togcj02;\n        break;\n      //国测局坐标转百度经纬度坐标\n      case 'gcj02 to bd09':\n        tffn = coordtransform.gcj02tobd09;\n        break;\n      //wgs84转国测局坐标\n      case 'wgs84 to gcj02':\n        tffn = coordtransform.wgs84togcj02;\n        break;\n      //国测局坐标转wgs84坐标\n      case 'gcj02 to wgs84':\n        tffn = coordtransform.gcj02towgs84;\n        break;\n      default:\n        tffn = coordtransform.bd09togcj02;\n        break;\n    }\n    var old_coord = document.getElementById('old_value').value.split('\\n').map(item=>{return item.split(old_split)});\n    var new_coord = '';\n    for(const item of old_coord) {\n      if(new_coord != '') new_coord += '\\n';\n      var coord = tffn(item[0],item[1]);\n      new_coord += coord[0] + new_split + coord[1];\n      if(item.length>2){\n        for (let index = 2; index < item.length; index += 2){\n          coord = tffn(item[index],item[index + 1]);\n          new_coord += new_split + coord[0] + new_split + coord[1];\n        }\n      }\n    }\n    document.getElementById('new_value').value = new_coord;\n  }\n</script>","slug":"Utils/Coordtransform","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xx00184d0h9glwegg1","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换的工具模块。</p>\n<span id=\"more\"></span>\n\n<p>国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)。</p>\n<h3 id=\"需转换的坐标，一行一条，格式如下：\"><a href=\"#需转换的坐标，一行一条，格式如下：\" class=\"headerlink\" title=\"需转换的坐标，一行一条，格式如下：\"></a>需转换的坐标，一行一条，格式如下：</h3><p>分隔符：<input value=\",\" onchange=\"oldSplitChange(this)\" /></p>\n<blockquote>\n<p>116.404<span name=\"old_split\">,</span>39.915<br>116.404<span name=\"old_split\">,</span>39.915</p>\n</blockquote>\n<textarea id=\"old_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<select id=\"coord_select\">\n  <option>bd09 to gcj02</option>\n  <option>gcj02 to bd09</option>\n  <option>wgs84 to gcj02</option>\n  <option>gcj02 to wgs84</option>\n</select>\n<button onclick=\"ctf()\">转换</button>\n\n<h3 id=\"转换出的坐标\"><a href=\"#转换出的坐标\" class=\"headerlink\" title=\"转换出的坐标\"></a>转换出的坐标</h3><p>分隔符：<input value=\",\" onchange=\"newSplitChange(this)\" /></p>\n<textarea id=\"new_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<script src=\"/utils/coordtransform.js\"></script>\n<script>\n  var old_split = ',', new_split = ',';\n  function oldSplitChange(obj){\n    if(obj.value != '') old_split = obj.value;\n    document.getElementsByName('old_split').forEach(item=>{item.innerHTML = old_split});\n  }\n  function newSplitChange(obj){\n    if(obj.value != '') new_split = obj.value;\n  }\n  function ctf() {\n    var select = document.getElementById('coord_select'); //定位id\n    var index = select.selectedIndex; // 选中索引\n    var text = select.options[index].text; // 选中文本\n    var tffn;\n    switch(text) {\n      //百度经纬度坐标转国测局坐标\n      case 'bd09 to gcj02':\n        tffn = coordtransform.bd09togcj02;\n        break;\n      //国测局坐标转百度经纬度坐标\n      case 'gcj02 to bd09':\n        tffn = coordtransform.gcj02tobd09;\n        break;\n      //wgs84转国测局坐标\n      case 'wgs84 to gcj02':\n        tffn = coordtransform.wgs84togcj02;\n        break;\n      //国测局坐标转wgs84坐标\n      case 'gcj02 to wgs84':\n        tffn = coordtransform.gcj02towgs84;\n        break;\n      default:\n        tffn = coordtransform.bd09togcj02;\n        break;\n    }\n    var old_coord = document.getElementById('old_value').value.split('\\n').map(item=>{return item.split(old_split)});\n    var new_coord = '';\n    for(const item of old_coord) {\n      if(new_coord != '') new_coord += '\\n';\n      var coord = tffn(item[0],item[1]);\n      new_coord += coord[0] + new_split + coord[1];\n      if(item.length>2){\n        for (let index = 2; index < item.length; index += 2){\n          coord = tffn(item[index],item[index + 1]);\n          new_coord += new_split + coord[0] + new_split + coord[1];\n        }\n      }\n    }\n    document.getElementById('new_value').value = new_coord;\n  }\n</script>","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换的工具模块。</p>","more":"<p>国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)。</p>\n<h3 id=\"需转换的坐标，一行一条，格式如下：\"><a href=\"#需转换的坐标，一行一条，格式如下：\" class=\"headerlink\" title=\"需转换的坐标，一行一条，格式如下：\"></a>需转换的坐标，一行一条，格式如下：</h3><p>分隔符：<input value=\",\" onchange=\"oldSplitChange(this)\" /></p>\n<blockquote>\n<p>116.404<span name=\"old_split\">,</span>39.915<br>116.404<span name=\"old_split\">,</span>39.915</p>\n</blockquote>\n<textarea id=\"old_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<select id=\"coord_select\">\n  <option>bd09 to gcj02</option>\n  <option>gcj02 to bd09</option>\n  <option>wgs84 to gcj02</option>\n  <option>gcj02 to wgs84</option>\n</select>\n<button onclick=\"ctf()\">转换</button>\n\n<h3 id=\"转换出的坐标\"><a href=\"#转换出的坐标\" class=\"headerlink\" title=\"转换出的坐标\"></a>转换出的坐标</h3><p>分隔符：<input value=\",\" onchange=\"newSplitChange(this)\" /></p>\n<textarea id=\"new_value\" style=\"width:100%;height: 200px\"></textarea>\n\n<script src=\"/utils/coordtransform.js\"></script>\n<script>\n  var old_split = ',', new_split = ',';\n  function oldSplitChange(obj){\n    if(obj.value != '') old_split = obj.value;\n    document.getElementsByName('old_split').forEach(item=>{item.innerHTML = old_split});\n  }\n  function newSplitChange(obj){\n    if(obj.value != '') new_split = obj.value;\n  }\n  function ctf() {\n    var select = document.getElementById('coord_select'); //定位id\n    var index = select.selectedIndex; // 选中索引\n    var text = select.options[index].text; // 选中文本\n    var tffn;\n    switch(text) {\n      //百度经纬度坐标转国测局坐标\n      case 'bd09 to gcj02':\n        tffn = coordtransform.bd09togcj02;\n        break;\n      //国测局坐标转百度经纬度坐标\n      case 'gcj02 to bd09':\n        tffn = coordtransform.gcj02tobd09;\n        break;\n      //wgs84转国测局坐标\n      case 'wgs84 to gcj02':\n        tffn = coordtransform.wgs84togcj02;\n        break;\n      //国测局坐标转wgs84坐标\n      case 'gcj02 to wgs84':\n        tffn = coordtransform.gcj02towgs84;\n        break;\n      default:\n        tffn = coordtransform.bd09togcj02;\n        break;\n    }\n    var old_coord = document.getElementById('old_value').value.split('\\n').map(item=>{return item.split(old_split)});\n    var new_coord = '';\n    for(const item of old_coord) {\n      if(new_coord != '') new_coord += '\\n';\n      var coord = tffn(item[0],item[1]);\n      new_coord += coord[0] + new_split + coord[1];\n      if(item.length>2){\n        for (let index = 2; index < item.length; index += 2){\n          coord = tffn(item[index],item[index + 1]);\n          new_coord += new_split + coord[0] + new_split + coord[1];\n        }\n      }\n    }\n    document.getElementById('new_value').value = new_coord;\n  }\n</script>"},{"title":"Python 媒体识别包 Mediapipe - 整体（Holistic）","date":"2021-09-30T07:15:54.000Z","_content":"\n### 整体识别（Holistic）\n\n<!-- more -->\n\n```python\nimport typing\nimport cv2\nimport mediapipe as mp\nfrom mediapipe.python.solutions.drawing_utils import DrawingSpec\n\nmp_drawing = mp.solutions.drawing_utils\nmp_drawing_styles = mp.solutions.drawing_styles\nmp_holistic = mp.solutions.holistic\n\ndef hiddenPoseFace(landmarks: typing.NamedTuple) -> typing.Any:\n    for idx in range(11):\n        landmarks.pose_landmarks.landmark[idx].visibility = 0\n\nwith mp_holistic.Holistic(\n    min_detection_confidence=0.5,\n    min_tracking_confidence=0.5\n) as holistic:\n    cap = cv2.VideoCapture(0)\n    while True:\n        success, img = cap.read()\n        if success:\n            img = cv2.flip(img, 1)\n            results = holistic.process(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n\n            hiddenPoseFace(results)\n\n            mp_drawing.draw_landmarks(\n                img, results.pose_landmarks, mp_holistic.POSE_CONNECTIONS,\n                landmark_drawing_spec=DrawingSpec((0, 255, 0), 4, 4)\n            )\n\n            mp_drawing.draw_landmarks(\n                img, results.face_landmarks, mp_holistic.FACEMESH_CONTOURS,\n                landmark_drawing_spec=None,\n                connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_contours_style()\n            )\n            mp_drawing.draw_landmarks(\n                img, results.face_landmarks, mp_holistic.FACEMESH_TESSELATION,\n                landmark_drawing_spec=None,\n                connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_tesselation_style()\n            )\n\n            cv2.imshow('综合识别', img)\n            if cv2.waitKey(1) > 0:\n                break\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- 整体\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/Holistic.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 整体（Holistic）\ndate: 2021-09-30 15:15:54\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 整体识别（Holistic）\n\n<!-- more -->\n\n```python\nimport typing\nimport cv2\nimport mediapipe as mp\nfrom mediapipe.python.solutions.drawing_utils import DrawingSpec\n\nmp_drawing = mp.solutions.drawing_utils\nmp_drawing_styles = mp.solutions.drawing_styles\nmp_holistic = mp.solutions.holistic\n\ndef hiddenPoseFace(landmarks: typing.NamedTuple) -> typing.Any:\n    for idx in range(11):\n        landmarks.pose_landmarks.landmark[idx].visibility = 0\n\nwith mp_holistic.Holistic(\n    min_detection_confidence=0.5,\n    min_tracking_confidence=0.5\n) as holistic:\n    cap = cv2.VideoCapture(0)\n    while True:\n        success, img = cap.read()\n        if success:\n            img = cv2.flip(img, 1)\n            results = holistic.process(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n\n            hiddenPoseFace(results)\n\n            mp_drawing.draw_landmarks(\n                img, results.pose_landmarks, mp_holistic.POSE_CONNECTIONS,\n                landmark_drawing_spec=DrawingSpec((0, 255, 0), 4, 4)\n            )\n\n            mp_drawing.draw_landmarks(\n                img, results.face_landmarks, mp_holistic.FACEMESH_CONTOURS,\n                landmark_drawing_spec=None,\n                connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_contours_style()\n            )\n            mp_drawing.draw_landmarks(\n                img, results.face_landmarks, mp_holistic.FACEMESH_TESSELATION,\n                landmark_drawing_spec=None,\n                connection_drawing_spec=mp_drawing_styles.get_default_face_mesh_tesselation_style()\n            )\n\n            cv2.imshow('综合识别', img)\n            if cv2.waitKey(1) > 0:\n                break\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- 整体\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/Holistic","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xx001b4d0h7s2d1qg9","content":"<h3 id=\"整体识别（Holistic）\"><a href=\"#整体识别（Holistic）\" class=\"headerlink\" title=\"整体识别（Holistic）\"></a>整体识别（Holistic）</h3><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> typing\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils <span class=\"token keyword\">import</span> DrawingSpec\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles\nmp_holistic <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>holistic\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hiddenPoseFace</span><span class=\"token punctuation\">(</span>landmarks<span class=\"token punctuation\">:</span> typing<span class=\"token punctuation\">.</span>NamedTuple<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> idx <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        landmarks<span class=\"token punctuation\">.</span>pose_landmarks<span class=\"token punctuation\">.</span>landmark<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>visibility <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">with</span> mp_holistic<span class=\"token punctuation\">.</span>Holistic<span class=\"token punctuation\">(</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> holistic<span class=\"token punctuation\">:</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            results <span class=\"token operator\">=</span> holistic<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            hiddenPoseFace<span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span>\n\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>pose_landmarks<span class=\"token punctuation\">,</span> mp_holistic<span class=\"token punctuation\">.</span>POSE_CONNECTIONS<span class=\"token punctuation\">,</span>\n                landmark_drawing_spec<span class=\"token operator\">=</span>DrawingSpec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>face_landmarks<span class=\"token punctuation\">,</span> mp_holistic<span class=\"token punctuation\">.</span>FACEMESH_CONTOURS<span class=\"token punctuation\">,</span>\n                landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_contours_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>face_landmarks<span class=\"token punctuation\">,</span> mp_holistic<span class=\"token punctuation\">.</span>FACEMESH_TESSELATION<span class=\"token punctuation\">,</span>\n                landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_tesselation_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'综合识别'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li>整体</li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"整体识别（Holistic）\"><a href=\"#整体识别（Holistic）\" class=\"headerlink\" title=\"整体识别（Holistic）\"></a>整体识别（Holistic）</h3>","more":"<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> typing\n<span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils <span class=\"token keyword\">import</span> DrawingSpec\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles\nmp_holistic <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>holistic\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">hiddenPoseFace</span><span class=\"token punctuation\">(</span>landmarks<span class=\"token punctuation\">:</span> typing<span class=\"token punctuation\">.</span>NamedTuple<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> typing<span class=\"token punctuation\">.</span>Any<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> idx <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        landmarks<span class=\"token punctuation\">.</span>pose_landmarks<span class=\"token punctuation\">.</span>landmark<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>visibility <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">with</span> mp_holistic<span class=\"token punctuation\">.</span>Holistic<span class=\"token punctuation\">(</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> holistic<span class=\"token punctuation\">:</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            results <span class=\"token operator\">=</span> holistic<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            hiddenPoseFace<span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">)</span>\n\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>pose_landmarks<span class=\"token punctuation\">,</span> mp_holistic<span class=\"token punctuation\">.</span>POSE_CONNECTIONS<span class=\"token punctuation\">,</span>\n                landmark_drawing_spec<span class=\"token operator\">=</span>DrawingSpec<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>face_landmarks<span class=\"token punctuation\">,</span> mp_holistic<span class=\"token punctuation\">.</span>FACEMESH_CONTOURS<span class=\"token punctuation\">,</span>\n                landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_contours_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>face_landmarks<span class=\"token punctuation\">,</span> mp_holistic<span class=\"token punctuation\">.</span>FACEMESH_TESSELATION<span class=\"token punctuation\">,</span>\n                landmark_drawing_spec<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n                connection_drawing_spec<span class=\"token operator\">=</span>mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_face_mesh_tesselation_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span>\n\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'综合识别'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li>整体</li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe - 姿势（Pose）","date":"2021-09-30T07:16:21.000Z","_content":"\n### 姿势检测（Pose）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\nimport numpy as np\n\nmp_drawing = mp.solutions.drawing_utils\nmp_drawing_styles = mp.solutions.drawing_styles\nmp_pose = mp.solutions.pose\n\ncap = cv2.VideoCapture(0)\n\nwith mp_pose.Pose(\n    min_detection_confidence=0.5,\n    min_tracking_confidence=0.5\n) as pose:\n    while cap. isOpened():\n        success, img = cap.read()\n        if success:\n            img = cv2.flip(img, 1)\n            imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            results = pose.process(imgRGB)\n\n            if results.pose_landmarks is None:\n                continue\n\n            mp_drawing.draw_landmarks(\n                img, results.pose_landmarks, mp_pose.POSE_CONNECTIONS, mp_drawing_styles.get_default_pose_landmarks_style())\n\n            cv2.imshow('Pose', img)\n            if cv2.waitKey(1) > 0:\n                break\n\n    cap.release()\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- 姿势\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/Pose.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 姿势（Pose）\ndate: 2021-09-30 15:16:21\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 姿势检测（Pose）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\nimport numpy as np\n\nmp_drawing = mp.solutions.drawing_utils\nmp_drawing_styles = mp.solutions.drawing_styles\nmp_pose = mp.solutions.pose\n\ncap = cv2.VideoCapture(0)\n\nwith mp_pose.Pose(\n    min_detection_confidence=0.5,\n    min_tracking_confidence=0.5\n) as pose:\n    while cap. isOpened():\n        success, img = cap.read()\n        if success:\n            img = cv2.flip(img, 1)\n            imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n            results = pose.process(imgRGB)\n\n            if results.pose_landmarks is None:\n                continue\n\n            mp_drawing.draw_landmarks(\n                img, results.pose_landmarks, mp_pose.POSE_CONNECTIONS, mp_drawing_styles.get_default_pose_landmarks_style())\n\n            cv2.imshow('Pose', img)\n            if cv2.waitKey(1) > 0:\n                break\n\n    cap.release()\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- 姿势\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/Pose","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xx001e4d0h4t7mgqik","content":"<h3 id=\"姿势检测（Pose）\"><a href=\"#姿势检测（Pose）\" class=\"headerlink\" title=\"姿势检测（Pose）\"></a>姿势检测（Pose）</h3><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles\nmp_pose <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>pose\n\ncap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> mp_pose<span class=\"token punctuation\">.</span>Pose<span class=\"token punctuation\">(</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pose<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> cap<span class=\"token punctuation\">.</span> isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            imgRGB <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            results <span class=\"token operator\">=</span> pose<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>imgRGB<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>pose_landmarks <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>pose_landmarks<span class=\"token punctuation\">,</span> mp_pose<span class=\"token punctuation\">.</span>POSE_CONNECTIONS<span class=\"token punctuation\">,</span> mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_pose_landmarks_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Pose'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li>姿势</li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"姿势检测（Pose）\"><a href=\"#姿势检测（Pose）\" class=\"headerlink\" title=\"姿势检测（Pose）\"></a>姿势检测（Pose）</h3>","more":"<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_drawing_styles <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_styles\nmp_pose <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>pose\n\ncap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">with</span> mp_pose<span class=\"token punctuation\">.</span>Pose<span class=\"token punctuation\">(</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pose<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> cap<span class=\"token punctuation\">.</span> isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            imgRGB <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            results <span class=\"token operator\">=</span> pose<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>imgRGB<span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>pose_landmarks <span class=\"token keyword\">is</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">continue</span>\n\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                img<span class=\"token punctuation\">,</span> results<span class=\"token punctuation\">.</span>pose_landmarks<span class=\"token punctuation\">,</span> mp_pose<span class=\"token punctuation\">.</span>POSE_CONNECTIONS<span class=\"token punctuation\">,</span> mp_drawing_styles<span class=\"token punctuation\">.</span>get_default_pose_landmarks_style<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'Pose'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li>姿势</li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe - 物体空间（Objectron）","date":"2021-09-30T07:16:07.000Z","_content":"\n### 物体空间检测（Objectron）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\n\nmp_drawing = mp.solutions.drawing_utils\nmp_objectron = mp.solutions.objectron\n\nwith mp_objectron.Objectron(\n    static_image_mode=False,\n    max_num_objects=5,\n    min_detection_confidence=0.5,\n    min_tracking_confidence=0.5,\n    model_name='Shoe'\n) as objectron:\n    cap = cv2.VideoCapture(0)\n    while cap.isOpened():\n        success, img = cap.read()\n        if success:\n            results = objectron.process(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n\n            if results.detected_objects is not None:\n                for obj in results.detected_objects:\n                    mp_drawing.draw_landmarks(\n                        img, obj.landmarks_2d, mp_objectron.BOX_CONNECTIONS)\n                    mp_drawing.draw_axis(img, obj.rotation, obj.translation)\n\n        cv2.imshow('物体空间识别', img)\n        if cv2.waitKey(1) > 0:\n            break\n\n    cap.release()\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- 物体空间\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/Objectron.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 物体空间（Objectron）\ndate: 2021-09-30 15:16:07\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 物体空间检测（Objectron）\n\n<!-- more -->\n\n```python\nimport cv2\nimport mediapipe as mp\n\nmp_drawing = mp.solutions.drawing_utils\nmp_objectron = mp.solutions.objectron\n\nwith mp_objectron.Objectron(\n    static_image_mode=False,\n    max_num_objects=5,\n    min_detection_confidence=0.5,\n    min_tracking_confidence=0.5,\n    model_name='Shoe'\n) as objectron:\n    cap = cv2.VideoCapture(0)\n    while cap.isOpened():\n        success, img = cap.read()\n        if success:\n            results = objectron.process(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n\n            if results.detected_objects is not None:\n                for obj in results.detected_objects:\n                    mp_drawing.draw_landmarks(\n                        img, obj.landmarks_2d, mp_objectron.BOX_CONNECTIONS)\n                    mp_drawing.draw_axis(img, obj.rotation, obj.translation)\n\n        cv2.imshow('物体空间识别', img)\n        if cv2.waitKey(1) > 0:\n            break\n\n    cap.release()\n```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- 物体空间\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/Objectron","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xy001h4d0h00930ckh","content":"<h3 id=\"物体空间检测（Objectron）\"><a href=\"#物体空间检测（Objectron）\" class=\"headerlink\" title=\"物体空间检测（Objectron）\"></a>物体空间检测（Objectron）</h3><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_objectron <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>objectron\n\n<span class=\"token keyword\">with</span> mp_objectron<span class=\"token punctuation\">.</span>Objectron<span class=\"token punctuation\">(</span>\n    static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    max_num_objects<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    model_name<span class=\"token operator\">=</span><span class=\"token string\">'Shoe'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> objectron<span class=\"token punctuation\">:</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> cap<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            results <span class=\"token operator\">=</span> objectron<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>detected_objects <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> obj <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>detected_objects<span class=\"token punctuation\">:</span>\n                    mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                        img<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>landmarks_2d<span class=\"token punctuation\">,</span> mp_objectron<span class=\"token punctuation\">.</span>BOX_CONNECTIONS<span class=\"token punctuation\">)</span>\n                    mp_drawing<span class=\"token punctuation\">.</span>draw_axis<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>translation<span class=\"token punctuation\">)</span>\n\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'物体空间识别'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li>物体空间</li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"物体空间检测（Objectron）\"><a href=\"#物体空间检测（Objectron）\" class=\"headerlink\" title=\"物体空间检测（Objectron）\"></a>物体空间检测（Objectron）</h3>","more":"<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> mediapipe <span class=\"token keyword\">as</span> mp\n\nmp_drawing <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>drawing_utils\nmp_objectron <span class=\"token operator\">=</span> mp<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>objectron\n\n<span class=\"token keyword\">with</span> mp_objectron<span class=\"token punctuation\">.</span>Objectron<span class=\"token punctuation\">(</span>\n    static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n    max_num_objects<span class=\"token operator\">=</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    min_detection_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    min_tracking_confidence<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span>\n    model_name<span class=\"token operator\">=</span><span class=\"token string\">'Shoe'</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> objectron<span class=\"token punctuation\">:</span>\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> cap<span class=\"token punctuation\">.</span>isOpened<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            results <span class=\"token operator\">=</span> objectron<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n            <span class=\"token keyword\">if</span> results<span class=\"token punctuation\">.</span>detected_objects <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">for</span> obj <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">.</span>detected_objects<span class=\"token punctuation\">:</span>\n                    mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                        img<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>landmarks_2d<span class=\"token punctuation\">,</span> mp_objectron<span class=\"token punctuation\">.</span>BOX_CONNECTIONS<span class=\"token punctuation\">)</span>\n                    mp_drawing<span class=\"token punctuation\">.</span>draw_axis<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">.</span>translation<span class=\"token punctuation\">)</span>\n\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'物体空间识别'</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li>物体空间</li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe - 姿势分类（PoseClassification）","date":"2021-09-30T07:16:48.000Z","_content":"\n### 姿势分类（PoseClassification）\n\n<!-- more -->\n\n- 模型训练\n\n  > 官方详细说明：<https://mediapipe.page.link/pose_classification_basic>\n\n  ```python\n  import os\n  import csv\n  from BootstrapHelper import BootstrapHelper\n  from FullBodyPoseEmbedder import FullBodyPoseEmbedder\n  from PoseClassification import PoseClassifier\n\n  # region Bootstrap images\n\n  # images_in_folder 的必需结构：\n  #\n  #   fitness_poses_images_in/\n  #     pushups_up/\n  #       image_001.jpg\n  #       image_002.jpg\n  #       ...\n  #     pushups_down/\n  #       image_001.jpg\n  #       image_002.jpg\n  #       ...\n  #     ...\n  bootstrap_images_in_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/train'\n\n  # 引导图像和 CSV 的输出文件夹。\n  bootstrap_images_out_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/images_out'\n  bootstrap_csvs_out_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'\n\n  # 初始化助手。\n  bootstrap_helper = BootstrapHelper(\n      images_in_folder=bootstrap_images_in_folder,\n      images_out_folder=bootstrap_images_out_folder,\n      csvs_out_folder=bootstrap_csvs_out_folder,\n  )\n\n  # 检查有多少姿势类和图像可用。\n  bootstrap_helper.print_images_in_statistics()\n\n  # 引导所有图像。\n  # 将限制设置为一些小的数字以进行调试。\n  bootstrap_helper.bootstrap(per_pose_class_limit=None)\n\n  # 检查引导了多少图像。\n  bootstrap_helper.print_images_out_statistics()\n\n  # 没有检测到姿势的初始引导图像仍然保存在\n  # 用于调试目的的文件夹（但不在 CSV 中）。 让我们移除它们。\n  bootstrap_helper.align_images_and_csvs(print_removed_items=False)\n  bootstrap_helper.print_images_out_statistics()\n\n  # endregion Bootstrap images\n\n  # region Manual filtration\n\n  # # 请手动验证预测并删除姿势预测错误的样本（图像）。 检查是否要求您仅根据预测的地标对姿势进行分类。 如果你不能 - 删除它。\n  # # 完成后对齐 CSV 和图像文件夹。\n  # # 将 CSV 与过滤后的图像对齐。\n  # bootstrap_helper.align_images_and_csvs(print_removed_items=False)\n  # bootstrap_helper.print_images_out_statistics()\n\n  # endregion Manual filtration\n\n  # region Automatic filtration\n\n  # 找出异常值。\n  # 将姿势地标转换为嵌入。\n  pose_embedder = FullBodyPoseEmbedder()\n\n  # 根据姿势数据库对姿势进行分类。\n  pose_classifier = PoseClassifier(\n      pose_samples_folder=bootstrap_csvs_out_folder,\n      pose_embedder=pose_embedder,\n      top_n_by_max_distance=30,\n      top_n_by_mean_distance=10)\n\n  outliers = pose_classifier.find_pose_sample_outliers()\n  print('Number of outliers: ', len(outliers))\n\n  # 分析异常值。\n  bootstrap_helper.analyze_outliers(outliers)\n\n  # 删除所有异常值（如果您不想手动选择）。\n  bootstrap_helper.remove_outliers(outliers)\n\n  # 去除异常值后将 CSV 与图像对齐。\n  bootstrap_helper.align_images_and_csvs(print_removed_items=False)\n  bootstrap_helper.print_images_out_statistics()\n\n  # endregion Automatic filtration\n\n  # region Dump for the App\n\n\n  def dump_for_the_app():\n      pose_samples_folder = 'fitness_poses_csvs_out'\n      pose_samples_csv_path = 'fitness_poses_csvs_out.csv'\n      file_extension = 'csv'\n      file_separator = ','\n\n      # 文件夹中的每个文件代表一个姿势类。\n      file_names = [name for name in os.listdir(\n          pose_samples_folder) if name.endswith(file_extension)]\n\n      with open(pose_samples_csv_path, 'w') as csv_out:\n          csv_out_writer = csv.writer(\n              csv_out, delimiter=file_separator, quoting=csv.QUOTE_MINIMAL)\n          for file_name in file_names:\n              # Use file name as pose class name.\n              class_name = file_name[:-(len(file_extension) + 1)]\n\n              # 一个文件行：`sample_00001,x1,y1,x2,y2,....`。\n              with open(os.path.join(pose_samples_folder, file_name)) as csv_in:\n                  csv_in_reader = csv.reader(csv_in, delimiter=file_separator)\n                  for row in csv_in_reader:\n                      row.insert(1, class_name)\n                      csv_out_writer.writerow(row)\n\n\n  # 将过滤后的姿势转储到 CSV 并下载。 如何在 ML Kit 示例应用程序中使用此 CSV。\n  # dump_for_the_app()\n\n  # endregion Dump for the App\n  ```\n\n- 姿势识别\n\n  > 官方详细说明：<https://mediapipe.page.link/pose_classification_extended>\n\n  ```python\n  import cv2\n  import numpy as np\n  import tqdm\n  from mediapipe.python.solutions import drawing_utils as mp_drawing\n  from mediapipe.python.solutions import pose as mp_pose\n\n  from EMADictSmoothing import EMADictSmoothing\n  from FullBodyPoseEmbedder import FullBodyPoseEmbedder\n  from PoseClassificationVisualizer import PoseClassificationVisualizer\n  from RepetitionCounter import RepetitionCounter\n  from PoseClassification import PoseClassifier\n\n  # 指定您的视频名称和目标姿势类以计算重复次数。\n  video_path = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test/5.mp4'\n  class_name = 'down'\n  out_video_path = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test_out/5_out.mp4'\n\n  # 打开视频。\n  video_cap = cv2.VideoCapture(video_path)\n\n  # 获取一些视频参数以生成带分类的输出视频。\n  video_n_frames = video_cap.get(cv2.CAP_PROP_FRAME_COUNT)\n  video_fps = video_cap.get(cv2.CAP_PROP_FPS)\n  video_width = int(video_cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n  video_height = int(video_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\n\n  # 初始化跟踪器、分类器和计数器。\n  # 在每个视频之前都这样做，因为它们都有状态。\n\n  # 包含姿势类 CSV 的文件夹。 那应该是你使用的同一个文件夹\n  # 构建分类器以输出 CSV。\n  pose_samples_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'\n\n  # 初始化跟踪器。\n  pose_tracker = mp_pose.Pose(static_image_mode=False)\n\n  # 初始化嵌入器。\n  pose_embedder = FullBodyPoseEmbedder()\n\n  # 初始化分类器。\n  # 确认您使用的参数与引导期间相同。\n  pose_classifier = PoseClassifier(\n      pose_samples_folder=pose_samples_folder,\n      pose_embedder=pose_embedder,\n      top_n_by_max_distance=30,\n      top_n_by_mean_distance=10)\n\n  # 取消注释以验证分类器使用的目标姿势并查找异常值。\n  # outliers =pose_classifier.find_pose_sample_outliers()\n  # print('姿势样本异常值的数量（考虑删除它们）：', len(outliers))\n\n  # 初始化 EMA 平滑。\n  pose_classification_filter = EMADictSmoothing(\n      window_size=10,\n      alpha=0.2)\n\n  # 初始化计数器。\n  repetition_counter = RepetitionCounter(\n      class_name=class_name,\n      enter_threshold=6,\n      exit_threshold=4)\n\n  # 初始化渲染器。\n  pose_classification_visualizer = PoseClassificationVisualizer(\n      class_name=class_name,\n      plot_x_max=video_n_frames,\n      # 如果与 `top_n_by_mean_distance` 相同，则图形看起来更好。\n      plot_y_max=10)\n\n  # 对视频运行分类。\n\n  # 打开输出视频。\n  out_video = cv2.VideoWriter(out_video_path, cv2.VideoWriter_fourcc(\n      *'mp4v'), video_fps, (video_width, video_height))\n\n  frame_idx = 0\n  output_frame = None\n  with tqdm.tqdm(total=video_n_frames, position=0, leave=True) as pbar:\n      while True:\n          # 获取视频的下一帧。\n          success, input_frame = video_cap.read()\n          if not success:\n              break\n\n          # 运行姿势跟踪器。\n          input_frame = cv2.cvtColor(input_frame, cv2.COLOR_BGR2RGB)\n          result = pose_tracker.process(image=input_frame)\n          pose_landmarks = result.pose_landmarks\n\n          # 绘制姿势预测。\n          output_frame = input_frame.copy()\n          if pose_landmarks is not None:\n              mp_drawing.draw_landmarks(\n                  image=output_frame,\n                  landmark_list=pose_landmarks,\n                  connections=mp_pose.POSE_CONNECTIONS)\n\n          if pose_landmarks is not None:\n              # 获取地标。\n              frame_height, frame_width = output_frame.shape[0], output_frame.shape[1]\n              pose_landmarks = np.array([[lmk.x * frame_width, lmk.y * frame_height, lmk.z * frame_width]\n                                        for lmk in pose_landmarks.landmark], dtype=np.float32)\n              assert pose_landmarks.shape == (\n                  33, 3), '意外的地标形状： {}'.format(pose_landmarks.shape)\n\n              # 对当前帧的姿势进行分类。\n              pose_classification = pose_classifier(pose_landmarks)\n\n              # 使用 EMA 进行平滑分类。\n              pose_classification_filtered = pose_classification_filter(\n                  pose_classification)\n\n              # 计算重复次数。\n              repetitions_count = repetition_counter(\n                  pose_classification_filtered)\n          else:\n              # 没有姿势 => 当前帧没有分类。\n              pose_classification = None\n\n              # 仍然向过滤器添加空分类以保持未来帧的正确平滑。\n              pose_classification_filtered = pose_classification_filter(dict())\n              pose_classification_filtered = None\n\n              # 不要假设那个人被“冻结”而更新计数器。 只是取最新的重复次数。\n              repetitions_count = repetition_counter.n_repeats\n\n          # 绘制分类图和重复计数器。\n          output_frame = pose_classification_visualizer(\n              frame=output_frame,\n              pose_classification=pose_classification,\n              pose_classification_filtered=pose_classification_filtered,\n              repetitions_count=repetitions_count)\n\n          # 保存输出帧。\n          out_video.write(cv2.cvtColor(\n              np.array(output_frame), cv2.COLOR_RGB2BGR))\n\n          # 显示视频的中间帧以跟踪进度。\n          cv2.imshow('姿势分类 - 俯卧撑(down)', np.array(output_frame))\n          cv2.waitKey(1)\n\n          frame_idx += 1\n          pbar.update()\n\n  # 关闭输出视频。\n  out_video.release()\n\n  # 释放MediaPipe资源。\n  pose_tracker.close()\n\n  cv2.waitKey()\n\n  ```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- 姿势分类\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/PoseClassification.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 姿势分类（PoseClassification）\ndate: 2021-09-30 15:16:48\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 姿势分类（PoseClassification）\n\n<!-- more -->\n\n- 模型训练\n\n  > 官方详细说明：<https://mediapipe.page.link/pose_classification_basic>\n\n  ```python\n  import os\n  import csv\n  from BootstrapHelper import BootstrapHelper\n  from FullBodyPoseEmbedder import FullBodyPoseEmbedder\n  from PoseClassification import PoseClassifier\n\n  # region Bootstrap images\n\n  # images_in_folder 的必需结构：\n  #\n  #   fitness_poses_images_in/\n  #     pushups_up/\n  #       image_001.jpg\n  #       image_002.jpg\n  #       ...\n  #     pushups_down/\n  #       image_001.jpg\n  #       image_002.jpg\n  #       ...\n  #     ...\n  bootstrap_images_in_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/train'\n\n  # 引导图像和 CSV 的输出文件夹。\n  bootstrap_images_out_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/images_out'\n  bootstrap_csvs_out_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'\n\n  # 初始化助手。\n  bootstrap_helper = BootstrapHelper(\n      images_in_folder=bootstrap_images_in_folder,\n      images_out_folder=bootstrap_images_out_folder,\n      csvs_out_folder=bootstrap_csvs_out_folder,\n  )\n\n  # 检查有多少姿势类和图像可用。\n  bootstrap_helper.print_images_in_statistics()\n\n  # 引导所有图像。\n  # 将限制设置为一些小的数字以进行调试。\n  bootstrap_helper.bootstrap(per_pose_class_limit=None)\n\n  # 检查引导了多少图像。\n  bootstrap_helper.print_images_out_statistics()\n\n  # 没有检测到姿势的初始引导图像仍然保存在\n  # 用于调试目的的文件夹（但不在 CSV 中）。 让我们移除它们。\n  bootstrap_helper.align_images_and_csvs(print_removed_items=False)\n  bootstrap_helper.print_images_out_statistics()\n\n  # endregion Bootstrap images\n\n  # region Manual filtration\n\n  # # 请手动验证预测并删除姿势预测错误的样本（图像）。 检查是否要求您仅根据预测的地标对姿势进行分类。 如果你不能 - 删除它。\n  # # 完成后对齐 CSV 和图像文件夹。\n  # # 将 CSV 与过滤后的图像对齐。\n  # bootstrap_helper.align_images_and_csvs(print_removed_items=False)\n  # bootstrap_helper.print_images_out_statistics()\n\n  # endregion Manual filtration\n\n  # region Automatic filtration\n\n  # 找出异常值。\n  # 将姿势地标转换为嵌入。\n  pose_embedder = FullBodyPoseEmbedder()\n\n  # 根据姿势数据库对姿势进行分类。\n  pose_classifier = PoseClassifier(\n      pose_samples_folder=bootstrap_csvs_out_folder,\n      pose_embedder=pose_embedder,\n      top_n_by_max_distance=30,\n      top_n_by_mean_distance=10)\n\n  outliers = pose_classifier.find_pose_sample_outliers()\n  print('Number of outliers: ', len(outliers))\n\n  # 分析异常值。\n  bootstrap_helper.analyze_outliers(outliers)\n\n  # 删除所有异常值（如果您不想手动选择）。\n  bootstrap_helper.remove_outliers(outliers)\n\n  # 去除异常值后将 CSV 与图像对齐。\n  bootstrap_helper.align_images_and_csvs(print_removed_items=False)\n  bootstrap_helper.print_images_out_statistics()\n\n  # endregion Automatic filtration\n\n  # region Dump for the App\n\n\n  def dump_for_the_app():\n      pose_samples_folder = 'fitness_poses_csvs_out'\n      pose_samples_csv_path = 'fitness_poses_csvs_out.csv'\n      file_extension = 'csv'\n      file_separator = ','\n\n      # 文件夹中的每个文件代表一个姿势类。\n      file_names = [name for name in os.listdir(\n          pose_samples_folder) if name.endswith(file_extension)]\n\n      with open(pose_samples_csv_path, 'w') as csv_out:\n          csv_out_writer = csv.writer(\n              csv_out, delimiter=file_separator, quoting=csv.QUOTE_MINIMAL)\n          for file_name in file_names:\n              # Use file name as pose class name.\n              class_name = file_name[:-(len(file_extension) + 1)]\n\n              # 一个文件行：`sample_00001,x1,y1,x2,y2,....`。\n              with open(os.path.join(pose_samples_folder, file_name)) as csv_in:\n                  csv_in_reader = csv.reader(csv_in, delimiter=file_separator)\n                  for row in csv_in_reader:\n                      row.insert(1, class_name)\n                      csv_out_writer.writerow(row)\n\n\n  # 将过滤后的姿势转储到 CSV 并下载。 如何在 ML Kit 示例应用程序中使用此 CSV。\n  # dump_for_the_app()\n\n  # endregion Dump for the App\n  ```\n\n- 姿势识别\n\n  > 官方详细说明：<https://mediapipe.page.link/pose_classification_extended>\n\n  ```python\n  import cv2\n  import numpy as np\n  import tqdm\n  from mediapipe.python.solutions import drawing_utils as mp_drawing\n  from mediapipe.python.solutions import pose as mp_pose\n\n  from EMADictSmoothing import EMADictSmoothing\n  from FullBodyPoseEmbedder import FullBodyPoseEmbedder\n  from PoseClassificationVisualizer import PoseClassificationVisualizer\n  from RepetitionCounter import RepetitionCounter\n  from PoseClassification import PoseClassifier\n\n  # 指定您的视频名称和目标姿势类以计算重复次数。\n  video_path = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test/5.mp4'\n  class_name = 'down'\n  out_video_path = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test_out/5_out.mp4'\n\n  # 打开视频。\n  video_cap = cv2.VideoCapture(video_path)\n\n  # 获取一些视频参数以生成带分类的输出视频。\n  video_n_frames = video_cap.get(cv2.CAP_PROP_FRAME_COUNT)\n  video_fps = video_cap.get(cv2.CAP_PROP_FPS)\n  video_width = int(video_cap.get(cv2.CAP_PROP_FRAME_WIDTH))\n  video_height = int(video_cap.get(cv2.CAP_PROP_FRAME_HEIGHT))\n\n  # 初始化跟踪器、分类器和计数器。\n  # 在每个视频之前都这样做，因为它们都有状态。\n\n  # 包含姿势类 CSV 的文件夹。 那应该是你使用的同一个文件夹\n  # 构建分类器以输出 CSV。\n  pose_samples_folder = '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'\n\n  # 初始化跟踪器。\n  pose_tracker = mp_pose.Pose(static_image_mode=False)\n\n  # 初始化嵌入器。\n  pose_embedder = FullBodyPoseEmbedder()\n\n  # 初始化分类器。\n  # 确认您使用的参数与引导期间相同。\n  pose_classifier = PoseClassifier(\n      pose_samples_folder=pose_samples_folder,\n      pose_embedder=pose_embedder,\n      top_n_by_max_distance=30,\n      top_n_by_mean_distance=10)\n\n  # 取消注释以验证分类器使用的目标姿势并查找异常值。\n  # outliers =pose_classifier.find_pose_sample_outliers()\n  # print('姿势样本异常值的数量（考虑删除它们）：', len(outliers))\n\n  # 初始化 EMA 平滑。\n  pose_classification_filter = EMADictSmoothing(\n      window_size=10,\n      alpha=0.2)\n\n  # 初始化计数器。\n  repetition_counter = RepetitionCounter(\n      class_name=class_name,\n      enter_threshold=6,\n      exit_threshold=4)\n\n  # 初始化渲染器。\n  pose_classification_visualizer = PoseClassificationVisualizer(\n      class_name=class_name,\n      plot_x_max=video_n_frames,\n      # 如果与 `top_n_by_mean_distance` 相同，则图形看起来更好。\n      plot_y_max=10)\n\n  # 对视频运行分类。\n\n  # 打开输出视频。\n  out_video = cv2.VideoWriter(out_video_path, cv2.VideoWriter_fourcc(\n      *'mp4v'), video_fps, (video_width, video_height))\n\n  frame_idx = 0\n  output_frame = None\n  with tqdm.tqdm(total=video_n_frames, position=0, leave=True) as pbar:\n      while True:\n          # 获取视频的下一帧。\n          success, input_frame = video_cap.read()\n          if not success:\n              break\n\n          # 运行姿势跟踪器。\n          input_frame = cv2.cvtColor(input_frame, cv2.COLOR_BGR2RGB)\n          result = pose_tracker.process(image=input_frame)\n          pose_landmarks = result.pose_landmarks\n\n          # 绘制姿势预测。\n          output_frame = input_frame.copy()\n          if pose_landmarks is not None:\n              mp_drawing.draw_landmarks(\n                  image=output_frame,\n                  landmark_list=pose_landmarks,\n                  connections=mp_pose.POSE_CONNECTIONS)\n\n          if pose_landmarks is not None:\n              # 获取地标。\n              frame_height, frame_width = output_frame.shape[0], output_frame.shape[1]\n              pose_landmarks = np.array([[lmk.x * frame_width, lmk.y * frame_height, lmk.z * frame_width]\n                                        for lmk in pose_landmarks.landmark], dtype=np.float32)\n              assert pose_landmarks.shape == (\n                  33, 3), '意外的地标形状： {}'.format(pose_landmarks.shape)\n\n              # 对当前帧的姿势进行分类。\n              pose_classification = pose_classifier(pose_landmarks)\n\n              # 使用 EMA 进行平滑分类。\n              pose_classification_filtered = pose_classification_filter(\n                  pose_classification)\n\n              # 计算重复次数。\n              repetitions_count = repetition_counter(\n                  pose_classification_filtered)\n          else:\n              # 没有姿势 => 当前帧没有分类。\n              pose_classification = None\n\n              # 仍然向过滤器添加空分类以保持未来帧的正确平滑。\n              pose_classification_filtered = pose_classification_filter(dict())\n              pose_classification_filtered = None\n\n              # 不要假设那个人被“冻结”而更新计数器。 只是取最新的重复次数。\n              repetitions_count = repetition_counter.n_repeats\n\n          # 绘制分类图和重复计数器。\n          output_frame = pose_classification_visualizer(\n              frame=output_frame,\n              pose_classification=pose_classification,\n              pose_classification_filtered=pose_classification_filtered,\n              repetitions_count=repetitions_count)\n\n          # 保存输出帧。\n          out_video.write(cv2.cvtColor(\n              np.array(output_frame), cv2.COLOR_RGB2BGR))\n\n          # 显示视频的中间帧以跟踪进度。\n          cv2.imshow('姿势分类 - 俯卧撑(down)', np.array(output_frame))\n          cv2.waitKey(1)\n\n          frame_idx += 1\n          pbar.update()\n\n  # 关闭输出视频。\n  out_video.release()\n\n  # 释放MediaPipe资源。\n  pose_tracker.close()\n\n  cv2.waitKey()\n\n  ```\n\n### 其它功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- 姿势分类\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/PoseClassification","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xy001j4d0hhsl0dfcs","content":"<h3 id=\"姿势分类（PoseClassification）\"><a href=\"#姿势分类（PoseClassification）\" class=\"headerlink\" title=\"姿势分类（PoseClassification）\"></a>姿势分类（PoseClassification）</h3><span id=\"more\"></span>\n\n<ul>\n<li><p>模型训练</p>\n<blockquote>\n<p>官方详细说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYXBpcGUucGFnZS5saW5rL3Bvc2VfY2xhc3NpZmljYXRpb25fYmFzaWM=\">https://mediapipe.page.link/pose_classification_basic<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> csv\n<span class=\"token keyword\">from</span> BootstrapHelper <span class=\"token keyword\">import</span> BootstrapHelper\n<span class=\"token keyword\">from</span> FullBodyPoseEmbedder <span class=\"token keyword\">import</span> FullBodyPoseEmbedder\n<span class=\"token keyword\">from</span> PoseClassification <span class=\"token keyword\">import</span> PoseClassifier\n\n<span class=\"token comment\"># region Bootstrap images</span>\n\n<span class=\"token comment\"># images_in_folder 的必需结构：</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\">#   fitness_poses_images_in/</span>\n<span class=\"token comment\">#     pushups_up/</span>\n<span class=\"token comment\">#       image_001.jpg</span>\n<span class=\"token comment\">#       image_002.jpg</span>\n<span class=\"token comment\">#       ...</span>\n<span class=\"token comment\">#     pushups_down/</span>\n<span class=\"token comment\">#       image_001.jpg</span>\n<span class=\"token comment\">#       image_002.jpg</span>\n<span class=\"token comment\">#       ...</span>\n<span class=\"token comment\">#     ...</span>\nbootstrap_images_in_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/train'</span>\n\n<span class=\"token comment\"># 引导图像和 CSV 的输出文件夹。</span>\nbootstrap_images_out_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/images_out'</span>\nbootstrap_csvs_out_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'</span>\n\n<span class=\"token comment\"># 初始化助手。</span>\nbootstrap_helper <span class=\"token operator\">=</span> BootstrapHelper<span class=\"token punctuation\">(</span>\n    images_in_folder<span class=\"token operator\">=</span>bootstrap_images_in_folder<span class=\"token punctuation\">,</span>\n    images_out_folder<span class=\"token operator\">=</span>bootstrap_images_out_folder<span class=\"token punctuation\">,</span>\n    csvs_out_folder<span class=\"token operator\">=</span>bootstrap_csvs_out_folder<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 检查有多少姿势类和图像可用。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_in_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 引导所有图像。</span>\n<span class=\"token comment\"># 将限制设置为一些小的数字以进行调试。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">(</span>per_pose_class_limit<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 检查引导了多少图像。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_out_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 没有检测到姿势的初始引导图像仍然保存在</span>\n<span class=\"token comment\"># 用于调试目的的文件夹（但不在 CSV 中）。 让我们移除它们。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>align_images_and_csvs<span class=\"token punctuation\">(</span>print_removed_items<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_out_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># endregion Bootstrap images</span>\n\n<span class=\"token comment\"># region Manual filtration</span>\n\n<span class=\"token comment\"># # 请手动验证预测并删除姿势预测错误的样本（图像）。 检查是否要求您仅根据预测的地标对姿势进行分类。 如果你不能 - 删除它。</span>\n<span class=\"token comment\"># # 完成后对齐 CSV 和图像文件夹。</span>\n<span class=\"token comment\"># # 将 CSV 与过滤后的图像对齐。</span>\n<span class=\"token comment\"># bootstrap_helper.align_images_and_csvs(print_removed_items=False)</span>\n<span class=\"token comment\"># bootstrap_helper.print_images_out_statistics()</span>\n\n<span class=\"token comment\"># endregion Manual filtration</span>\n\n<span class=\"token comment\"># region Automatic filtration</span>\n\n<span class=\"token comment\"># 找出异常值。</span>\n<span class=\"token comment\"># 将姿势地标转换为嵌入。</span>\npose_embedder <span class=\"token operator\">=</span> FullBodyPoseEmbedder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 根据姿势数据库对姿势进行分类。</span>\npose_classifier <span class=\"token operator\">=</span> PoseClassifier<span class=\"token punctuation\">(</span>\n    pose_samples_folder<span class=\"token operator\">=</span>bootstrap_csvs_out_folder<span class=\"token punctuation\">,</span>\n    pose_embedder<span class=\"token operator\">=</span>pose_embedder<span class=\"token punctuation\">,</span>\n    top_n_by_max_distance<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    top_n_by_mean_distance<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\noutliers <span class=\"token operator\">=</span> pose_classifier<span class=\"token punctuation\">.</span>find_pose_sample_outliers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Number of outliers: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>outliers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 分析异常值。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>analyze_outliers<span class=\"token punctuation\">(</span>outliers<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删除所有异常值（如果您不想手动选择）。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>remove_outliers<span class=\"token punctuation\">(</span>outliers<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 去除异常值后将 CSV 与图像对齐。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>align_images_and_csvs<span class=\"token punctuation\">(</span>print_removed_items<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_out_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># endregion Automatic filtration</span>\n\n<span class=\"token comment\"># region Dump for the App</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dump_for_the_app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pose_samples_folder <span class=\"token operator\">=</span> <span class=\"token string\">'fitness_poses_csvs_out'</span>\n    pose_samples_csv_path <span class=\"token operator\">=</span> <span class=\"token string\">'fitness_poses_csvs_out.csv'</span>\n    file_extension <span class=\"token operator\">=</span> <span class=\"token string\">'csv'</span>\n    file_separator <span class=\"token operator\">=</span> <span class=\"token string\">','</span>\n\n    <span class=\"token comment\"># 文件夹中的每个文件代表一个姿势类。</span>\n    file_names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>name <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>\n        pose_samples_folder<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> name<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>file_extension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>pose_samples_csv_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> csv_out<span class=\"token punctuation\">:</span>\n        csv_out_writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>\n            csv_out<span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span>file_separator<span class=\"token punctuation\">,</span> quoting<span class=\"token operator\">=</span>csv<span class=\"token punctuation\">.</span>QUOTE_MINIMAL<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> file_name <span class=\"token keyword\">in</span> file_names<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># Use file name as pose class name.</span>\n            class_name <span class=\"token operator\">=</span> file_name<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>file_extension<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n            <span class=\"token comment\"># 一个文件行：`sample_00001,x1,y1,x2,y2,....`。</span>\n            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>pose_samples_folder<span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> csv_in<span class=\"token punctuation\">:</span>\n                csv_in_reader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span>csv_in<span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span>file_separator<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> csv_in_reader<span class=\"token punctuation\">:</span>\n                    row<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> class_name<span class=\"token punctuation\">)</span>\n                    csv_out_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 将过滤后的姿势转储到 CSV 并下载。 如何在 ML Kit 示例应用程序中使用此 CSV。</span>\n<span class=\"token comment\"># dump_for_the_app()</span>\n\n<span class=\"token comment\"># endregion Dump for the App</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>姿势识别</p>\n<blockquote>\n<p>官方详细说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYXBpcGUucGFnZS5saW5rL3Bvc2VfY2xhc3NpZmljYXRpb25fZXh0ZW5kZWQ=\">https://mediapipe.page.link/pose_classification_extended<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions <span class=\"token keyword\">import</span> drawing_utils <span class=\"token keyword\">as</span> mp_drawing\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions <span class=\"token keyword\">import</span> pose <span class=\"token keyword\">as</span> mp_pose\n\n<span class=\"token keyword\">from</span> EMADictSmoothing <span class=\"token keyword\">import</span> EMADictSmoothing\n<span class=\"token keyword\">from</span> FullBodyPoseEmbedder <span class=\"token keyword\">import</span> FullBodyPoseEmbedder\n<span class=\"token keyword\">from</span> PoseClassificationVisualizer <span class=\"token keyword\">import</span> PoseClassificationVisualizer\n<span class=\"token keyword\">from</span> RepetitionCounter <span class=\"token keyword\">import</span> RepetitionCounter\n<span class=\"token keyword\">from</span> PoseClassification <span class=\"token keyword\">import</span> PoseClassifier\n\n<span class=\"token comment\"># 指定您的视频名称和目标姿势类以计算重复次数。</span>\nvideo_path <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test/5.mp4'</span>\nclass_name <span class=\"token operator\">=</span> <span class=\"token string\">'down'</span>\nout_video_path <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test_out/5_out.mp4'</span>\n\n<span class=\"token comment\"># 打开视频。</span>\nvideo_cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取一些视频参数以生成带分类的输出视频。</span>\nvideo_n_frames <span class=\"token operator\">=</span> video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span>\nvideo_fps <span class=\"token operator\">=</span> video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span>\nvideo_width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nvideo_height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化跟踪器、分类器和计数器。</span>\n<span class=\"token comment\"># 在每个视频之前都这样做，因为它们都有状态。</span>\n\n<span class=\"token comment\"># 包含姿势类 CSV 的文件夹。 那应该是你使用的同一个文件夹</span>\n<span class=\"token comment\"># 构建分类器以输出 CSV。</span>\npose_samples_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'</span>\n\n<span class=\"token comment\"># 初始化跟踪器。</span>\npose_tracker <span class=\"token operator\">=</span> mp_pose<span class=\"token punctuation\">.</span>Pose<span class=\"token punctuation\">(</span>static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化嵌入器。</span>\npose_embedder <span class=\"token operator\">=</span> FullBodyPoseEmbedder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化分类器。</span>\n<span class=\"token comment\"># 确认您使用的参数与引导期间相同。</span>\npose_classifier <span class=\"token operator\">=</span> PoseClassifier<span class=\"token punctuation\">(</span>\n    pose_samples_folder<span class=\"token operator\">=</span>pose_samples_folder<span class=\"token punctuation\">,</span>\n    pose_embedder<span class=\"token operator\">=</span>pose_embedder<span class=\"token punctuation\">,</span>\n    top_n_by_max_distance<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    top_n_by_mean_distance<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 取消注释以验证分类器使用的目标姿势并查找异常值。</span>\n<span class=\"token comment\"># outliers =pose_classifier.find_pose_sample_outliers()</span>\n<span class=\"token comment\"># print('姿势样本异常值的数量（考虑删除它们）：', len(outliers))</span>\n\n<span class=\"token comment\"># 初始化 EMA 平滑。</span>\npose_classification_filter <span class=\"token operator\">=</span> EMADictSmoothing<span class=\"token punctuation\">(</span>\n    window_size<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    alpha<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化计数器。</span>\nrepetition_counter <span class=\"token operator\">=</span> RepetitionCounter<span class=\"token punctuation\">(</span>\n    class_name<span class=\"token operator\">=</span>class_name<span class=\"token punctuation\">,</span>\n    enter_threshold<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    exit_threshold<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化渲染器。</span>\npose_classification_visualizer <span class=\"token operator\">=</span> PoseClassificationVisualizer<span class=\"token punctuation\">(</span>\n    class_name<span class=\"token operator\">=</span>class_name<span class=\"token punctuation\">,</span>\n    plot_x_max<span class=\"token operator\">=</span>video_n_frames<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\"># 如果与 `top_n_by_mean_distance` 相同，则图形看起来更好。</span>\n    plot_y_max<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 对视频运行分类。</span>\n\n<span class=\"token comment\"># 打开输出视频。</span>\nout_video <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>out_video_path<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">*</span><span class=\"token string\">'mp4v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> video_fps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>video_width<span class=\"token punctuation\">,</span> video_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nframe_idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\noutput_frame <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n<span class=\"token keyword\">with</span> tqdm<span class=\"token punctuation\">.</span>tqdm<span class=\"token punctuation\">(</span>total<span class=\"token operator\">=</span>video_n_frames<span class=\"token punctuation\">,</span> position<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> leave<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pbar<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 获取视频的下一帧。</span>\n        success<span class=\"token punctuation\">,</span> input_frame <span class=\"token operator\">=</span> video_cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> success<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n        <span class=\"token comment\"># 运行姿势跟踪器。</span>\n        input_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>input_frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> pose_tracker<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>image<span class=\"token operator\">=</span>input_frame<span class=\"token punctuation\">)</span>\n        pose_landmarks <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>pose_landmarks\n\n        <span class=\"token comment\"># 绘制姿势预测。</span>\n        output_frame <span class=\"token operator\">=</span> input_frame<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> pose_landmarks <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                image<span class=\"token operator\">=</span>output_frame<span class=\"token punctuation\">,</span>\n                landmark_list<span class=\"token operator\">=</span>pose_landmarks<span class=\"token punctuation\">,</span>\n                connections<span class=\"token operator\">=</span>mp_pose<span class=\"token punctuation\">.</span>POSE_CONNECTIONS<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> pose_landmarks <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 获取地标。</span>\n            frame_height<span class=\"token punctuation\">,</span> frame_width <span class=\"token operator\">=</span> output_frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> output_frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            pose_landmarks <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>lmk<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> frame_width<span class=\"token punctuation\">,</span> lmk<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> frame_height<span class=\"token punctuation\">,</span> lmk<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> frame_width<span class=\"token punctuation\">]</span>\n                                      <span class=\"token keyword\">for</span> lmk <span class=\"token keyword\">in</span> pose_landmarks<span class=\"token punctuation\">.</span>landmark<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> pose_landmarks<span class=\"token punctuation\">.</span>shape <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'意外的地标形状： &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pose_landmarks<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 对当前帧的姿势进行分类。</span>\n            pose_classification <span class=\"token operator\">=</span> pose_classifier<span class=\"token punctuation\">(</span>pose_landmarks<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 使用 EMA 进行平滑分类。</span>\n            pose_classification_filtered <span class=\"token operator\">=</span> pose_classification_filter<span class=\"token punctuation\">(</span>\n                pose_classification<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 计算重复次数。</span>\n            repetitions_count <span class=\"token operator\">=</span> repetition_counter<span class=\"token punctuation\">(</span>\n                pose_classification_filtered<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 没有姿势 => 当前帧没有分类。</span>\n            pose_classification <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n            <span class=\"token comment\"># 仍然向过滤器添加空分类以保持未来帧的正确平滑。</span>\n            pose_classification_filtered <span class=\"token operator\">=</span> pose_classification_filter<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            pose_classification_filtered <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n            <span class=\"token comment\"># 不要假设那个人被“冻结”而更新计数器。 只是取最新的重复次数。</span>\n            repetitions_count <span class=\"token operator\">=</span> repetition_counter<span class=\"token punctuation\">.</span>n_repeats\n\n        <span class=\"token comment\"># 绘制分类图和重复计数器。</span>\n        output_frame <span class=\"token operator\">=</span> pose_classification_visualizer<span class=\"token punctuation\">(</span>\n            frame<span class=\"token operator\">=</span>output_frame<span class=\"token punctuation\">,</span>\n            pose_classification<span class=\"token operator\">=</span>pose_classification<span class=\"token punctuation\">,</span>\n            pose_classification_filtered<span class=\"token operator\">=</span>pose_classification_filtered<span class=\"token punctuation\">,</span>\n            repetitions_count<span class=\"token operator\">=</span>repetitions_count<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 保存输出帧。</span>\n        out_video<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>\n            np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>output_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 显示视频的中间帧以跟踪进度。</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'姿势分类 - 俯卧撑(down)'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>output_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n        frame_idx <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        pbar<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭输出视频。</span>\nout_video<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 释放MediaPipe资源。</span>\npose_tracker<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li>姿势分类</li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"姿势分类（PoseClassification）\"><a href=\"#姿势分类（PoseClassification）\" class=\"headerlink\" title=\"姿势分类（PoseClassification）\"></a>姿势分类（PoseClassification）</h3>","more":"<ul>\n<li><p>模型训练</p>\n<blockquote>\n<p>官方详细说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYXBpcGUucGFnZS5saW5rL3Bvc2VfY2xhc3NpZmljYXRpb25fYmFzaWM=\">https://mediapipe.page.link/pose_classification_basic<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> csv\n<span class=\"token keyword\">from</span> BootstrapHelper <span class=\"token keyword\">import</span> BootstrapHelper\n<span class=\"token keyword\">from</span> FullBodyPoseEmbedder <span class=\"token keyword\">import</span> FullBodyPoseEmbedder\n<span class=\"token keyword\">from</span> PoseClassification <span class=\"token keyword\">import</span> PoseClassifier\n\n<span class=\"token comment\"># region Bootstrap images</span>\n\n<span class=\"token comment\"># images_in_folder 的必需结构：</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\">#   fitness_poses_images_in/</span>\n<span class=\"token comment\">#     pushups_up/</span>\n<span class=\"token comment\">#       image_001.jpg</span>\n<span class=\"token comment\">#       image_002.jpg</span>\n<span class=\"token comment\">#       ...</span>\n<span class=\"token comment\">#     pushups_down/</span>\n<span class=\"token comment\">#       image_001.jpg</span>\n<span class=\"token comment\">#       image_002.jpg</span>\n<span class=\"token comment\">#       ...</span>\n<span class=\"token comment\">#     ...</span>\nbootstrap_images_in_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/train'</span>\n\n<span class=\"token comment\"># 引导图像和 CSV 的输出文件夹。</span>\nbootstrap_images_out_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/images_out'</span>\nbootstrap_csvs_out_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'</span>\n\n<span class=\"token comment\"># 初始化助手。</span>\nbootstrap_helper <span class=\"token operator\">=</span> BootstrapHelper<span class=\"token punctuation\">(</span>\n    images_in_folder<span class=\"token operator\">=</span>bootstrap_images_in_folder<span class=\"token punctuation\">,</span>\n    images_out_folder<span class=\"token operator\">=</span>bootstrap_images_out_folder<span class=\"token punctuation\">,</span>\n    csvs_out_folder<span class=\"token operator\">=</span>bootstrap_csvs_out_folder<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 检查有多少姿势类和图像可用。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_in_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 引导所有图像。</span>\n<span class=\"token comment\"># 将限制设置为一些小的数字以进行调试。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>bootstrap<span class=\"token punctuation\">(</span>per_pose_class_limit<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 检查引导了多少图像。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_out_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 没有检测到姿势的初始引导图像仍然保存在</span>\n<span class=\"token comment\"># 用于调试目的的文件夹（但不在 CSV 中）。 让我们移除它们。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>align_images_and_csvs<span class=\"token punctuation\">(</span>print_removed_items<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_out_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># endregion Bootstrap images</span>\n\n<span class=\"token comment\"># region Manual filtration</span>\n\n<span class=\"token comment\"># # 请手动验证预测并删除姿势预测错误的样本（图像）。 检查是否要求您仅根据预测的地标对姿势进行分类。 如果你不能 - 删除它。</span>\n<span class=\"token comment\"># # 完成后对齐 CSV 和图像文件夹。</span>\n<span class=\"token comment\"># # 将 CSV 与过滤后的图像对齐。</span>\n<span class=\"token comment\"># bootstrap_helper.align_images_and_csvs(print_removed_items=False)</span>\n<span class=\"token comment\"># bootstrap_helper.print_images_out_statistics()</span>\n\n<span class=\"token comment\"># endregion Manual filtration</span>\n\n<span class=\"token comment\"># region Automatic filtration</span>\n\n<span class=\"token comment\"># 找出异常值。</span>\n<span class=\"token comment\"># 将姿势地标转换为嵌入。</span>\npose_embedder <span class=\"token operator\">=</span> FullBodyPoseEmbedder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 根据姿势数据库对姿势进行分类。</span>\npose_classifier <span class=\"token operator\">=</span> PoseClassifier<span class=\"token punctuation\">(</span>\n    pose_samples_folder<span class=\"token operator\">=</span>bootstrap_csvs_out_folder<span class=\"token punctuation\">,</span>\n    pose_embedder<span class=\"token operator\">=</span>pose_embedder<span class=\"token punctuation\">,</span>\n    top_n_by_max_distance<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    top_n_by_mean_distance<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\noutliers <span class=\"token operator\">=</span> pose_classifier<span class=\"token punctuation\">.</span>find_pose_sample_outliers<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Number of outliers: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>outliers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 分析异常值。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>analyze_outliers<span class=\"token punctuation\">(</span>outliers<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 删除所有异常值（如果您不想手动选择）。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>remove_outliers<span class=\"token punctuation\">(</span>outliers<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 去除异常值后将 CSV 与图像对齐。</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>align_images_and_csvs<span class=\"token punctuation\">(</span>print_removed_items<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nbootstrap_helper<span class=\"token punctuation\">.</span>print_images_out_statistics<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># endregion Automatic filtration</span>\n\n<span class=\"token comment\"># region Dump for the App</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">dump_for_the_app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pose_samples_folder <span class=\"token operator\">=</span> <span class=\"token string\">'fitness_poses_csvs_out'</span>\n    pose_samples_csv_path <span class=\"token operator\">=</span> <span class=\"token string\">'fitness_poses_csvs_out.csv'</span>\n    file_extension <span class=\"token operator\">=</span> <span class=\"token string\">'csv'</span>\n    file_separator <span class=\"token operator\">=</span> <span class=\"token string\">','</span>\n\n    <span class=\"token comment\"># 文件夹中的每个文件代表一个姿势类。</span>\n    file_names <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>name <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>\n        pose_samples_folder<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> name<span class=\"token punctuation\">.</span>endswith<span class=\"token punctuation\">(</span>file_extension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>pose_samples_csv_path<span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> csv_out<span class=\"token punctuation\">:</span>\n        csv_out_writer <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>\n            csv_out<span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span>file_separator<span class=\"token punctuation\">,</span> quoting<span class=\"token operator\">=</span>csv<span class=\"token punctuation\">.</span>QUOTE_MINIMAL<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> file_name <span class=\"token keyword\">in</span> file_names<span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># Use file name as pose class name.</span>\n            class_name <span class=\"token operator\">=</span> file_name<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>file_extension<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n            <span class=\"token comment\"># 一个文件行：`sample_00001,x1,y1,x2,y2,....`。</span>\n            <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>pose_samples_folder<span class=\"token punctuation\">,</span> file_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> csv_in<span class=\"token punctuation\">:</span>\n                csv_in_reader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span>csv_in<span class=\"token punctuation\">,</span> delimiter<span class=\"token operator\">=</span>file_separator<span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> csv_in_reader<span class=\"token punctuation\">:</span>\n                    row<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> class_name<span class=\"token punctuation\">)</span>\n                    csv_out_writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\"># 将过滤后的姿势转储到 CSV 并下载。 如何在 ML Kit 示例应用程序中使用此 CSV。</span>\n<span class=\"token comment\"># dump_for_the_app()</span>\n\n<span class=\"token comment\"># endregion Dump for the App</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li><p>姿势识别</p>\n<blockquote>\n<p>官方详细说明：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpYXBpcGUucGFnZS5saW5rL3Bvc2VfY2xhc3NpZmljYXRpb25fZXh0ZW5kZWQ=\">https://mediapipe.page.link/pose_classification_extended<i class=\"fa fa-external-link-alt\"></i></span></p>\n</blockquote>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> tqdm\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions <span class=\"token keyword\">import</span> drawing_utils <span class=\"token keyword\">as</span> mp_drawing\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions <span class=\"token keyword\">import</span> pose <span class=\"token keyword\">as</span> mp_pose\n\n<span class=\"token keyword\">from</span> EMADictSmoothing <span class=\"token keyword\">import</span> EMADictSmoothing\n<span class=\"token keyword\">from</span> FullBodyPoseEmbedder <span class=\"token keyword\">import</span> FullBodyPoseEmbedder\n<span class=\"token keyword\">from</span> PoseClassificationVisualizer <span class=\"token keyword\">import</span> PoseClassificationVisualizer\n<span class=\"token keyword\">from</span> RepetitionCounter <span class=\"token keyword\">import</span> RepetitionCounter\n<span class=\"token keyword\">from</span> PoseClassification <span class=\"token keyword\">import</span> PoseClassifier\n\n<span class=\"token comment\"># 指定您的视频名称和目标姿势类以计算重复次数。</span>\nvideo_path <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test/5.mp4'</span>\nclass_name <span class=\"token operator\">=</span> <span class=\"token string\">'down'</span>\nout_video_path <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/test_out/5_out.mp4'</span>\n\n<span class=\"token comment\"># 打开视频。</span>\nvideo_cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span>video_path<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 获取一些视频参数以生成带分类的输出视频。</span>\nvideo_n_frames <span class=\"token operator\">=</span> video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_COUNT<span class=\"token punctuation\">)</span>\nvideo_fps <span class=\"token operator\">=</span> video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FPS<span class=\"token punctuation\">)</span>\nvideo_width <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_WIDTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nvideo_height <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>video_cap<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>CAP_PROP_FRAME_HEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化跟踪器、分类器和计数器。</span>\n<span class=\"token comment\"># 在每个视频之前都这样做，因为它们都有状态。</span>\n\n<span class=\"token comment\"># 包含姿势类 CSV 的文件夹。 那应该是你使用的同一个文件夹</span>\n<span class=\"token comment\"># 构建分类器以输出 CSV。</span>\npose_samples_folder <span class=\"token operator\">=</span> <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/pose/extended/csvs_out'</span>\n\n<span class=\"token comment\"># 初始化跟踪器。</span>\npose_tracker <span class=\"token operator\">=</span> mp_pose<span class=\"token punctuation\">.</span>Pose<span class=\"token punctuation\">(</span>static_image_mode<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化嵌入器。</span>\npose_embedder <span class=\"token operator\">=</span> FullBodyPoseEmbedder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化分类器。</span>\n<span class=\"token comment\"># 确认您使用的参数与引导期间相同。</span>\npose_classifier <span class=\"token operator\">=</span> PoseClassifier<span class=\"token punctuation\">(</span>\n    pose_samples_folder<span class=\"token operator\">=</span>pose_samples_folder<span class=\"token punctuation\">,</span>\n    pose_embedder<span class=\"token operator\">=</span>pose_embedder<span class=\"token punctuation\">,</span>\n    top_n_by_max_distance<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    top_n_by_mean_distance<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 取消注释以验证分类器使用的目标姿势并查找异常值。</span>\n<span class=\"token comment\"># outliers =pose_classifier.find_pose_sample_outliers()</span>\n<span class=\"token comment\"># print('姿势样本异常值的数量（考虑删除它们）：', len(outliers))</span>\n\n<span class=\"token comment\"># 初始化 EMA 平滑。</span>\npose_classification_filter <span class=\"token operator\">=</span> EMADictSmoothing<span class=\"token punctuation\">(</span>\n    window_size<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    alpha<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化计数器。</span>\nrepetition_counter <span class=\"token operator\">=</span> RepetitionCounter<span class=\"token punctuation\">(</span>\n    class_name<span class=\"token operator\">=</span>class_name<span class=\"token punctuation\">,</span>\n    enter_threshold<span class=\"token operator\">=</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    exit_threshold<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 初始化渲染器。</span>\npose_classification_visualizer <span class=\"token operator\">=</span> PoseClassificationVisualizer<span class=\"token punctuation\">(</span>\n    class_name<span class=\"token operator\">=</span>class_name<span class=\"token punctuation\">,</span>\n    plot_x_max<span class=\"token operator\">=</span>video_n_frames<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\"># 如果与 `top_n_by_mean_distance` 相同，则图形看起来更好。</span>\n    plot_y_max<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 对视频运行分类。</span>\n\n<span class=\"token comment\"># 打开输出视频。</span>\nout_video <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoWriter<span class=\"token punctuation\">(</span>out_video_path<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>VideoWriter_fourcc<span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">*</span><span class=\"token string\">'mp4v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> video_fps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>video_width<span class=\"token punctuation\">,</span> video_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nframe_idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\noutput_frame <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n<span class=\"token keyword\">with</span> tqdm<span class=\"token punctuation\">.</span>tqdm<span class=\"token punctuation\">(</span>total<span class=\"token operator\">=</span>video_n_frames<span class=\"token punctuation\">,</span> position<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> leave<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> pbar<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 获取视频的下一帧。</span>\n        success<span class=\"token punctuation\">,</span> input_frame <span class=\"token operator\">=</span> video_cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> success<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span>\n\n        <span class=\"token comment\"># 运行姿势跟踪器。</span>\n        input_frame <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>input_frame<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> pose_tracker<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>image<span class=\"token operator\">=</span>input_frame<span class=\"token punctuation\">)</span>\n        pose_landmarks <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span>pose_landmarks\n\n        <span class=\"token comment\"># 绘制姿势预测。</span>\n        output_frame <span class=\"token operator\">=</span> input_frame<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> pose_landmarks <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            mp_drawing<span class=\"token punctuation\">.</span>draw_landmarks<span class=\"token punctuation\">(</span>\n                image<span class=\"token operator\">=</span>output_frame<span class=\"token punctuation\">,</span>\n                landmark_list<span class=\"token operator\">=</span>pose_landmarks<span class=\"token punctuation\">,</span>\n                connections<span class=\"token operator\">=</span>mp_pose<span class=\"token punctuation\">.</span>POSE_CONNECTIONS<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> pose_landmarks <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 获取地标。</span>\n            frame_height<span class=\"token punctuation\">,</span> frame_width <span class=\"token operator\">=</span> output_frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> output_frame<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n            pose_landmarks <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>lmk<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> frame_width<span class=\"token punctuation\">,</span> lmk<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> frame_height<span class=\"token punctuation\">,</span> lmk<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> frame_width<span class=\"token punctuation\">]</span>\n                                      <span class=\"token keyword\">for</span> lmk <span class=\"token keyword\">in</span> pose_landmarks<span class=\"token punctuation\">.</span>landmark<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">assert</span> pose_landmarks<span class=\"token punctuation\">.</span>shape <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>\n                <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'意外的地标形状： &#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>pose_landmarks<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 对当前帧的姿势进行分类。</span>\n            pose_classification <span class=\"token operator\">=</span> pose_classifier<span class=\"token punctuation\">(</span>pose_landmarks<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 使用 EMA 进行平滑分类。</span>\n            pose_classification_filtered <span class=\"token operator\">=</span> pose_classification_filter<span class=\"token punctuation\">(</span>\n                pose_classification<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 计算重复次数。</span>\n            repetitions_count <span class=\"token operator\">=</span> repetition_counter<span class=\"token punctuation\">(</span>\n                pose_classification_filtered<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 没有姿势 => 当前帧没有分类。</span>\n            pose_classification <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n            <span class=\"token comment\"># 仍然向过滤器添加空分类以保持未来帧的正确平滑。</span>\n            pose_classification_filtered <span class=\"token operator\">=</span> pose_classification_filter<span class=\"token punctuation\">(</span><span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            pose_classification_filtered <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n            <span class=\"token comment\"># 不要假设那个人被“冻结”而更新计数器。 只是取最新的重复次数。</span>\n            repetitions_count <span class=\"token operator\">=</span> repetition_counter<span class=\"token punctuation\">.</span>n_repeats\n\n        <span class=\"token comment\"># 绘制分类图和重复计数器。</span>\n        output_frame <span class=\"token operator\">=</span> pose_classification_visualizer<span class=\"token punctuation\">(</span>\n            frame<span class=\"token operator\">=</span>output_frame<span class=\"token punctuation\">,</span>\n            pose_classification<span class=\"token operator\">=</span>pose_classification<span class=\"token punctuation\">,</span>\n            pose_classification_filtered<span class=\"token operator\">=</span>pose_classification_filtered<span class=\"token punctuation\">,</span>\n            repetitions_count<span class=\"token operator\">=</span>repetitions_count<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 保存输出帧。</span>\n        out_video<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>\n            np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>output_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 显示视频的中间帧以跟踪进度。</span>\n        cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'姿势分类 - 俯卧撑(down)'</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>output_frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n        frame_idx <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        pbar<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 关闭输出视频。</span>\nout_video<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 释放MediaPipe资源。</span>\npose_tracker<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\ncv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>\n</ul>\n<h3 id=\"其它功能\"><a href=\"#其它功能\" class=\"headerlink\" title=\"其它功能\"></a>其它功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li>姿势分类</li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Psycopg","date":"2021-12-30T02:28:31.000Z","_content":"\n## 简介\n\nPsycopg 3是一个新设计的PostgreSQL数据库适配器，用于Python编程语言。\n\n<!-- more -->\n\n## 安装\n\n> pip > 20.3\n> python > 3.6\n> PostgreSQL > 10\n\n```console\npip install psycopg\npip install psycopg_binary\n```\n\n## 基本用法\n\n```python\nimport psycopg\n\nconn = psycopg.connect(\"dbname=<dbname> user=<username> password=<password>\")\ntry:\n\n    with conn.cursor() as cur:\n        for record in cur.execute(\"SELECT * FROM test\", binary=True):\n            print(record)\n        for record in cur.execute(\"SELECT now()\", binary=True).fetchone():\n            print(record)\n\n    with conn.transaction():\n        for record in conn.execute(\"SELECT * FROM test\", binary=True):\n            print(record)\n        for record in conn.execute(\"SELECT now()\", binary=True).fetchone():\n            print(record)\n\n    print(conn.execute(\"SELECT (%s %% 2) = 1 AS even\", (10,), binary=True).fetchone())\n\nexcept BaseException:\n    conn.rollback()\nelse:\n    conn.commit()\nfinally:\n    conn.close()\n```\n","source":"_posts/Python/Psycopg.md","raw":"---\ntitle: Psycopg\ndate: 2021-12-30 10:28:31\ncategories:\n  - 经验随笔\ntags:\n  - Python\n  - PostgreSQL\n  - Psycopg\n---\n\n## 简介\n\nPsycopg 3是一个新设计的PostgreSQL数据库适配器，用于Python编程语言。\n\n<!-- more -->\n\n## 安装\n\n> pip > 20.3\n> python > 3.6\n> PostgreSQL > 10\n\n```console\npip install psycopg\npip install psycopg_binary\n```\n\n## 基本用法\n\n```python\nimport psycopg\n\nconn = psycopg.connect(\"dbname=<dbname> user=<username> password=<password>\")\ntry:\n\n    with conn.cursor() as cur:\n        for record in cur.execute(\"SELECT * FROM test\", binary=True):\n            print(record)\n        for record in cur.execute(\"SELECT now()\", binary=True).fetchone():\n            print(record)\n\n    with conn.transaction():\n        for record in conn.execute(\"SELECT * FROM test\", binary=True):\n            print(record)\n        for record in conn.execute(\"SELECT now()\", binary=True).fetchone():\n            print(record)\n\n    print(conn.execute(\"SELECT (%s %% 2) = 1 AS even\", (10,), binary=True).fetchone())\n\nexcept BaseException:\n    conn.rollback()\nelse:\n    conn.commit()\nfinally:\n    conn.close()\n```\n","slug":"Python/Psycopg","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xy001m4d0hgoh1fxre","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Psycopg 3是一个新设计的PostgreSQL数据库适配器，用于Python编程语言。</p>\n<span id=\"more\"></span>\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><blockquote>\n<p>pip &gt; 20.3<br>python &gt; 3.6<br>PostgreSQL &gt; 10</p>\n</blockquote>\n<pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\">pip install psycopg\npip install psycopg_binary<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> psycopg\n\nconn <span class=\"token operator\">=</span> psycopg<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">\"dbname=&lt;dbname> user=&lt;username> password=&lt;password>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cur<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM test\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT now()\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM test\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT now()\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT (%s %% 2) = 1 AS even\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">except</span> BaseException<span class=\"token punctuation\">:</span>\n    conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Psycopg 3是一个新设计的PostgreSQL数据库适配器，用于Python编程语言。</p>","more":"<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><blockquote>\n<p>pip &gt; 20.3<br>python &gt; 3.6<br>PostgreSQL &gt; 10</p>\n</blockquote>\n<pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\">pip install psycopg\npip install psycopg_binary<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> psycopg\n\nconn <span class=\"token operator\">=</span> psycopg<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">\"dbname=&lt;dbname> user=&lt;username> password=&lt;password>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> cur<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM test\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> cur<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT now()\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> conn<span class=\"token punctuation\">.</span>transaction<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM test\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> record <span class=\"token keyword\">in</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT now()\"</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>record<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT (%s %% 2) = 1 AS even\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> binary<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>fetchone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">except</span> BaseException<span class=\"token punctuation\">:</span>\n    conn<span class=\"token punctuation\">.</span>rollback<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    conn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    conn<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>"},{"title":"Python 媒体识别包 Mediapipe - 自拍（SelfieSegmentation）","date":"2021-09-30T07:17:15.000Z","_content":"\n### 自拍分割（SelfieSegmentation）\n\n<!-- more -->\n\n```python\nimport cv2\n\nfrom mediapipe.python.solutions.selfie_segmentation import SelfieSegmentation\nimport numpy as np\n\nwith SelfieSegmentation(\n    model_selection=1\n) as selfie_segmentation:\n    bg_img = cv2.imread(\n        '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/bg.jpeg')\n\n    cap = cv2.VideoCapture(0)\n\n    while True:\n        success, img = cap.read()\n        if success:\n            img = cv2.cvtColor(cv2.flip(img, 1), cv2.COLOR_BGR2RGB)\n            img.flags.writeable = False\n            results = selfie_segmentation.process(img)\n\n            img.flags.writeable = True\n            img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n\n            # 在背景图像上绘制自拍分割。\n            # 要改进边界周围的分割，请考虑应用联合双边过滤器到“results.segmentation_mask”与“image”。\n            # 轮廓\n            condition = np.stack(\n                (results.segmentation_mask,) * 3, axis=-1) > 0.1\n            if bg_img.shape[:1] != img.shape[:1]:\n                bg_img = cv2.resize(bg_img, (img.shape[1], img.shape[0]))\n            # 按轮廓合并\n            output_image = np.where(condition, img, bg_img)\n\n            cv2.imshow('自拍抠图', output_image)\n            if cv2.waitKey(1) > 0:\n                break\n\n    cap.release()\n\n```\n\n### 功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- 自拍分割\n","source":"_posts/Python/Mediapipe/SelfieSegmentation.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe - 自拍（SelfieSegmentation）\ndate: 2021-09-30 15:17:15\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 自拍分割（SelfieSegmentation）\n\n<!-- more -->\n\n```python\nimport cv2\n\nfrom mediapipe.python.solutions.selfie_segmentation import SelfieSegmentation\nimport numpy as np\n\nwith SelfieSegmentation(\n    model_selection=1\n) as selfie_segmentation:\n    bg_img = cv2.imread(\n        '/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/bg.jpeg')\n\n    cap = cv2.VideoCapture(0)\n\n    while True:\n        success, img = cap.read()\n        if success:\n            img = cv2.cvtColor(cv2.flip(img, 1), cv2.COLOR_BGR2RGB)\n            img.flags.writeable = False\n            results = selfie_segmentation.process(img)\n\n            img.flags.writeable = True\n            img = cv2.cvtColor(img, cv2.COLOR_RGB2BGR)\n\n            # 在背景图像上绘制自拍分割。\n            # 要改进边界周围的分割，请考虑应用联合双边过滤器到“results.segmentation_mask”与“image”。\n            # 轮廓\n            condition = np.stack(\n                (results.segmentation_mask,) * 3, axis=-1) > 0.1\n            if bg_img.shape[:1] != img.shape[:1]:\n                bg_img = cv2.resize(bg_img, (img.shape[1], img.shape[0]))\n            # 按轮廓合并\n            output_image = np.where(condition, img, bg_img)\n\n            cv2.imshow('自拍抠图', output_image)\n            if cv2.waitKey(1) > 0:\n                break\n\n    cap.release()\n\n```\n\n### 功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- 自拍分割\n","slug":"Python/Mediapipe/SelfieSegmentation","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xy001p4d0hahrh21lr","content":"<h3 id=\"自拍分割（SelfieSegmentation）\"><a href=\"#自拍分割（SelfieSegmentation）\" class=\"headerlink\" title=\"自拍分割（SelfieSegmentation）\"></a>自拍分割（SelfieSegmentation）</h3><span id=\"more\"></span>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>selfie_segmentation <span class=\"token keyword\">import</span> SelfieSegmentation\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">with</span> SelfieSegmentation<span class=\"token punctuation\">(</span>\n    model_selection<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> selfie_segmentation<span class=\"token punctuation\">:</span>\n    bg_img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/bg.jpeg'</span><span class=\"token punctuation\">)</span>\n\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            img<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>writeable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n            results <span class=\"token operator\">=</span> selfie_segmentation<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n\n            img<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>writeable <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 在背景图像上绘制自拍分割。</span>\n            <span class=\"token comment\"># 要改进边界周围的分割，请考虑应用联合双边过滤器到“results.segmentation_mask”与“image”。</span>\n            <span class=\"token comment\"># 轮廓</span>\n            condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>segmentation_mask<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1</span>\n            <span class=\"token keyword\">if</span> bg_img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                bg_img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>bg_img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 按轮廓合并</span>\n            output_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> bg_img<span class=\"token punctuation\">)</span>\n\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'自拍抠图'</span><span class=\"token punctuation\">,</span> output_image<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li>自拍分割</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"自拍分割（SelfieSegmentation）\"><a href=\"#自拍分割（SelfieSegmentation）\" class=\"headerlink\" title=\"自拍分割（SelfieSegmentation）\"></a>自拍分割（SelfieSegmentation）</h3>","more":"<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> cv2\n\n<span class=\"token keyword\">from</span> mediapipe<span class=\"token punctuation\">.</span>python<span class=\"token punctuation\">.</span>solutions<span class=\"token punctuation\">.</span>selfie_segmentation <span class=\"token keyword\">import</span> SelfieSegmentation\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\n<span class=\"token keyword\">with</span> SelfieSegmentation<span class=\"token punctuation\">(</span>\n    model_selection<span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> selfie_segmentation<span class=\"token punctuation\">:</span>\n    bg_img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>\n        <span class=\"token string\">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/bg.jpeg'</span><span class=\"token punctuation\">)</span>\n\n    cap <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        success<span class=\"token punctuation\">,</span> img <span class=\"token operator\">=</span> cap<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> success<span class=\"token punctuation\">:</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>cv2<span class=\"token punctuation\">.</span>flip<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_BGR2RGB<span class=\"token punctuation\">)</span>\n            img<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>writeable <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n            results <span class=\"token operator\">=</span> selfie_segmentation<span class=\"token punctuation\">.</span>process<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\n\n            img<span class=\"token punctuation\">.</span>flags<span class=\"token punctuation\">.</span>writeable <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n            img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>COLOR_RGB2BGR<span class=\"token punctuation\">)</span>\n\n            <span class=\"token comment\"># 在背景图像上绘制自拍分割。</span>\n            <span class=\"token comment\"># 要改进边界周围的分割，请考虑应用联合双边过滤器到“results.segmentation_mask”与“image”。</span>\n            <span class=\"token comment\"># 轮廓</span>\n            condition <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>stack<span class=\"token punctuation\">(</span>\n                <span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>segmentation_mask<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.1</span>\n            <span class=\"token keyword\">if</span> bg_img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                bg_img <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>bg_img<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token comment\"># 按轮廓合并</span>\n            output_image <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> bg_img<span class=\"token punctuation\">)</span>\n\n            cv2<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span><span class=\"token string\">'自拍抠图'</span><span class=\"token punctuation\">,</span> output_image<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> cv2<span class=\"token punctuation\">.</span>waitKey<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n\n    cap<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li>自拍分割</li>\n</ul>"},{"title":"Python 媒体识别包 Mediapipe 安装","date":"2021-09-30T02:29:05.000Z","_content":"\n### 简介\n\nMediaPipe 以预构建的 Python 包的形式提供即用型但可自定义的 Python 解决方案。 MediaPipe Python 包适用于 Linux、macOS 和 Windows。\n\n<!-- more -->\n\n### 安装\n\n```bash\npip install mediapipe\n```\n\n### 功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","source":"_posts/Python/Mediapipe/Install.md","raw":"---\ntitle: Python 媒体识别包 Mediapipe 安装\ndate: 2021-09-30 10:29:05\ncategories:\n  - 学习笔记\ntags:\n  - Python\n  - Mediapipe\n  - OpenCV\n---\n\n### 简介\n\nMediaPipe 以预构建的 Python 包的形式提供即用型但可自定义的 Python 解决方案。 MediaPipe Python 包适用于 Linux、macOS 和 Windows。\n\n<!-- more -->\n\n### 安装\n\n```bash\npip install mediapipe\n```\n\n### 功能\n\n- [人脸检测](../Face/)\n- [面网格](../FaceMesh/)\n- [手](../Hands/)\n- [整体](../Holistic/)\n- [物体空间](../Objectron/)\n- [姿势](../Pose/)\n- [姿势分类](../PoseClassification/)\n- [自拍分割](../SelfieSegmentation/)\n","slug":"Python/Mediapipe/Install","published":1,"updated":"2022-07-01T07:50:20.942Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xz001t4d0h1d6ld205","content":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>MediaPipe 以预构建的 Python 包的形式提供即用型但可自定义的 Python 解决方案。 MediaPipe Python 包适用于 Linux、macOS 和 Windows。</p>\n<span id=\"more\"></span>\n\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> mediapipe<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>MediaPipe 以预构建的 Python 包的形式提供即用型但可自定义的 Python 解决方案。 MediaPipe Python 包适用于 Linux、macOS 和 Windows。</p>","more":"<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pip <span class=\"token function\">install</span> mediapipe<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h3 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h3><ul>\n<li><a href=\"../Face/\">人脸检测</a></li>\n<li><a href=\"../FaceMesh/\">面网格</a></li>\n<li><a href=\"../Hands/\">手</a></li>\n<li><a href=\"../Holistic/\">整体</a></li>\n<li><a href=\"../Objectron/\">物体空间</a></li>\n<li><a href=\"../Pose/\">姿势</a></li>\n<li><a href=\"../PoseClassification/\">姿势分类</a></li>\n<li><a href=\"../SelfieSegmentation/\">自拍分割</a></li>\n</ul>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期","date":"2021-08-19T01:28:00.000Z","_content":"\n## 简介\n\n演示应用程序的生命周期事件与各事件之间的数据处理。\n\n1.  生命周期事件。\n2.  生命周期数据处理。\n\n<!-- more -->\n\n## 生命周期事件\n\n1.  打开已有项目 AwesomeApp。\n2.  编辑 App.xaml.cs：\n\n```csharp\nprotected override void OnStart()\n{\n\tConsole.WriteLine(\"OnStart\");\n}\nprotected override void OnSleep()\n{\n\tConsole.WriteLine(\"OnSleep\");\n}\nprotected override void OnResume()\n{\n\tConsole.WriteLine(\"OnResume\");\n}\n```\n\n3.  调试界面：\n    > 应用程序起动时触发\n    > ![Onstart](https://img-blog.csdnimg.cn/20200309114151711.png)\n\n> 应用程序切换到后台时触发\n> ![OnSleep](https://img-blog.csdnimg.cn/20200309114647300.png)\n\n> 当前活动应用程序切换回本程序时触发![OnResume](https://img-blog.csdnimg.cn/20200309115207278.png)\n\n## 生命周期数据处理\n\n1.  编辑 App.xaml.cs：\n\n```csharp\nconst string displayText = \"displayText\";\npublic string DisplayText { get; set; }\n……\nprotected override void OnStart()\n{\n\tConsole.WriteLine(\"OnStart\");\n\tif (Properties.ContainsKey(displayText))\n\t{\n\t\tDisplayText = (string)Properties[displayText];\n\t}\n}\nprotected override void OnSleep()\n{\n\tConsole.WriteLine(\"OnSleep\");\n\tProperties[displayText] = DisplayText;\n}\n```\n\n2.  编辑 MainPage.xaml：\n\n```xml\n<Entry x:Name=\"entEvent\"\n\t   Placeholder=\"这里显示生命周期内容\"\n\t   Completed=\"entEvent_Completed\" />\n```\n\n3.  编辑 MainPage.xaml.cs：\n\n```csharp\nprotected override void OnAppearing()\n{\n\tbase.OnAppearing();\n\tentEvent.Text = (Application.Current as App).DisplayText;\n}\nprivate void entEvent_Completed(object sender, EventArgs e)\n{\n\t(Application.Current as App).DisplayText = (sender as Entry).Text;\n}\n```\n\n4.  调试界面：\n    > 无输入内容、APP 永久属性字典中不包含 displayText 或 displayText 无值时显示\n    > ![](https://img-blog.csdnimg.cn/20200309121724339.png)\n\n> 应用程序切换时 APP 永久属性字典包含 displayText 并 displayText 有值时显示\n> ![](https://img-blog.csdnimg.cn/20200309124017490.png)\n","source":"_posts/Xamarin/Forms/10_LifeCycle.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期\ndate: 2021-08-19 09:28:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示应用程序的生命周期事件与各事件之间的数据处理。\n\n1.  生命周期事件。\n2.  生命周期数据处理。\n\n<!-- more -->\n\n## 生命周期事件\n\n1.  打开已有项目 AwesomeApp。\n2.  编辑 App.xaml.cs：\n\n```csharp\nprotected override void OnStart()\n{\n\tConsole.WriteLine(\"OnStart\");\n}\nprotected override void OnSleep()\n{\n\tConsole.WriteLine(\"OnSleep\");\n}\nprotected override void OnResume()\n{\n\tConsole.WriteLine(\"OnResume\");\n}\n```\n\n3.  调试界面：\n    > 应用程序起动时触发\n    > ![Onstart](https://img-blog.csdnimg.cn/20200309114151711.png)\n\n> 应用程序切换到后台时触发\n> ![OnSleep](https://img-blog.csdnimg.cn/20200309114647300.png)\n\n> 当前活动应用程序切换回本程序时触发![OnResume](https://img-blog.csdnimg.cn/20200309115207278.png)\n\n## 生命周期数据处理\n\n1.  编辑 App.xaml.cs：\n\n```csharp\nconst string displayText = \"displayText\";\npublic string DisplayText { get; set; }\n……\nprotected override void OnStart()\n{\n\tConsole.WriteLine(\"OnStart\");\n\tif (Properties.ContainsKey(displayText))\n\t{\n\t\tDisplayText = (string)Properties[displayText];\n\t}\n}\nprotected override void OnSleep()\n{\n\tConsole.WriteLine(\"OnSleep\");\n\tProperties[displayText] = DisplayText;\n}\n```\n\n2.  编辑 MainPage.xaml：\n\n```xml\n<Entry x:Name=\"entEvent\"\n\t   Placeholder=\"这里显示生命周期内容\"\n\t   Completed=\"entEvent_Completed\" />\n```\n\n3.  编辑 MainPage.xaml.cs：\n\n```csharp\nprotected override void OnAppearing()\n{\n\tbase.OnAppearing();\n\tentEvent.Text = (Application.Current as App).DisplayText;\n}\nprivate void entEvent_Completed(object sender, EventArgs e)\n{\n\t(Application.Current as App).DisplayText = (sender as Entry).Text;\n}\n```\n\n4.  调试界面：\n    > 无输入内容、APP 永久属性字典中不包含 displayText 或 displayText 无值时显示\n    > ![](https://img-blog.csdnimg.cn/20200309121724339.png)\n\n> 应用程序切换时 APP 永久属性字典包含 displayText 并 displayText 有值时显示\n> ![](https://img-blog.csdnimg.cn/20200309124017490.png)\n","slug":"Xamarin/Forms/10_LifeCycle","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xz001w4d0h5ius9n2u","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示应用程序的生命周期事件与各事件之间的数据处理。</p>\n<ol>\n<li>生命周期事件。</li>\n<li>生命周期数据处理。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"生命周期事件\"><a href=\"#生命周期事件\" class=\"headerlink\" title=\"生命周期事件\"></a>生命周期事件</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnStart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnSleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnResume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试界面：<blockquote>\n<p>应用程序起动时触发<br><img data-src=\"https://img-blog.csdnimg.cn/20200309114151711.png\" alt=\"Onstart\"></p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>应用程序切换到后台时触发<br><img data-src=\"https://img-blog.csdnimg.cn/20200309114647300.png\" alt=\"OnSleep\"></p>\n</blockquote>\n<blockquote>\n<p>当前活动应用程序切换回本程序时触发<img data-src=\"https://img-blog.csdnimg.cn/20200309115207278.png\" alt=\"OnResume\"></p>\n</blockquote>\n<h2 id=\"生命周期数据处理\"><a href=\"#生命周期数据处理\" class=\"headerlink\" title=\"生命周期数据处理\"></a>生命周期数据处理</h2><ol>\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> displayText <span class=\"token operator\">=</span> <span class=\"token string\">\"displayText\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DisplayText <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n……\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnStart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Properties<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>displayText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tDisplayText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span>Properties<span class=\"token punctuation\">[</span>displayText<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnSleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tProperties<span class=\"token punctuation\">[</span>displayText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DisplayText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 MainPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entEvent<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里显示生命周期内容<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entEvent_Completed<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 MainPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tentEvent<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>Current <span class=\"token keyword\">as</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DisplayText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">entEvent_Completed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>Current <span class=\"token keyword\">as</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DisplayText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sender <span class=\"token keyword\">as</span> <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>调试界面：<blockquote>\n<p>无输入内容、APP 永久属性字典中不包含 displayText 或 displayText 无值时显示<br><img data-src=\"https://img-blog.csdnimg.cn/20200309121724339.png\"></p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>应用程序切换时 APP 永久属性字典包含 displayText 并 displayText 有值时显示<br><img data-src=\"https://img-blog.csdnimg.cn/20200309124017490.png\"></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示应用程序的生命周期事件与各事件之间的数据处理。</p>\n<ol>\n<li>生命周期事件。</li>\n<li>生命周期数据处理。</li>\n</ol>","more":"<h2 id=\"生命周期事件\"><a href=\"#生命周期事件\" class=\"headerlink\" title=\"生命周期事件\"></a>生命周期事件</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnStart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnSleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnResume\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试界面：<blockquote>\n<p>应用程序起动时触发<br><img data-src=\"https://img-blog.csdnimg.cn/20200309114151711.png\" alt=\"Onstart\"></p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>应用程序切换到后台时触发<br><img data-src=\"https://img-blog.csdnimg.cn/20200309114647300.png\" alt=\"OnSleep\"></p>\n</blockquote>\n<blockquote>\n<p>当前活动应用程序切换回本程序时触发<img data-src=\"https://img-blog.csdnimg.cn/20200309115207278.png\" alt=\"OnResume\"></p>\n</blockquote>\n<h2 id=\"生命周期数据处理\"><a href=\"#生命周期数据处理\" class=\"headerlink\" title=\"生命周期数据处理\"></a>生命周期数据处理</h2><ol>\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> displayText <span class=\"token operator\">=</span> <span class=\"token string\">\"displayText\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DisplayText <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n……\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnStart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Properties<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>displayText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tDisplayText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">)</span>Properties<span class=\"token punctuation\">[</span>displayText<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tConsole<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"OnSleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tProperties<span class=\"token punctuation\">[</span>displayText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> DisplayText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 MainPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entEvent<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里显示生命周期内容<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entEvent_Completed<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 MainPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tentEvent<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>Current <span class=\"token keyword\">as</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DisplayText<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">entEvent_Completed</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token punctuation\">(</span>Application<span class=\"token punctuation\">.</span>Current <span class=\"token keyword\">as</span> <span class=\"token class-name\">App</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>DisplayText <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sender <span class=\"token keyword\">as</span> <span class=\"token class-name\">Entry</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>调试界面：<blockquote>\n<p>无输入内容、APP 永久属性字典中不包含 displayText 或 displayText 无值时显示<br><img data-src=\"https://img-blog.csdnimg.cn/20200309121724339.png\"></p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>应用程序切换时 APP 永久属性字典包含 displayText 并 displayText 有值时显示<br><img data-src=\"https://img-blog.csdnimg.cn/20200309124017490.png\"></p>\n</blockquote>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite数据库","date":"2021-08-19T01:29:00.000Z","_content":"\n## 简介\n\n演示 SQLite 数据库访问与数据操作。\n\n1.  SQLite 类库引用。\n2.  操作类与数据模型。\n3.  数据操作。\n\n<!-- more -->\n\n## SQLite 类库引用\n\n1.  管理 NuGet 包。\n2.  搜索 sqlite-net-pcl。\n3.  安装推荐版本。\n\n## 操作类与数据模型\n\n1.  添加 Note.cs 到 Models 文件夹。\n2.  编辑 Note.cs：\n\n```csharp\nusing System;\nusing SQLite;\nnamespace AwesomeApp.Models\n{\n\tpublic class Note\n\t{\n\t\t[PrimaryKey, AutoIncrement]\n\t\tpublic int ID { get; set; }\n\t\tpublic string Name { get; set; }\n\t\tpublic string Text { get; set; }\n\t\tpublic DateTime Date { get; set; }\n\t\tpublic string DateString\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn Date.ToString();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n> - PrimaryKey 属性标签表示为主键\n> - AutoIncrement 属性标签表示为自增列\n>\n> 3.  添加 NoteDatabase.cs 到 Data 文件夹。\n> 4.  编辑 NoteDatabase.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing SQLite;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nnamespace AwesomeApp.Data\n{\n\tpublic class NoteDatabase\n\t{\n\t\tprivate readonly SQLiteAsyncConnection _database;\n\t\tpublic NoteDatabase(string dbPath)\n\t\t{\n\t\t\t_database = new SQLiteAsyncConnection(dbPath);\n\t\t\t_database.CreateTableAsync<Note>().Wait();\n\t\t}\n\t\t~NoteDatabase()\n\t\t{\n\t\t\t_database.CloseAsync();\n\t\t}\n\t\tpublic Task<List<Note>> GetNotesAsync()\n\t\t{\n\t\t\treturn _database.Table<Note>().ToListAsync();\n\t\t}\n\t\tpublic Task<Note> GetNoteAsync(int id)\n\t\t{\n\t\t\treturn _database.Table<Note>()\n\t\t\t\t\t\t\t.Where(i => i.ID == id)\n\t\t\t\t\t\t\t.FirstOrDefaultAsync();\n\t\t}\n\t\tpublic Task<int> SaveNoteAsync(Note note)\n\t\t{\n\t\t\tif (note.ID != 0)\n\t\t\t{\n\t\t\t\treturn _database.UpdateAsync(note);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn _database.InsertAsync(note);\n\t\t\t}\n\t\t}\n\t\tpublic Task<int> DeleteNoteAsync(Note note)\n\t\t{\n\t\t\treturn _database.DeleteAsync(note);\n\t\t}\n\t}\n}\n```\n\n5.  编辑 App.xaml.cs：\n\n```csharp\nstatic NoteDatabase database;\npublic static NoteDatabase Database\n{\n\tget\n\t{\n\t\tif (database == null)\n\t\t{\n\t\t\tdatabase = new NoteDatabase(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), \"Notes.db3\"));\n\t\t}\n\t\treturn database;\n\t}\n}\n……\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new NavigationPage(new NotesPage());\n}\n```\n\n## 数据操作\n\n1. 添加 NotesPage.xaml。\n2. 编辑 NotesPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n\t\t\t xmlns:local=\"clr-namespace:AwesomeApp;assembly=AwesomeApp\"\n             x:Class=\"AwesomeApp.NotesPage\"\n             Title=\"Notes\">\n\t<ContentPage.ToolbarItems>\n\t\t<ToolbarItem Text=\"新建\"\n\t\t\t\t\t Order=\"Primary\"\n                     Clicked=\"OnNoteAddedClicked\" />\n\t</ContentPage.ToolbarItems>\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"{StaticResource PageMargin}\">\n\t\t\t<Label x:Name=\"lblNull\"\n\t\t\t\t   Text=\"暂无数据\"\n\t\t\t\t   FontSize=\"32\"\n\t\t\t\t   TextColor=\"Black\"\n\t\t\t\t   HorizontalOptions=\"Center\"\n\t\t\t\t   IsVisible=\"False\" />\n\t\t\t<ListView x:Name=\"listView\"\n\t\t\t\t\t  RowHeight=\"64\"\n\t\t\t\t\t  IsPullToRefreshEnabled=\"True\"\n\t\t\t\t\t  Refreshing=\"listView_Refreshing\"\n\t\t\t\t\t  ItemSelected=\"OnListViewItemSelected\">\n\t\t\t\t<ListView.ItemTemplate>\n\t\t\t\t\t<DataTemplate>\n\t\t\t\t\t\t<ViewCell>\n\t\t\t\t\t\t\t<ViewCell.ContextActions>\n\t\t\t\t\t\t\t\t<MenuItem x:Name=\"delMenuItem\"\n\t\t\t\t\t\t\t\t\t\t  IconImageSource=\"{local:ImageResource Icons.delete.png}\"\n\t\t\t\t\t\t\t\t\t\t  Text=\"删除\"\n\t\t\t\t\t\t\t\t\t\t  CommandParameter=\"{Binding .}\"\n\t\t\t\t\t\t\t\t\t\t  Clicked=\"MenuItem_OnDel_Clicked\" />\n\t\t\t\t\t\t\t\t<MenuItem x:Name=\"moreMenuItem\"\n\t\t\t\t\t\t\t\t\t\t  IconImageSource=\"{local:ImageResource Icons.more.png}\"\n\t\t\t\t\t\t\t\t\t\t  Text=\"更多\"\n\t\t\t\t\t\t\t\t\t\t  CommandParameter=\"{Binding .}\"\n\t\t\t\t\t\t\t\t\t\t  Clicked=\"MenuItem_OnMore_Clicked\" />\n\t\t\t\t\t\t\t</ViewCell.ContextActions>\n\t\t\t\t\t\t\t<StackLayout Margin=\"6,4\">\n\t\t\t\t\t\t\t\t<Label Text=\"{Binding Name}\"\n\t\t\t\t\t\t\t\t\t   FontSize=\"20\"\n\t\t\t\t\t\t\t\t\t   TextColor=\"Black\" />\n\t\t\t\t\t\t\t\t<Label Text=\"{Binding DateString}\" />\n\t\t\t\t\t\t\t</StackLayout>\n\t\t\t\t\t\t</ViewCell>\n\t\t\t\t\t</DataTemplate>\n\t\t\t\t</ListView.ItemTemplate>\n\t\t\t</ListView>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> ImageResource 嵌入资源处理类 ImageResourceExtension：\n\n```csharp\n[ContentProperty(nameof(Source))]\npublic class ImageResourceExtension : IMarkupExtension\n{\n\tpublic string Source { get; set; }\n\n\tpublic object ProvideValue(IServiceProvider serviceProvider)\n\t{\n\t\tif (Source == null)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tvar type = typeof(ImageResourceExtension).GetTypeInfo().Assembly;\n\n\t\tImageSource imageSource = ImageSource.FromResource(type.GetName().Name + \".\" + Source, type);\n\n\t\treturn imageSource;\n\t}\n}\n```\n\n3. 编辑 NotesPage.xaml.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Xamarin.Forms;\n\nnamespace AwesomeApp\n{\n\tpublic partial class NotesPage : ContentPage\n\t{\n\t\tpublic NotesPage()\n\t\t{\n\t\t\tInitializeComponent();\n\t\t}\n\n\t\tprotected override async void OnAppearing()\n\t\t{\n\t\t\tbase.OnAppearing();\n\n\t\t\tawait bindListItems();\n\t\t}\n\n\t\tprivate async Task bindListItems()\n\t\t{\n\t\t\tList<Note> notes = await App.Database.GetNotesAsync();\n\t\t\tif (notes.Count == 0)\n\t\t\t{\n\t\t\t\tlblNull.IsVisible = true;\n\t\t\t\tlistView.IsVisible = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlblNull.IsVisible = false;\n\t\t\t\tlistView.IsVisible = true;\n\t\t\t\tlistView.ItemsSource = notes.Count == 0 ? null : notes;\n\t\t\t}\n\t\t}\n\n\t\tprivate async void OnNoteAddedClicked(object sender, EventArgs e)\n\t\t{\n\t\t\tawait Navigation.PushAsync(new NoteEntryPage\n\t\t\t{\n\t\t\t\tBindingContext = new Note()\n\t\t\t});\n\t\t}\n\n\t\tprivate async void OnListViewItemSelected(object sender, SelectedItemChangedEventArgs e)\n\t\t{\n\t\t\tif (e.SelectedItem != null)\n\t\t\t{\n\t\t\t\tawait Navigation.PushAsync(new NoteEntryPage\n\t\t\t\t{\n\t\t\t\t\tBindingContext = e.SelectedItem as Note\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate async void MenuItem_OnMore_Clicked(object sender, EventArgs e)\n\t\t{\n\t\t\tMenuItem menu = sender as MenuItem;\n\t\t\tif ((Note)menu.CommandParameter != null)\n\t\t\t{\n\t\t\t\tawait Navigation.PushAsync(new NoteEntryPage\n\t\t\t\t{\n\t\t\t\t\tBindingContext = (Note)menu.CommandParameter as Note\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate async void MenuItem_OnDel_Clicked(object sender, EventArgs e)\n\t\t{\n\t\t\tMenuItem menu = sender as MenuItem;\n\t\t\tif (true == await DisplayAlert(\"要删除 \" + ((Note)menu.CommandParameter).Name + \" 这条数据吗？\", null, \"删除\", \"取消\"))\n\t\t\t{\n\t\t\t\tawait App.Database.DeleteNoteAsync((Note)menu.CommandParameter);\n\t\t\t\tlistView.BeginRefresh();\n\t\t\t}\n\t\t}\n\n\t\tprivate async void listView_Refreshing(object sender, EventArgs e)\n\t\t{\n\t\t\tawait bindListItems();\n\t\t\tlistView.EndRefresh();\n\t\t}\n\t}\n}\n```\n\n4. 添加 NoteEntryPage.xaml。\n5. 编辑 NoteEntryPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             x:Class=\"AwesomeApp.NoteEntryPage\"\n             Title=\"Note Entry\">\n\t<ContentPage.Resources>\n\t\t<Style TargetType=\"{x:Type Editor}\">\n\t\t\t<Setter Property=\"BackgroundColor\"\n                    Value=\"{StaticResource AppBackgroundColor}\" />\n\t\t</Style>\n\n\t\t<Style TargetType=\"Button\"\n               ApplyToDerivedTypes=\"True\"\n               CanCascade=\"True\">\n\t\t\t<Setter Property=\"FontSize\" Value=\"Medium\" />\n\t\t\t<Setter Property=\"BackgroundColor\" Value=\"#2196F3\" />\n\t\t\t<Setter Property=\"TextColor\" Value=\"White\" />\n\t\t\t<Setter Property=\"CornerRadius\" Value=\"5\" />\n\t\t</Style>\n\t</ContentPage.Resources>\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"{StaticResource PageMargin}\">\n\t\t\t<Label Text=\"{Binding Data}\" />\n\t\t\t<Entry x:Name=\"entName\"\n\t\t\t\t   Placeholder=\"文件名\"\n\t\t\t\t   Text=\"{Binding Name}\" />\n\t\t\t<Editor x:Name=\"ediTtext\"\n\t\t\t\t\tPlaceholder=\"内容\"\n\t\t\t\t\tAutoSize=\"TextChanges\"\n\t\t\t\t\tMaxLength=\"200\"\n\t\t\t\t\tText=\"{Binding Text}\" />\n\t\t\t<Grid>\n\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t<Button Text=\"保存\"\n\t\t\t\t\t\tClicked=\"OnSaveButtonClicked\" />\n\t\t\t\t<Button Grid.Column=\"1\"\n\t\t\t\t\t    Text=\"取消\"\n\t\t\t\t\t    Clicked=\"OnCancelButtonClicked\"/>\n\t\t\t</Grid>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n6. 编辑 NoteEntryPage.xaml.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing System;\nusing System.IO;\nusing System.Reflection;\nusing Xamarin.Forms;\n\nnamespace AwesomeApp\n{\n\tpublic partial class NoteEntryPage : ContentPage\n\t{\n\t\tpublic NoteEntryPage()\n\t\t{\n\t\t\tInitializeComponent();\n\t\t}\n\n\t\tasync void OnSaveButtonClicked(object sender, EventArgs e)\n\t\t{\n\t\t\tvar note = (Note)BindingContext;\n\t\t\tnote.Date = DateTime.UtcNow;\n\n\t\t\tawait App.Database.SaveNoteAsync(note);\n\n\t\t\tawait Navigation.PopAsync();\n\t\t}\n\n\t\tasync void OnCancelButtonClicked(object sender, EventArgs e)\n\t\t{\n\t\t\tawait Navigation.PopAsync();\n\t\t}\n\t}\n}\n```\n\n7. 调试界面：\n   ![](https://img-blog.csdnimg.cn/20200309171537312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171553783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171638665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171656902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171711780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/11_Sqlite.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite数据库\ndate: 2021-08-19 09:29:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示 SQLite 数据库访问与数据操作。\n\n1.  SQLite 类库引用。\n2.  操作类与数据模型。\n3.  数据操作。\n\n<!-- more -->\n\n## SQLite 类库引用\n\n1.  管理 NuGet 包。\n2.  搜索 sqlite-net-pcl。\n3.  安装推荐版本。\n\n## 操作类与数据模型\n\n1.  添加 Note.cs 到 Models 文件夹。\n2.  编辑 Note.cs：\n\n```csharp\nusing System;\nusing SQLite;\nnamespace AwesomeApp.Models\n{\n\tpublic class Note\n\t{\n\t\t[PrimaryKey, AutoIncrement]\n\t\tpublic int ID { get; set; }\n\t\tpublic string Name { get; set; }\n\t\tpublic string Text { get; set; }\n\t\tpublic DateTime Date { get; set; }\n\t\tpublic string DateString\n\t\t{\n\t\t\tget\n\t\t\t{\n\t\t\t\treturn Date.ToString();\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n> - PrimaryKey 属性标签表示为主键\n> - AutoIncrement 属性标签表示为自增列\n>\n> 3.  添加 NoteDatabase.cs 到 Data 文件夹。\n> 4.  编辑 NoteDatabase.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing SQLite;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nnamespace AwesomeApp.Data\n{\n\tpublic class NoteDatabase\n\t{\n\t\tprivate readonly SQLiteAsyncConnection _database;\n\t\tpublic NoteDatabase(string dbPath)\n\t\t{\n\t\t\t_database = new SQLiteAsyncConnection(dbPath);\n\t\t\t_database.CreateTableAsync<Note>().Wait();\n\t\t}\n\t\t~NoteDatabase()\n\t\t{\n\t\t\t_database.CloseAsync();\n\t\t}\n\t\tpublic Task<List<Note>> GetNotesAsync()\n\t\t{\n\t\t\treturn _database.Table<Note>().ToListAsync();\n\t\t}\n\t\tpublic Task<Note> GetNoteAsync(int id)\n\t\t{\n\t\t\treturn _database.Table<Note>()\n\t\t\t\t\t\t\t.Where(i => i.ID == id)\n\t\t\t\t\t\t\t.FirstOrDefaultAsync();\n\t\t}\n\t\tpublic Task<int> SaveNoteAsync(Note note)\n\t\t{\n\t\t\tif (note.ID != 0)\n\t\t\t{\n\t\t\t\treturn _database.UpdateAsync(note);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn _database.InsertAsync(note);\n\t\t\t}\n\t\t}\n\t\tpublic Task<int> DeleteNoteAsync(Note note)\n\t\t{\n\t\t\treturn _database.DeleteAsync(note);\n\t\t}\n\t}\n}\n```\n\n5.  编辑 App.xaml.cs：\n\n```csharp\nstatic NoteDatabase database;\npublic static NoteDatabase Database\n{\n\tget\n\t{\n\t\tif (database == null)\n\t\t{\n\t\t\tdatabase = new NoteDatabase(Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData), \"Notes.db3\"));\n\t\t}\n\t\treturn database;\n\t}\n}\n……\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new NavigationPage(new NotesPage());\n}\n```\n\n## 数据操作\n\n1. 添加 NotesPage.xaml。\n2. 编辑 NotesPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n\t\t\t xmlns:local=\"clr-namespace:AwesomeApp;assembly=AwesomeApp\"\n             x:Class=\"AwesomeApp.NotesPage\"\n             Title=\"Notes\">\n\t<ContentPage.ToolbarItems>\n\t\t<ToolbarItem Text=\"新建\"\n\t\t\t\t\t Order=\"Primary\"\n                     Clicked=\"OnNoteAddedClicked\" />\n\t</ContentPage.ToolbarItems>\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"{StaticResource PageMargin}\">\n\t\t\t<Label x:Name=\"lblNull\"\n\t\t\t\t   Text=\"暂无数据\"\n\t\t\t\t   FontSize=\"32\"\n\t\t\t\t   TextColor=\"Black\"\n\t\t\t\t   HorizontalOptions=\"Center\"\n\t\t\t\t   IsVisible=\"False\" />\n\t\t\t<ListView x:Name=\"listView\"\n\t\t\t\t\t  RowHeight=\"64\"\n\t\t\t\t\t  IsPullToRefreshEnabled=\"True\"\n\t\t\t\t\t  Refreshing=\"listView_Refreshing\"\n\t\t\t\t\t  ItemSelected=\"OnListViewItemSelected\">\n\t\t\t\t<ListView.ItemTemplate>\n\t\t\t\t\t<DataTemplate>\n\t\t\t\t\t\t<ViewCell>\n\t\t\t\t\t\t\t<ViewCell.ContextActions>\n\t\t\t\t\t\t\t\t<MenuItem x:Name=\"delMenuItem\"\n\t\t\t\t\t\t\t\t\t\t  IconImageSource=\"{local:ImageResource Icons.delete.png}\"\n\t\t\t\t\t\t\t\t\t\t  Text=\"删除\"\n\t\t\t\t\t\t\t\t\t\t  CommandParameter=\"{Binding .}\"\n\t\t\t\t\t\t\t\t\t\t  Clicked=\"MenuItem_OnDel_Clicked\" />\n\t\t\t\t\t\t\t\t<MenuItem x:Name=\"moreMenuItem\"\n\t\t\t\t\t\t\t\t\t\t  IconImageSource=\"{local:ImageResource Icons.more.png}\"\n\t\t\t\t\t\t\t\t\t\t  Text=\"更多\"\n\t\t\t\t\t\t\t\t\t\t  CommandParameter=\"{Binding .}\"\n\t\t\t\t\t\t\t\t\t\t  Clicked=\"MenuItem_OnMore_Clicked\" />\n\t\t\t\t\t\t\t</ViewCell.ContextActions>\n\t\t\t\t\t\t\t<StackLayout Margin=\"6,4\">\n\t\t\t\t\t\t\t\t<Label Text=\"{Binding Name}\"\n\t\t\t\t\t\t\t\t\t   FontSize=\"20\"\n\t\t\t\t\t\t\t\t\t   TextColor=\"Black\" />\n\t\t\t\t\t\t\t\t<Label Text=\"{Binding DateString}\" />\n\t\t\t\t\t\t\t</StackLayout>\n\t\t\t\t\t\t</ViewCell>\n\t\t\t\t\t</DataTemplate>\n\t\t\t\t</ListView.ItemTemplate>\n\t\t\t</ListView>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> ImageResource 嵌入资源处理类 ImageResourceExtension：\n\n```csharp\n[ContentProperty(nameof(Source))]\npublic class ImageResourceExtension : IMarkupExtension\n{\n\tpublic string Source { get; set; }\n\n\tpublic object ProvideValue(IServiceProvider serviceProvider)\n\t{\n\t\tif (Source == null)\n\t\t{\n\t\t\treturn null;\n\t\t}\n\n\t\tvar type = typeof(ImageResourceExtension).GetTypeInfo().Assembly;\n\n\t\tImageSource imageSource = ImageSource.FromResource(type.GetName().Name + \".\" + Source, type);\n\n\t\treturn imageSource;\n\t}\n}\n```\n\n3. 编辑 NotesPage.xaml.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing System;\nusing System.Collections.Generic;\nusing System.Threading.Tasks;\nusing Xamarin.Forms;\n\nnamespace AwesomeApp\n{\n\tpublic partial class NotesPage : ContentPage\n\t{\n\t\tpublic NotesPage()\n\t\t{\n\t\t\tInitializeComponent();\n\t\t}\n\n\t\tprotected override async void OnAppearing()\n\t\t{\n\t\t\tbase.OnAppearing();\n\n\t\t\tawait bindListItems();\n\t\t}\n\n\t\tprivate async Task bindListItems()\n\t\t{\n\t\t\tList<Note> notes = await App.Database.GetNotesAsync();\n\t\t\tif (notes.Count == 0)\n\t\t\t{\n\t\t\t\tlblNull.IsVisible = true;\n\t\t\t\tlistView.IsVisible = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tlblNull.IsVisible = false;\n\t\t\t\tlistView.IsVisible = true;\n\t\t\t\tlistView.ItemsSource = notes.Count == 0 ? null : notes;\n\t\t\t}\n\t\t}\n\n\t\tprivate async void OnNoteAddedClicked(object sender, EventArgs e)\n\t\t{\n\t\t\tawait Navigation.PushAsync(new NoteEntryPage\n\t\t\t{\n\t\t\t\tBindingContext = new Note()\n\t\t\t});\n\t\t}\n\n\t\tprivate async void OnListViewItemSelected(object sender, SelectedItemChangedEventArgs e)\n\t\t{\n\t\t\tif (e.SelectedItem != null)\n\t\t\t{\n\t\t\t\tawait Navigation.PushAsync(new NoteEntryPage\n\t\t\t\t{\n\t\t\t\t\tBindingContext = e.SelectedItem as Note\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate async void MenuItem_OnMore_Clicked(object sender, EventArgs e)\n\t\t{\n\t\t\tMenuItem menu = sender as MenuItem;\n\t\t\tif ((Note)menu.CommandParameter != null)\n\t\t\t{\n\t\t\t\tawait Navigation.PushAsync(new NoteEntryPage\n\t\t\t\t{\n\t\t\t\t\tBindingContext = (Note)menu.CommandParameter as Note\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tprivate async void MenuItem_OnDel_Clicked(object sender, EventArgs e)\n\t\t{\n\t\t\tMenuItem menu = sender as MenuItem;\n\t\t\tif (true == await DisplayAlert(\"要删除 \" + ((Note)menu.CommandParameter).Name + \" 这条数据吗？\", null, \"删除\", \"取消\"))\n\t\t\t{\n\t\t\t\tawait App.Database.DeleteNoteAsync((Note)menu.CommandParameter);\n\t\t\t\tlistView.BeginRefresh();\n\t\t\t}\n\t\t}\n\n\t\tprivate async void listView_Refreshing(object sender, EventArgs e)\n\t\t{\n\t\t\tawait bindListItems();\n\t\t\tlistView.EndRefresh();\n\t\t}\n\t}\n}\n```\n\n4. 添加 NoteEntryPage.xaml。\n5. 编辑 NoteEntryPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             x:Class=\"AwesomeApp.NoteEntryPage\"\n             Title=\"Note Entry\">\n\t<ContentPage.Resources>\n\t\t<Style TargetType=\"{x:Type Editor}\">\n\t\t\t<Setter Property=\"BackgroundColor\"\n                    Value=\"{StaticResource AppBackgroundColor}\" />\n\t\t</Style>\n\n\t\t<Style TargetType=\"Button\"\n               ApplyToDerivedTypes=\"True\"\n               CanCascade=\"True\">\n\t\t\t<Setter Property=\"FontSize\" Value=\"Medium\" />\n\t\t\t<Setter Property=\"BackgroundColor\" Value=\"#2196F3\" />\n\t\t\t<Setter Property=\"TextColor\" Value=\"White\" />\n\t\t\t<Setter Property=\"CornerRadius\" Value=\"5\" />\n\t\t</Style>\n\t</ContentPage.Resources>\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"{StaticResource PageMargin}\">\n\t\t\t<Label Text=\"{Binding Data}\" />\n\t\t\t<Entry x:Name=\"entName\"\n\t\t\t\t   Placeholder=\"文件名\"\n\t\t\t\t   Text=\"{Binding Name}\" />\n\t\t\t<Editor x:Name=\"ediTtext\"\n\t\t\t\t\tPlaceholder=\"内容\"\n\t\t\t\t\tAutoSize=\"TextChanges\"\n\t\t\t\t\tMaxLength=\"200\"\n\t\t\t\t\tText=\"{Binding Text}\" />\n\t\t\t<Grid>\n\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t<Button Text=\"保存\"\n\t\t\t\t\t\tClicked=\"OnSaveButtonClicked\" />\n\t\t\t\t<Button Grid.Column=\"1\"\n\t\t\t\t\t    Text=\"取消\"\n\t\t\t\t\t    Clicked=\"OnCancelButtonClicked\"/>\n\t\t\t</Grid>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n6. 编辑 NoteEntryPage.xaml.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing System;\nusing System.IO;\nusing System.Reflection;\nusing Xamarin.Forms;\n\nnamespace AwesomeApp\n{\n\tpublic partial class NoteEntryPage : ContentPage\n\t{\n\t\tpublic NoteEntryPage()\n\t\t{\n\t\t\tInitializeComponent();\n\t\t}\n\n\t\tasync void OnSaveButtonClicked(object sender, EventArgs e)\n\t\t{\n\t\t\tvar note = (Note)BindingContext;\n\t\t\tnote.Date = DateTime.UtcNow;\n\n\t\t\tawait App.Database.SaveNoteAsync(note);\n\n\t\t\tawait Navigation.PopAsync();\n\t\t}\n\n\t\tasync void OnCancelButtonClicked(object sender, EventArgs e)\n\t\t{\n\t\t\tawait Navigation.PopAsync();\n\t\t}\n\t}\n}\n```\n\n7. 调试界面：\n   ![](https://img-blog.csdnimg.cn/20200309171537312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171553783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171638665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171656902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200309171711780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/11_Sqlite","published":1,"updated":"2022-07-01T07:50:20.943Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8xz001z4d0h1lcu5kn2","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示 SQLite 数据库访问与数据操作。</p>\n<ol>\n<li>SQLite 类库引用。</li>\n<li>操作类与数据模型。</li>\n<li>数据操作。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"SQLite-类库引用\"><a href=\"#SQLite-类库引用\" class=\"headerlink\" title=\"SQLite 类库引用\"></a>SQLite 类库引用</h2><ol>\n<li>管理 NuGet 包。</li>\n<li>搜索 sqlite-net-pcl。</li>\n<li>安装推荐版本。</li>\n</ol>\n<h2 id=\"操作类与数据模型\"><a href=\"#操作类与数据模型\" class=\"headerlink\" title=\"操作类与数据模型\"></a>操作类与数据模型</h2><ol>\n<li>添加 Note.cs 到 Models 文件夹。</li>\n<li>编辑 Note.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">SQLite</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Note</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PrimaryKey</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">AutoIncrement</span></span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> ID <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Text <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> Date <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DateString\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">get</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>PrimaryKey 属性标签表示为主键</li>\n<li>AutoIncrement 属性标签表示为自增列</li>\n</ul>\n<ol start=\"3\">\n<li>添加 NoteDatabase.cs 到 Data 文件夹。</li>\n<li>编辑 NoteDatabase.cs：</li>\n</ol>\n</blockquote>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">SQLite</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Data</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteDatabase</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">SQLiteAsyncConnection</span> _database<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">NoteDatabase</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> dbPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t_database <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SQLiteAsyncConnection</span><span class=\"token punctuation\">(</span>dbPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t_database<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateTableAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token operator\">~</span><span class=\"token function\">NoteDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t_database<span class=\"token punctuation\">.</span><span class=\"token function\">CloseAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">GetNotesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Table</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToListAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Table</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=></span> i<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefaultAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">SaveNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Note</span> note<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token function\">InsertAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">DeleteNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Note</span> note<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token class-name\">NoteDatabase</span> database<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">NoteDatabase</span> Database\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">get</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>database <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tdatabase <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteDatabase</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>Environment<span class=\"token punctuation\">.</span><span class=\"token function\">GetFolderPath</span><span class=\"token punctuation\">(</span>Environment<span class=\"token punctuation\">.</span>SpecialFolder<span class=\"token punctuation\">.</span>LocalApplicationData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Notes.db3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">return</span> database<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n……\n<span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NavigationPage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NotesPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据操作\"><a href=\"#数据操作\" class=\"headerlink\" title=\"数据操作\"></a>数据操作</h2><ol>\n<li>添加 NotesPage.xaml。</li>\n<li>编辑 NotesPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n\t\t\t <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>local</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clr-namespace:AwesomeApp;assembly=AwesomeApp<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.NotesPage<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Notes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.ToolbarItems</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ToolbarItem</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>新建<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t <span class=\"token attr-name\">Order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Primary<span class=\"token punctuation\">\"</span></span>\n                     <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnNoteAddedClicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.ToolbarItems</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;StaticResource PageMargin&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblNull<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>暂无数据<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>32<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">IsVisible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>False<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listView<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">RowHeight</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>64<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">IsPullToRefreshEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">Refreshing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listView_Refreshing<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">ItemSelected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnListViewItemSelected<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell.ContextActions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>delMenuItem<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">IconImageSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;local:ImageResource Icons.delete.png&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>删除<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">CommandParameter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding .&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MenuItem_OnDel_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>moreMenuItem<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">IconImageSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;local:ImageResource Icons.more.png&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>更多<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">CommandParameter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding .&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MenuItem_OnMore_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell.ContextActions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6,4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Name&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t   <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding DateString&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>ImageResource 嵌入资源处理类 ImageResourceExtension：</p>\n</blockquote>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ContentProperty</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>Source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ImageResourceExtension</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IMarkupExtension</span></span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Source <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">object</span></span> <span class=\"token function\">ProvideValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceProvider</span> serviceProvider<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Source <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">ImageResourceExtension</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Assembly<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ImageSource</span> imageSource <span class=\"token operator\">=</span> ImageSource<span class=\"token punctuation\">.</span><span class=\"token function\">FromResource</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> Source<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> imageSource<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 NotesPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NotesPage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ContentPage</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">NotesPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">await</span> <span class=\"token function\">bindListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">bindListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> App<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">GetNotesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tlblNull<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tlblNull<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span>ItemsSource <span class=\"token operator\">=</span> notes<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> notes<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNoteAddedClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PushAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteEntryPage</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tBindingContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnListViewItemSelected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectedItemChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PushAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteEntryPage</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tBindingContext <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token keyword\">as</span> <span class=\"token class-name\">Note</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MenuItem_OnMore_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">MenuItem</span> menu <span class=\"token operator\">=</span> sender <span class=\"token keyword\">as</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PushAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteEntryPage</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tBindingContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter <span class=\"token keyword\">as</span> <span class=\"token class-name\">Note</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MenuItem_OnDel_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">MenuItem</span> menu <span class=\"token operator\">=</span> sender <span class=\"token keyword\">as</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">await</span> <span class=\"token function\">DisplayAlert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"要删除 \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">\" 这条数据吗？\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">await</span> App<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span><span class=\"token function\">BeginRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">listView_Refreshing</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">await</span> <span class=\"token function\">bindListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlistView<span class=\"token punctuation\">.</span><span class=\"token function\">EndRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>添加 NoteEntryPage.xaml。</li>\n<li>编辑 NoteEntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.NoteEntryPage<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Note Entry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;x:Type Editor&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"BackgroundColor\"</span>\n                    Value=<span class=\"token string\">\"&#123;StaticResource AppBackgroundColor&#125;\"</span> />\n\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">ApplyToDerivedTypes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">CanCascade</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"FontSize\"</span> Value=<span class=\"token string\">\"Medium\"</span> />\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"BackgroundColor\"</span> Value=<span class=\"token string\">\"#2196F3\"</span> />\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"TextColor\"</span> Value=<span class=\"token string\">\"White\"</span> />\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"CornerRadius\"</span> Value=<span class=\"token string\">\"5\"</span> />\n\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;StaticResource PageMargin&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Data&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entName<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>文件名<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Name&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ediTtext<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>内容<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">AutoSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextChanges<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">MaxLength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Text&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>保存<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnSaveButtonClicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t    <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>取消<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t    <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnCancelButtonClicked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"6\">\n<li>编辑 NoteEntryPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Reflection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteEntryPage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ContentPage</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">NoteEntryPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSaveButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> note <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>BindingContext<span class=\"token punctuation\">;</span>\n\t\t\tnote<span class=\"token punctuation\">.</span>Date <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span>UtcNow<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">await</span> App<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">SaveNoteAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PopAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCancelButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PopAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"7\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200309171537312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171553783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171638665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171656902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171711780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示 SQLite 数据库访问与数据操作。</p>\n<ol>\n<li>SQLite 类库引用。</li>\n<li>操作类与数据模型。</li>\n<li>数据操作。</li>\n</ol>","more":"<h2 id=\"SQLite-类库引用\"><a href=\"#SQLite-类库引用\" class=\"headerlink\" title=\"SQLite 类库引用\"></a>SQLite 类库引用</h2><ol>\n<li>管理 NuGet 包。</li>\n<li>搜索 sqlite-net-pcl。</li>\n<li>安装推荐版本。</li>\n</ol>\n<h2 id=\"操作类与数据模型\"><a href=\"#操作类与数据模型\" class=\"headerlink\" title=\"操作类与数据模型\"></a>操作类与数据模型</h2><ol>\n<li>添加 Note.cs 到 Models 文件夹。</li>\n<li>编辑 Note.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">SQLite</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Note</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">PrimaryKey</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">AutoIncrement</span></span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> ID <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Name <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Text <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DateTime</span> Date <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> DateString\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">get</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>PrimaryKey 属性标签表示为主键</li>\n<li>AutoIncrement 属性标签表示为自增列</li>\n</ul>\n<ol start=\"3\">\n<li>添加 NoteDatabase.cs 到 Data 文件夹。</li>\n<li>编辑 NoteDatabase.cs：</li>\n</ol>\n</blockquote>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">SQLite</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Data</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteDatabase</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">SQLiteAsyncConnection</span> _database<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">NoteDatabase</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> dbPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t_database <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">SQLiteAsyncConnection</span><span class=\"token punctuation\">(</span>dbPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t_database<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">CreateTableAsync</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token operator\">~</span><span class=\"token function\">NoteDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t_database<span class=\"token punctuation\">.</span><span class=\"token function\">CloseAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>List<span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token function\">GetNotesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Table</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ToListAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> id<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">Table</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">Where</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=></span> i<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">==</span> id<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">FirstOrDefaultAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">SaveNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Note</span> note<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">.</span>ID <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token function\">UpdateAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token function\">InsertAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">DeleteNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Note</span> note<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> _database<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">static</span> <span class=\"token class-name\">NoteDatabase</span> database<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\">NoteDatabase</span> Database\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">get</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>database <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tdatabase <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteDatabase</span><span class=\"token punctuation\">(</span>Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>Environment<span class=\"token punctuation\">.</span><span class=\"token function\">GetFolderPath</span><span class=\"token punctuation\">(</span>Environment<span class=\"token punctuation\">.</span>SpecialFolder<span class=\"token punctuation\">.</span>LocalApplicationData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Notes.db3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token keyword\">return</span> database<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n……\n<span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NavigationPage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NotesPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"数据操作\"><a href=\"#数据操作\" class=\"headerlink\" title=\"数据操作\"></a>数据操作</h2><ol>\n<li>添加 NotesPage.xaml。</li>\n<li>编辑 NotesPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n\t\t\t <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>local</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clr-namespace:AwesomeApp;assembly=AwesomeApp<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.NotesPage<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Notes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.ToolbarItems</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ToolbarItem</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>新建<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t <span class=\"token attr-name\">Order</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Primary<span class=\"token punctuation\">\"</span></span>\n                     <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnNoteAddedClicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.ToolbarItems</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;StaticResource PageMargin&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblNull<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>暂无数据<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>32<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">IsVisible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>False<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listView<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">RowHeight</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>64<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">IsPullToRefreshEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">Refreshing</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>listView_Refreshing<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">ItemSelected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnListViewItemSelected<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell.ContextActions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>delMenuItem<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">IconImageSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;local:ImageResource Icons.delete.png&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>删除<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">CommandParameter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding .&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MenuItem_OnDel_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>MenuItem</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>moreMenuItem<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">IconImageSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;local:ImageResource Icons.more.png&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>更多<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">CommandParameter</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding .&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MenuItem_OnMore_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell.ContextActions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>6,4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Name&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t   <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding DateString&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>ImageResource 嵌入资源处理类 ImageResourceExtension：</p>\n</blockquote>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ContentProperty</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">nameof</span><span class=\"token punctuation\">(</span>Source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ImageResourceExtension</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IMarkupExtension</span></span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Source <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">object</span></span> <span class=\"token function\">ProvideValue</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IServiceProvider</span> serviceProvider<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Source <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> type <span class=\"token operator\">=</span> <span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">ImageResourceExtension</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">GetTypeInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Assembly<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token class-name\">ImageSource</span> imageSource <span class=\"token operator\">=</span> ImageSource<span class=\"token punctuation\">.</span><span class=\"token function\">FromResource</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">.</span><span class=\"token function\">GetName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> Source<span class=\"token punctuation\">,</span> type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> imageSource<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 NotesPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NotesPage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ContentPage</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">NotesPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">await</span> <span class=\"token function\">bindListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">bindListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>Note<span class=\"token punctuation\">></span></span> notes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> App<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">GetNotesAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>notes<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tlblNull<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tlblNull<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span>IsVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span>ItemsSource <span class=\"token operator\">=</span> notes<span class=\"token punctuation\">.</span>Count <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">?</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">:</span> notes<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnNoteAddedClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PushAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteEntryPage</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tBindingContext <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Note</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnListViewItemSelected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectedItemChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PushAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteEntryPage</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tBindingContext <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token keyword\">as</span> <span class=\"token class-name\">Note</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MenuItem_OnMore_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">MenuItem</span> menu <span class=\"token operator\">=</span> sender <span class=\"token keyword\">as</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PushAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">NoteEntryPage</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\tBindingContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter <span class=\"token keyword\">as</span> <span class=\"token class-name\">Note</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MenuItem_OnDel_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">MenuItem</span> menu <span class=\"token operator\">=</span> sender <span class=\"token keyword\">as</span> <span class=\"token class-name\">MenuItem</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">await</span> <span class=\"token function\">DisplayAlert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"要删除 \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Name <span class=\"token operator\">+</span> <span class=\"token string\">\" 这条数据吗？\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"删除\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">await</span> App<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">DeleteNoteAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>menu<span class=\"token punctuation\">.</span>CommandParameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tlistView<span class=\"token punctuation\">.</span><span class=\"token function\">BeginRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">listView_Refreshing</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">await</span> <span class=\"token function\">bindListItems</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlistView<span class=\"token punctuation\">.</span><span class=\"token function\">EndRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>添加 NoteEntryPage.xaml。</li>\n<li>编辑 NoteEntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.NoteEntryPage<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\">Title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Note Entry<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;x:Type Editor&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"BackgroundColor\"</span>\n                    Value=<span class=\"token string\">\"&#123;StaticResource AppBackgroundColor&#125;\"</span> />\n\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">ApplyToDerivedTypes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">CanCascade</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"FontSize\"</span> Value=<span class=\"token string\">\"Medium\"</span> />\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"BackgroundColor\"</span> Value=<span class=\"token string\">\"#2196F3\"</span> />\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"TextColor\"</span> Value=<span class=\"token string\">\"White\"</span> />\n\t\t\t&lt;Setter Property=<span class=\"token string\">\"CornerRadius\"</span> Value=<span class=\"token string\">\"5\"</span> />\n\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;StaticResource PageMargin&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Data&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>entName<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>文件名<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Name&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ediTtext<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>内容<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">AutoSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextChanges<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">MaxLength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Text&#125;<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>保存<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnSaveButtonClicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t    <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>取消<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t    <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnCancelButtonClicked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"6\">\n<li>编辑 NoteEntryPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>IO</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Reflection</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">NoteEntryPage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ContentPage</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">NoteEntryPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSaveButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> note <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Note<span class=\"token punctuation\">)</span>BindingContext<span class=\"token punctuation\">;</span>\n\t\t\tnote<span class=\"token punctuation\">.</span>Date <span class=\"token operator\">=</span> DateTime<span class=\"token punctuation\">.</span>UtcNow<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">await</span> App<span class=\"token punctuation\">.</span>Database<span class=\"token punctuation\">.</span><span class=\"token function\">SaveNoteAsync</span><span class=\"token punctuation\">(</span>note<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PopAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnCancelButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">await</span> Navigation<span class=\"token punctuation\">.</span><span class=\"token function\">PopAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"7\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200309171537312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171553783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171638665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171656902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200309171711780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问URL数据","date":"2021-08-19T01:30:00.000Z","_content":"\n## 简介\n\n演示如何访问并将使用网络数据。\n\n1.  添加 Newtonsoft.Json。\n2.  创建访问业务。\n3.  使用访问数据。\n\n<!-- more -->\n\n## Newtonsoft.Json 类库引用\n\n1.  管理 NuGet 包。\n2.  搜索 Newtonsoft.Json。\n3.  安装推荐版本。\n\n## 创建访问业务\n\n1.  添加 TianQiModel.cs 到 Models 文件夹。\n2.  编辑 TianQiModel.cs：\n\n```csharp\nusing Newtonsoft.Json;\nusing System;\n\nnamespace AwesomeApp.Models\n{\n\t/// <summary>\n\t/// 天气数据模型\n\t/// </summary>\n\tpublic class TianQiModel\n\t{\n\t\t/// <summary>\n\t\t/// 城市ID\n\t\t/// </summary>\n\t\t[JsonProperty(\"cityid\")]\n\t\tpublic string CityID { get; set; }\n\n\t\t/// <summary>\n\t\t/// 城市名称\n\t\t/// </summary>\n\t\t[JsonProperty(\"city\")]\n\t\tpublic string City { get; set; }\n\n\t\t……\n\n\t\t/// <summary>\n\t\t/// 警报\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm\")]\n\t\tpublic AlarmModel Alarm { get; set; }\n\t}\n\n\t/// <summary>\n\t/// 警报数据模型\n\t/// </summary>\n\tpublic class AlarmModel\n\t{\n\t\t/// <summary>\n\t\t/// 类型\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm_type\")]\n\t\tpublic string Type { get; set; }\n\n\t\t/// <summary>\n\t\t/// 等级\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm_level\")]\n\t\tpublic string Level { get; set; }\n\n\t\t/// <summary>\n\t\t/// 内容\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm_content\")]\n\t\tpublic string Content { get; set; }\n\t}\n}\n```\n\n> - JsonProperty 属性标签表示 JSON 数据名称\n\n3.  添加 TianQiAPI.cs 到 APIs 文件夹。\n4.  编辑 TianQiAPI.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing Newtonsoft.Json;\nusing System;\nusing System.Diagnostics;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nnamespace AwesomeApp.APIs\n{\n\tpublic class TianQiAPI\n\t{\n\t\tprivate const string _api_url = \"https://www.tianqiapi.com/api\";\n\t\tprivate const string _api_version = \"v6\";\n\t\tprivate const string _api_appid = \"YOUR_APPID\";\n\t\tprivate const string _api_appsecret = \"YOUR_SECRET\";\n\t\tprivate readonly HttpClient _client;\n\n\t\tpublic TianQiAPI()\n\t\t{\n\t\t\t_client = new HttpClient();\n\t\t}\n\n\t\tpublic async Task<TianQiModel> GetWeatherDataAsync()\n\t\t{\n\t\t\tTianQiModel tianQiData = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tusing (HttpResponseMessage response = await _client.GetAsync(string.Format(\n\t\t\t\t\t\"{0}?version={1}&appid={2}&appsecret={3}\",\n\t\t\t\t\t_api_url, _api_version, _api_appid, _api_appsecret)))\n\t\t\t\t{\n\t\t\t\t\tif (response.IsSuccessStatusCode)\n\t\t\t\t\t{\n\t\t\t\t\t\tstring content = await response.Content.ReadAsStringAsync();\n\t\t\t\t\t\ttianQiData = JsonConvert.DeserializeObject<TianQiModel>(content);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tDebug.WriteLine(\"\\tERROR {0}\", response.Content);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tDebug.WriteLine(\"\\tERROR {0}\", ex.Message);\n\t\t\t}\n\n\t\t\treturn tianQiData;\n\t\t}\n\t}\n}\n```\n\n> APPID 与 SECRET 到 [https://www.tianqiapi.com](https://www.tianqiapi.com) 申请\n\n## 使用访问数据\n\n1. 添加 TitleAndTextCell.xaml 单元格控件到 Controls。\n2. 编辑 TitleAndTextCell.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ViewCell xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.Controls.TitleAndTextCell\">\n\t<ViewCell.View>\n\t\t<Grid x:Name=\"grid\">\n\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t</Grid.ColumnDefinitions>\n\t\t</Grid>\n\t</ViewCell.View>\n</ViewCell>\n```\n\n3. 编辑 TitleAndTextCell.xaml.cs：\n\n```csharp\nusing System.Collections.Generic;\n\nusing Xamarin.Forms;\nusing Xamarin.Forms.Xaml;\n\nnamespace AwesomeApp.Controls\n{\n\t[XamlCompilation(XamlCompilationOptions.Compile)]\n\tpublic partial class TitleAndTextCell : ViewCell\n\t{\n\t\tpublic List<string> TitleClass { get; set; }\n\n\t\tpublic string TitleText { get; set; }\n\n\t\tpublic List<string> TextClass { get; set; }\n\n\t\tpublic string TextBindingPath { get; set; }\n\n\t\tpublic TitleAndTextCell(List<string> titleClass, string titleText, List<string> textClass, string textBindingPath)\n\t\t{\n\t\t\tInitializeComponent();\n\n\t\t\tTitleClass = titleClass;\n\t\t\tTitleText = titleText;\n\t\t\tTextClass = textClass;\n\t\t\tTextBindingPath = textBindingPath;\n\n\t\t\tInitGrid();\n\t\t}\n\n\t\tprivate void InitGrid()\n\t\t{\n\t\t\tgrid.Children.Clear();\n\t\t\tgrid.Children.Add(new Label { StyleClass = TitleClass, Text = TitleText });\n\t\t\tLabel content = new Label { StyleClass = TextClass };\n\t\t\tcontent.SetBinding(Label.TextProperty, TextBindingPath);\n\t\t\tgrid.Children.Add(content, 1, 0);\n\t\t}\n\t}\n}\n```\n\n4. 添加 TianQiAPIPage.xaml。\n5. 编辑 TianQiAPIPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n\t\t\t xmlns:col=\"clr-namespace:AwesomeApp.Controls;assembly=AwesomeApp\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.TianQiAPIPage\">\n\t<ContentPage.Resources>\n\t\t<ResourceDictionary>\n\t\t\t<Style TargetType=\"StackLayout\">\n\t\t\t\t<Setter Property=\"Orientation\" Value=\"Horizontal\" />\n\t\t\t\t<Setter Property=\"Margin\" Value=\"15,0\" />\n\t\t\t</Style>\n\t\t\t<Style TargetType=\"Grid\">\n\t\t\t\t<Setter Property=\"Margin\" Value=\"15,0\" />\n\t\t\t</Style>\n\t\t\t<Style TargetType=\"Label\" Class=\"title\">\n\t\t\t\t<Setter Property=\"HeightRequest\" Value=\"60\" />\n\t\t\t\t<Setter Property=\"WidthRequest\" Value=\"80\" />\n\t\t\t\t<Setter Property=\"TextColor\" Value=\"Black\" />\n\t\t\t\t<Setter Property=\"VerticalTextAlignment\" Value=\"Center\" />\n\t\t\t</Style>\n\t\t\t<Style TargetType=\"Label\" Class=\"text\">\n\t\t\t\t<Setter Property=\"TextColor\" Value=\"DimGray\" />\n\t\t\t\t<Setter Property=\"VerticalOptions\" Value=\"CenterAndExpand\" />\n\t\t\t\t<Setter Property=\"HorizontalOptions\" Value=\"FillAndExpand\" />\n\t\t\t\t<Setter Property=\"LineBreakMode\" Value=\"WordWrap\" />\n\t\t\t</Style>\n\t\t</ResourceDictionary>\n\t</ContentPage.Resources>\n\t<ContentPage.Content>\n\t\t<TableView x:Name=\"tableView\" Intent=\"Settings\" HasUnevenRows=\"True\"></TableView>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n6. 编辑 TianQiAPIPage.xaml.cs：\n\n```csharp\nusing AwesomeApp.APIs;\nusing AwesomeApp.Controls;\nusing AwesomeApp.Models;\nusing System.Collections.Generic;\nusing Xamarin.Forms;\nusing Xamarin.Forms.Xaml;\n\nnamespace AwesomeApp\n{\n\t[XamlCompilation(XamlCompilationOptions.Compile)]\n\tpublic partial class TianQiAPIPage : ContentPage\n\t{\n\t\tpublic TianQiAPIPage()\n\t\t{\n\t\t\tInitializeComponent();\n\n\t\t\tInit();\n\t\t}\n\n\t\tprivate void Init()\n\t\t{\n\t\t\ttableView.Root = new TableRoot\n\t\t\t{\n\t\t\t\tnew TableSection(\"实时天气预报\")\n\t\t\t\t{\n\t\t\t\t\tCreateTableViewViewCell(\"城市ID\", \"CityID\"),\n\t\t\t\t\tCreateTableViewViewCell(\"城市\", \"City\"),\n\t\t\t\t\tCreateTableViewViewCell(\"城市英文\", \"CityEn\"),\n\t\t\t\t\tCreateTableViewViewCell(\"国家\", \"Country\"),\n\t\t\t\t\tCreateTableViewViewCell(\"国家英文\", \"CountryEn\"),\n\t\t\t\t\tCreateTableViewViewCell(\"日期\", \"Date\"),\n\t\t\t\t\tCreateTableViewViewCell(\"星期\", \"Week\"),\n\t\t\t\t\tCreateTableViewViewCell(\"更新时间\", \"UpdateTime\"),\n\t\t\t\t\tCreateTableViewViewCell(\"天气\", \"Weather\"),\n\t\t\t\t\tCreateTableViewViewCell(\"天气图标\", \"WeatherImage\"),\n\t\t\t\t\tCreateTableViewViewCell(\"温度\", \"Temperature\"),\n\t\t\t\t\tCreateTableViewViewCell(\"高温\", \"TemperatureHigh\"),\n\t\t\t\t\tCreateTableViewViewCell(\"低温\", \"TemperatureLow\"),\n\t\t\t\t\tCreateTableViewViewCell(\"风向\", \"Wind\"),\n\t\t\t\t\tCreateTableViewViewCell(\"风力\", \"WindSpeed\"),\n\t\t\t\t\tCreateTableViewViewCell(\"风速\", \"WindMeter\"),\n\t\t\t\t\tCreateTableViewViewCell(\"湿度\", \"Humidity\"),\n\t\t\t\t\tCreateTableViewViewCell(\"能见度\", \"Visibility\"),\n\t\t\t\t\tCreateTableViewViewCell(\"气压hPa\", \"Pressure\"),\n\t\t\t\t\tCreateTableViewViewCell(\"空气质量\", \"Air\"),\n\t\t\t\t\tCreateTableViewViewCell(\"PM2.5\", \"AirPM25\"),\n\t\t\t\t\tCreateTableViewViewCell(\"空气等级\", \"AirLevel\"),\n\t\t\t\t\tCreateTableViewViewCell(\"空气质量\", \"AirTips\"),\n\t\t\t\t\tCreateTableViewViewCell(\"警报类型\", \"Alarm.Type\"),\n\t\t\t\t\tCreateTableViewViewCell(\"警报等级\", \"Alarm.Level\"),\n\t\t\t\t\tCreateTableViewViewCell(\"警报内容\", \"Alarm.Content\"),\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tprivate TitleAndTextCell CreateTableViewViewCell(string text, string bindingPath)\n\t\t{\n\t\t\treturn new TitleAndTextCell(new List<string> { \"title\" }, text, new List<string> { \"text\" }, bindingPath);\n\t\t}\n\n\t\tprotected override async void OnAppearing()\n\t\t{\n\t\t\tbase.OnAppearing();\n\n\t\t\tTianQiModel tianQi = await TianQiAPI.GetWeatherDataAsync(string.Empty);\n\t\t\tBindingContext = tianQi;\n\t\t}\n\t}\n}\n```\n\n7.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new TianQiAPIPage();\n}\n```\n\n8. 调试界面：\n   ![](https://img-blog.csdnimg.cn/20200312100609605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200312100640511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200312100701690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/12_UrlData.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问URL数据\ndate: 2021-08-19 09:30:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何访问并将使用网络数据。\n\n1.  添加 Newtonsoft.Json。\n2.  创建访问业务。\n3.  使用访问数据。\n\n<!-- more -->\n\n## Newtonsoft.Json 类库引用\n\n1.  管理 NuGet 包。\n2.  搜索 Newtonsoft.Json。\n3.  安装推荐版本。\n\n## 创建访问业务\n\n1.  添加 TianQiModel.cs 到 Models 文件夹。\n2.  编辑 TianQiModel.cs：\n\n```csharp\nusing Newtonsoft.Json;\nusing System;\n\nnamespace AwesomeApp.Models\n{\n\t/// <summary>\n\t/// 天气数据模型\n\t/// </summary>\n\tpublic class TianQiModel\n\t{\n\t\t/// <summary>\n\t\t/// 城市ID\n\t\t/// </summary>\n\t\t[JsonProperty(\"cityid\")]\n\t\tpublic string CityID { get; set; }\n\n\t\t/// <summary>\n\t\t/// 城市名称\n\t\t/// </summary>\n\t\t[JsonProperty(\"city\")]\n\t\tpublic string City { get; set; }\n\n\t\t……\n\n\t\t/// <summary>\n\t\t/// 警报\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm\")]\n\t\tpublic AlarmModel Alarm { get; set; }\n\t}\n\n\t/// <summary>\n\t/// 警报数据模型\n\t/// </summary>\n\tpublic class AlarmModel\n\t{\n\t\t/// <summary>\n\t\t/// 类型\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm_type\")]\n\t\tpublic string Type { get; set; }\n\n\t\t/// <summary>\n\t\t/// 等级\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm_level\")]\n\t\tpublic string Level { get; set; }\n\n\t\t/// <summary>\n\t\t/// 内容\n\t\t/// </summary>\n\t\t[JsonProperty(\"alarm_content\")]\n\t\tpublic string Content { get; set; }\n\t}\n}\n```\n\n> - JsonProperty 属性标签表示 JSON 数据名称\n\n3.  添加 TianQiAPI.cs 到 APIs 文件夹。\n4.  编辑 TianQiAPI.cs：\n\n```csharp\nusing AwesomeApp.Models;\nusing Newtonsoft.Json;\nusing System;\nusing System.Diagnostics;\nusing System.Net.Http;\nusing System.Threading.Tasks;\n\nnamespace AwesomeApp.APIs\n{\n\tpublic class TianQiAPI\n\t{\n\t\tprivate const string _api_url = \"https://www.tianqiapi.com/api\";\n\t\tprivate const string _api_version = \"v6\";\n\t\tprivate const string _api_appid = \"YOUR_APPID\";\n\t\tprivate const string _api_appsecret = \"YOUR_SECRET\";\n\t\tprivate readonly HttpClient _client;\n\n\t\tpublic TianQiAPI()\n\t\t{\n\t\t\t_client = new HttpClient();\n\t\t}\n\n\t\tpublic async Task<TianQiModel> GetWeatherDataAsync()\n\t\t{\n\t\t\tTianQiModel tianQiData = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tusing (HttpResponseMessage response = await _client.GetAsync(string.Format(\n\t\t\t\t\t\"{0}?version={1}&appid={2}&appsecret={3}\",\n\t\t\t\t\t_api_url, _api_version, _api_appid, _api_appsecret)))\n\t\t\t\t{\n\t\t\t\t\tif (response.IsSuccessStatusCode)\n\t\t\t\t\t{\n\t\t\t\t\t\tstring content = await response.Content.ReadAsStringAsync();\n\t\t\t\t\t\ttianQiData = JsonConvert.DeserializeObject<TianQiModel>(content);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tDebug.WriteLine(\"\\tERROR {0}\", response.Content);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception ex)\n\t\t\t{\n\t\t\t\tDebug.WriteLine(\"\\tERROR {0}\", ex.Message);\n\t\t\t}\n\n\t\t\treturn tianQiData;\n\t\t}\n\t}\n}\n```\n\n> APPID 与 SECRET 到 [https://www.tianqiapi.com](https://www.tianqiapi.com) 申请\n\n## 使用访问数据\n\n1. 添加 TitleAndTextCell.xaml 单元格控件到 Controls。\n2. 编辑 TitleAndTextCell.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ViewCell xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.Controls.TitleAndTextCell\">\n\t<ViewCell.View>\n\t\t<Grid x:Name=\"grid\">\n\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t</Grid.ColumnDefinitions>\n\t\t</Grid>\n\t</ViewCell.View>\n</ViewCell>\n```\n\n3. 编辑 TitleAndTextCell.xaml.cs：\n\n```csharp\nusing System.Collections.Generic;\n\nusing Xamarin.Forms;\nusing Xamarin.Forms.Xaml;\n\nnamespace AwesomeApp.Controls\n{\n\t[XamlCompilation(XamlCompilationOptions.Compile)]\n\tpublic partial class TitleAndTextCell : ViewCell\n\t{\n\t\tpublic List<string> TitleClass { get; set; }\n\n\t\tpublic string TitleText { get; set; }\n\n\t\tpublic List<string> TextClass { get; set; }\n\n\t\tpublic string TextBindingPath { get; set; }\n\n\t\tpublic TitleAndTextCell(List<string> titleClass, string titleText, List<string> textClass, string textBindingPath)\n\t\t{\n\t\t\tInitializeComponent();\n\n\t\t\tTitleClass = titleClass;\n\t\t\tTitleText = titleText;\n\t\t\tTextClass = textClass;\n\t\t\tTextBindingPath = textBindingPath;\n\n\t\t\tInitGrid();\n\t\t}\n\n\t\tprivate void InitGrid()\n\t\t{\n\t\t\tgrid.Children.Clear();\n\t\t\tgrid.Children.Add(new Label { StyleClass = TitleClass, Text = TitleText });\n\t\t\tLabel content = new Label { StyleClass = TextClass };\n\t\t\tcontent.SetBinding(Label.TextProperty, TextBindingPath);\n\t\t\tgrid.Children.Add(content, 1, 0);\n\t\t}\n\t}\n}\n```\n\n4. 添加 TianQiAPIPage.xaml。\n5. 编辑 TianQiAPIPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n\t\t\t xmlns:col=\"clr-namespace:AwesomeApp.Controls;assembly=AwesomeApp\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.TianQiAPIPage\">\n\t<ContentPage.Resources>\n\t\t<ResourceDictionary>\n\t\t\t<Style TargetType=\"StackLayout\">\n\t\t\t\t<Setter Property=\"Orientation\" Value=\"Horizontal\" />\n\t\t\t\t<Setter Property=\"Margin\" Value=\"15,0\" />\n\t\t\t</Style>\n\t\t\t<Style TargetType=\"Grid\">\n\t\t\t\t<Setter Property=\"Margin\" Value=\"15,0\" />\n\t\t\t</Style>\n\t\t\t<Style TargetType=\"Label\" Class=\"title\">\n\t\t\t\t<Setter Property=\"HeightRequest\" Value=\"60\" />\n\t\t\t\t<Setter Property=\"WidthRequest\" Value=\"80\" />\n\t\t\t\t<Setter Property=\"TextColor\" Value=\"Black\" />\n\t\t\t\t<Setter Property=\"VerticalTextAlignment\" Value=\"Center\" />\n\t\t\t</Style>\n\t\t\t<Style TargetType=\"Label\" Class=\"text\">\n\t\t\t\t<Setter Property=\"TextColor\" Value=\"DimGray\" />\n\t\t\t\t<Setter Property=\"VerticalOptions\" Value=\"CenterAndExpand\" />\n\t\t\t\t<Setter Property=\"HorizontalOptions\" Value=\"FillAndExpand\" />\n\t\t\t\t<Setter Property=\"LineBreakMode\" Value=\"WordWrap\" />\n\t\t\t</Style>\n\t\t</ResourceDictionary>\n\t</ContentPage.Resources>\n\t<ContentPage.Content>\n\t\t<TableView x:Name=\"tableView\" Intent=\"Settings\" HasUnevenRows=\"True\"></TableView>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n6. 编辑 TianQiAPIPage.xaml.cs：\n\n```csharp\nusing AwesomeApp.APIs;\nusing AwesomeApp.Controls;\nusing AwesomeApp.Models;\nusing System.Collections.Generic;\nusing Xamarin.Forms;\nusing Xamarin.Forms.Xaml;\n\nnamespace AwesomeApp\n{\n\t[XamlCompilation(XamlCompilationOptions.Compile)]\n\tpublic partial class TianQiAPIPage : ContentPage\n\t{\n\t\tpublic TianQiAPIPage()\n\t\t{\n\t\t\tInitializeComponent();\n\n\t\t\tInit();\n\t\t}\n\n\t\tprivate void Init()\n\t\t{\n\t\t\ttableView.Root = new TableRoot\n\t\t\t{\n\t\t\t\tnew TableSection(\"实时天气预报\")\n\t\t\t\t{\n\t\t\t\t\tCreateTableViewViewCell(\"城市ID\", \"CityID\"),\n\t\t\t\t\tCreateTableViewViewCell(\"城市\", \"City\"),\n\t\t\t\t\tCreateTableViewViewCell(\"城市英文\", \"CityEn\"),\n\t\t\t\t\tCreateTableViewViewCell(\"国家\", \"Country\"),\n\t\t\t\t\tCreateTableViewViewCell(\"国家英文\", \"CountryEn\"),\n\t\t\t\t\tCreateTableViewViewCell(\"日期\", \"Date\"),\n\t\t\t\t\tCreateTableViewViewCell(\"星期\", \"Week\"),\n\t\t\t\t\tCreateTableViewViewCell(\"更新时间\", \"UpdateTime\"),\n\t\t\t\t\tCreateTableViewViewCell(\"天气\", \"Weather\"),\n\t\t\t\t\tCreateTableViewViewCell(\"天气图标\", \"WeatherImage\"),\n\t\t\t\t\tCreateTableViewViewCell(\"温度\", \"Temperature\"),\n\t\t\t\t\tCreateTableViewViewCell(\"高温\", \"TemperatureHigh\"),\n\t\t\t\t\tCreateTableViewViewCell(\"低温\", \"TemperatureLow\"),\n\t\t\t\t\tCreateTableViewViewCell(\"风向\", \"Wind\"),\n\t\t\t\t\tCreateTableViewViewCell(\"风力\", \"WindSpeed\"),\n\t\t\t\t\tCreateTableViewViewCell(\"风速\", \"WindMeter\"),\n\t\t\t\t\tCreateTableViewViewCell(\"湿度\", \"Humidity\"),\n\t\t\t\t\tCreateTableViewViewCell(\"能见度\", \"Visibility\"),\n\t\t\t\t\tCreateTableViewViewCell(\"气压hPa\", \"Pressure\"),\n\t\t\t\t\tCreateTableViewViewCell(\"空气质量\", \"Air\"),\n\t\t\t\t\tCreateTableViewViewCell(\"PM2.5\", \"AirPM25\"),\n\t\t\t\t\tCreateTableViewViewCell(\"空气等级\", \"AirLevel\"),\n\t\t\t\t\tCreateTableViewViewCell(\"空气质量\", \"AirTips\"),\n\t\t\t\t\tCreateTableViewViewCell(\"警报类型\", \"Alarm.Type\"),\n\t\t\t\t\tCreateTableViewViewCell(\"警报等级\", \"Alarm.Level\"),\n\t\t\t\t\tCreateTableViewViewCell(\"警报内容\", \"Alarm.Content\"),\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tprivate TitleAndTextCell CreateTableViewViewCell(string text, string bindingPath)\n\t\t{\n\t\t\treturn new TitleAndTextCell(new List<string> { \"title\" }, text, new List<string> { \"text\" }, bindingPath);\n\t\t}\n\n\t\tprotected override async void OnAppearing()\n\t\t{\n\t\t\tbase.OnAppearing();\n\n\t\t\tTianQiModel tianQi = await TianQiAPI.GetWeatherDataAsync(string.Empty);\n\t\t\tBindingContext = tianQi;\n\t\t}\n\t}\n}\n```\n\n7.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new TianQiAPIPage();\n}\n```\n\n8. 调试界面：\n   ![](https://img-blog.csdnimg.cn/20200312100609605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200312100640511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n   ![](https://img-blog.csdnimg.cn/20200312100701690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/12_UrlData","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y000234d0h58pb9r0o","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何访问并将使用网络数据。</p>\n<ol>\n<li>添加 Newtonsoft.Json。</li>\n<li>创建访问业务。</li>\n<li>使用访问数据。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"Newtonsoft-Json-类库引用\"><a href=\"#Newtonsoft-Json-类库引用\" class=\"headerlink\" title=\"Newtonsoft.Json 类库引用\"></a>Newtonsoft.Json 类库引用</h2><ol>\n<li>管理 NuGet 包。</li>\n<li>搜索 Newtonsoft.Json。</li>\n<li>安装推荐版本。</li>\n</ol>\n<h2 id=\"创建访问业务\"><a href=\"#创建访问业务\" class=\"headerlink\" title=\"创建访问业务\"></a>创建访问业务</h2><ol>\n<li>添加 TianQiModel.cs 到 Models 文件夹。</li>\n<li>编辑 TianQiModel.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">/// &lt;summary></span>\n\t<span class=\"token comment\">/// 天气数据模型</span>\n\t<span class=\"token comment\">/// &lt;/summary></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TianQiModel</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 城市ID</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cityid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> CityID <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 城市名称</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> City <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t……\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 警报</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">AlarmModel</span> Alarm <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token comment\">/// &lt;summary></span>\n\t<span class=\"token comment\">/// 警报数据模型</span>\n\t<span class=\"token comment\">/// &lt;/summary></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AlarmModel</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 类型</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm_type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Type <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 等级</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm_level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Level <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 内容</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm_content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Content <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>JsonProperty 属性标签表示 JSON 数据名称</li>\n</ul>\n</blockquote>\n<ol start=\"3\">\n<li>添加 TianQiAPI.cs 到 APIs 文件夹。</li>\n<li>编辑 TianQiAPI.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Diagnostics</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Http</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>APIs</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TianQiAPI</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.tianqiapi.com/api\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_version <span class=\"token operator\">=</span> <span class=\"token string\">\"v6\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_appid <span class=\"token operator\">=</span> <span class=\"token string\">\"YOUR_APPID\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_appsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"YOUR_SECRET\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">HttpClient</span> _client<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">TianQiAPI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t_client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HttpClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>TianQiModel<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetWeatherDataAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">TianQiModel</span> tianQiData <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">try</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpResponseMessage</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _client<span class=\"token punctuation\">.</span><span class=\"token function\">GetAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t<span class=\"token string\">\"&#123;0&#125;?version=&#123;1&#125;&amp;appid=&#123;2&#125;&amp;appsecret=&#123;3&#125;\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t_api_url<span class=\"token punctuation\">,</span> _api_version<span class=\"token punctuation\">,</span> _api_appid<span class=\"token punctuation\">,</span> _api_appsecret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>IsSuccessStatusCode<span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span>Content<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAsStringAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\ttianQiData <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">DeserializeObject</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TianQiModel<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\tDebug<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tERROR &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>Content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tDebug<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tERROR &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t\t<span class=\"token keyword\">return</span> tianQiData<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>APPID 与 SECRET 到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGlhbnFpYXBpLmNvbS8=\">https://www.tianqiapi.com<i class=\"fa fa-external-link-alt\"></i></span> 申请</p>\n</blockquote>\n<h2 id=\"使用访问数据\"><a href=\"#使用访问数据\" class=\"headerlink\" title=\"使用访问数据\"></a>使用访问数据</h2><ol>\n<li>添加 TitleAndTextCell.xaml 单元格控件到 Controls。</li>\n<li>编辑 TitleAndTextCell.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.Controls.TitleAndTextCell<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell.View</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell.View</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 TitleAndTextCell.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>Xaml</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Controls</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">XamlCompilation</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>XamlCompilationOptions<span class=\"token punctuation\">.</span>Compile<span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TitleAndTextCell</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ViewCell</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> TitleClass <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TitleText <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> TextClass <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TextBindingPath <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">TitleAndTextCell</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> titleClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> titleText<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> textClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> textBindingPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tTitleClass <span class=\"token operator\">=</span> titleClass<span class=\"token punctuation\">;</span>\n\t\t\tTitleText <span class=\"token operator\">=</span> titleText<span class=\"token punctuation\">;</span>\n\t\t\tTextClass <span class=\"token operator\">=</span> textClass<span class=\"token punctuation\">;</span>\n\t\t\tTextBindingPath <span class=\"token operator\">=</span> textBindingPath<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">InitGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tgrid<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgrid<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span> <span class=\"token punctuation\">&#123;</span> StyleClass <span class=\"token operator\">=</span> TitleClass<span class=\"token punctuation\">,</span> Text <span class=\"token operator\">=</span> TitleText <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">Label</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span> <span class=\"token punctuation\">&#123;</span> StyleClass <span class=\"token operator\">=</span> TextClass <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\tcontent<span class=\"token punctuation\">.</span><span class=\"token function\">SetBinding</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">.</span>TextProperty<span class=\"token punctuation\">,</span> TextBindingPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgrid<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>添加 TianQiAPIPage.xaml。</li>\n<li>编辑 TianQiAPIPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n\t\t\t <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>col</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clr-namespace:AwesomeApp.Controls;assembly=AwesomeApp<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.TianQiAPIPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ResourceDictionary</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>StackLayout<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"Orientation\"</span> Value=<span class=\"token string\">\"Horizontal\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"Margin\"</span> Value=<span class=\"token string\">\"15,0\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Grid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"Margin\"</span> Value=<span class=\"token string\">\"15,0\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"HeightRequest\"</span> Value=<span class=\"token string\">\"60\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"WidthRequest\"</span> Value=<span class=\"token string\">\"80\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"TextColor\"</span> Value=<span class=\"token string\">\"Black\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"VerticalTextAlignment\"</span> Value=<span class=\"token string\">\"Center\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"TextColor\"</span> Value=<span class=\"token string\">\"DimGray\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"VerticalOptions\"</span> Value=<span class=\"token string\">\"CenterAndExpand\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"HorizontalOptions\"</span> Value=<span class=\"token string\">\"FillAndExpand\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"LineBreakMode\"</span> Value=<span class=\"token string\">\"WordWrap\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ResourceDictionary</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TableView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tableView<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Intent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Settings<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">HasUnevenRows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TableView</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"6\">\n<li>编辑 TianQiAPIPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>APIs</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Controls</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>Xaml</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">XamlCompilation</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>XamlCompilationOptions<span class=\"token punctuation\">.</span>Compile<span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TianQiAPIPage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ContentPage</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">TianQiAPIPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\ttableView<span class=\"token punctuation\">.</span>Root <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TableRoot</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TableSection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"实时天气预报\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城市ID\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CityID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城市\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"City\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城市英文\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CityEn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"国家\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"国家英文\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CountryEn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日期\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Date\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Week\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新时间\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UpdateTime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"天气\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Weather\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"天气图标\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WeatherImage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"温度\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Temperature\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高温\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TemperatureHigh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"低温\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TemperatureLow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"风向\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Wind\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"风力\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WindSpeed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"风速\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WindMeter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"湿度\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Humidity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"能见度\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Visibility\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"气压hPa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pressure\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空气质量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Air\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PM2.5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AirPM25\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空气等级\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AirLevel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空气质量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AirTips\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"警报类型\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alarm.Type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"警报等级\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alarm.Level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"警报内容\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alarm.Content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">TitleAndTextCell</span> <span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> bindingPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TitleAndTextCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"title\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"text\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> bindingPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">TianQiModel</span> tianQi <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> TianQiAPI<span class=\"token punctuation\">.</span><span class=\"token function\">GetWeatherDataAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span>Empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tBindingContext <span class=\"token operator\">=</span> tianQi<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"7\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TianQiAPIPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"8\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200312100609605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200312100640511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200312100701690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何访问并将使用网络数据。</p>\n<ol>\n<li>添加 Newtonsoft.Json。</li>\n<li>创建访问业务。</li>\n<li>使用访问数据。</li>\n</ol>","more":"<h2 id=\"Newtonsoft-Json-类库引用\"><a href=\"#Newtonsoft-Json-类库引用\" class=\"headerlink\" title=\"Newtonsoft.Json 类库引用\"></a>Newtonsoft.Json 类库引用</h2><ol>\n<li>管理 NuGet 包。</li>\n<li>搜索 Newtonsoft.Json。</li>\n<li>安装推荐版本。</li>\n</ol>\n<h2 id=\"创建访问业务\"><a href=\"#创建访问业务\" class=\"headerlink\" title=\"创建访问业务\"></a>创建访问业务</h2><ol>\n<li>添加 TianQiModel.cs 到 Models 文件夹。</li>\n<li>编辑 TianQiModel.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">/// &lt;summary></span>\n\t<span class=\"token comment\">/// 天气数据模型</span>\n\t<span class=\"token comment\">/// &lt;/summary></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TianQiModel</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 城市ID</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cityid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> CityID <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 城市名称</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"city\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> City <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t……\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 警报</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">AlarmModel</span> Alarm <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\n\t<span class=\"token comment\">/// &lt;summary></span>\n\t<span class=\"token comment\">/// 警报数据模型</span>\n\t<span class=\"token comment\">/// &lt;/summary></span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AlarmModel</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 类型</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm_type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Type <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 等级</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm_level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Level <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token comment\">/// &lt;summary></span>\n\t\t<span class=\"token comment\">/// 内容</span>\n\t\t<span class=\"token comment\">/// &lt;/summary></span>\n\t\t<span class=\"token punctuation\">[</span><span class=\"token function\">JsonProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alarm_content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Content <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>JsonProperty 属性标签表示 JSON 数据名称</li>\n</ul>\n</blockquote>\n<ol start=\"3\">\n<li>添加 TianQiAPI.cs 到 APIs 文件夹。</li>\n<li>编辑 TianQiAPI.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Newtonsoft<span class=\"token punctuation\">.</span>Json</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Diagnostics</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Net<span class=\"token punctuation\">.</span>Http</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Threading<span class=\"token punctuation\">.</span>Tasks</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>APIs</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TianQiAPI</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_url <span class=\"token operator\">=</span> <span class=\"token string\">\"https://www.tianqiapi.com/api\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_version <span class=\"token operator\">=</span> <span class=\"token string\">\"v6\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_appid <span class=\"token operator\">=</span> <span class=\"token string\">\"YOUR_APPID\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">const</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> _api_appsecret <span class=\"token operator\">=</span> <span class=\"token string\">\"YOUR_SECRET\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">readonly</span> <span class=\"token class-name\">HttpClient</span> _client<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">TianQiAPI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t_client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">HttpClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span>TianQiModel<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetWeatherDataAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token class-name\">TianQiModel</span> tianQiData <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">try</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpResponseMessage</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> _client<span class=\"token punctuation\">.</span><span class=\"token function\">GetAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span><span class=\"token function\">Format</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t<span class=\"token string\">\"&#123;0&#125;?version=&#123;1&#125;&amp;appid=&#123;2&#125;&amp;appsecret=&#123;3&#125;\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t_api_url<span class=\"token punctuation\">,</span> _api_version<span class=\"token punctuation\">,</span> _api_appid<span class=\"token punctuation\">,</span> _api_appsecret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>IsSuccessStatusCode<span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\t<span class=\"token class-name\"><span class=\"token keyword\">string</span></span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> response<span class=\"token punctuation\">.</span>Content<span class=\"token punctuation\">.</span><span class=\"token function\">ReadAsStringAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\ttianQiData <span class=\"token operator\">=</span> JsonConvert<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">DeserializeObject</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>TianQiModel<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t\tDebug<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tERROR &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> response<span class=\"token punctuation\">.</span>Content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\tDebug<span class=\"token punctuation\">.</span><span class=\"token function\">WriteLine</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\tERROR &#123;0&#125;\"</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t\t<span class=\"token keyword\">return</span> tianQiData<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>APPID 与 SECRET 到 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cudGlhbnFpYXBpLmNvbS8=\">https://www.tianqiapi.com<i class=\"fa fa-external-link-alt\"></i></span> 申请</p>\n</blockquote>\n<h2 id=\"使用访问数据\"><a href=\"#使用访问数据\" class=\"headerlink\" title=\"使用访问数据\"></a>使用访问数据</h2><ol>\n<li>添加 TitleAndTextCell.xaml 单元格控件到 Controls。</li>\n<li>编辑 TitleAndTextCell.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.Controls.TitleAndTextCell<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell.View</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>grid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell.View</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 TitleAndTextCell.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>Xaml</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Controls</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">XamlCompilation</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>XamlCompilationOptions<span class=\"token punctuation\">.</span>Compile<span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TitleAndTextCell</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ViewCell</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> TitleClass <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TitleText <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> TextClass <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> TextBindingPath <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">TitleAndTextCell</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> titleClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> titleText<span class=\"token punctuation\">,</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> textClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> textBindingPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tTitleClass <span class=\"token operator\">=</span> titleClass<span class=\"token punctuation\">;</span>\n\t\t\tTitleText <span class=\"token operator\">=</span> titleText<span class=\"token punctuation\">;</span>\n\t\t\tTextClass <span class=\"token operator\">=</span> textClass<span class=\"token punctuation\">;</span>\n\t\t\tTextBindingPath <span class=\"token operator\">=</span> textBindingPath<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">InitGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">InitGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tgrid<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgrid<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span> <span class=\"token punctuation\">&#123;</span> StyleClass <span class=\"token operator\">=</span> TitleClass<span class=\"token punctuation\">,</span> Text <span class=\"token operator\">=</span> TitleText <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token class-name\">Label</span> content <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Label</span> <span class=\"token punctuation\">&#123;</span> StyleClass <span class=\"token operator\">=</span> TextClass <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t\tcontent<span class=\"token punctuation\">.</span><span class=\"token function\">SetBinding</span><span class=\"token punctuation\">(</span>Label<span class=\"token punctuation\">.</span>TextProperty<span class=\"token punctuation\">,</span> TextBindingPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgrid<span class=\"token punctuation\">.</span>Children<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>添加 TianQiAPIPage.xaml。</li>\n<li>编辑 TianQiAPIPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n\t\t\t <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>col</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>clr-namespace:AwesomeApp.Controls;assembly=AwesomeApp<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.TianQiAPIPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ResourceDictionary</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>StackLayout<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"Orientation\"</span> Value=<span class=\"token string\">\"Horizontal\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"Margin\"</span> Value=<span class=\"token string\">\"15,0\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Grid<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"Margin\"</span> Value=<span class=\"token string\">\"15,0\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"HeightRequest\"</span> Value=<span class=\"token string\">\"60\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"WidthRequest\"</span> Value=<span class=\"token string\">\"80\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"TextColor\"</span> Value=<span class=\"token string\">\"Black\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"VerticalTextAlignment\"</span> Value=<span class=\"token string\">\"Center\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Style</span> <span class=\"token attr-name\">TargetType</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Label<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"TextColor\"</span> Value=<span class=\"token string\">\"DimGray\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"VerticalOptions\"</span> Value=<span class=\"token string\">\"CenterAndExpand\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"HorizontalOptions\"</span> Value=<span class=\"token string\">\"FillAndExpand\"</span> />\n\t\t\t\t&lt;Setter Property=<span class=\"token string\">\"LineBreakMode\"</span> Value=<span class=\"token string\">\"WordWrap\"</span> />\n\t\t\t</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Style</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ResourceDictionary</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Resources</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TableView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tableView<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Intent</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Settings<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">HasUnevenRows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>True<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>TableView</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"6\">\n<li>编辑 TianQiAPIPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>APIs</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Controls</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">AwesomeApp<span class=\"token punctuation\">.</span>Models</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">System<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>Generic</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token namespace\">Xamarin<span class=\"token punctuation\">.</span>Forms<span class=\"token punctuation\">.</span>Xaml</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token namespace\">AwesomeApp</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">XamlCompilation</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>XamlCompilationOptions<span class=\"token punctuation\">.</span>Compile<span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">partial</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TianQiAPIPage</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ContentPage</span></span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">public</span> <span class=\"token function\">TianQiAPIPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\ttableView<span class=\"token punctuation\">.</span>Root <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TableRoot</span>\n\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t<span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TableSection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"实时天气预报\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城市ID\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CityID\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城市\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"City\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"城市英文\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CityEn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"国家\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Country\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"国家英文\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"CountryEn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"日期\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Date\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"星期\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Week\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"更新时间\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"UpdateTime\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"天气\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Weather\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"天气图标\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WeatherImage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"温度\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Temperature\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"高温\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TemperatureHigh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"低温\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"TemperatureLow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"风向\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Wind\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"风力\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WindSpeed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"风速\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"WindMeter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"湿度\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Humidity\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"能见度\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Visibility\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"气压hPa\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Pressure\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空气质量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Air\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PM2.5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AirPM25\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空气等级\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AirLevel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空气质量\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"AirTips\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"警报类型\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alarm.Type\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"警报等级\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alarm.Level\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"警报内容\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Alarm.Content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">TitleAndTextCell</span> <span class=\"token function\">CreateTableViewViewCell</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> text<span class=\"token punctuation\">,</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> bindingPath<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TitleAndTextCell</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"title\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">&#123;</span> <span class=\"token string\">\"text\"</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> bindingPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\n\t\t<span class=\"token keyword\">protected</span> <span class=\"token keyword\">override</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\t<span class=\"token keyword\">base</span><span class=\"token punctuation\">.</span><span class=\"token function\">OnAppearing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token class-name\">TianQiModel</span> tianQi <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> TianQiAPI<span class=\"token punctuation\">.</span><span class=\"token function\">GetWeatherDataAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">.</span>Empty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tBindingContext <span class=\"token operator\">=</span> tianQi<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"7\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">TianQiAPIPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"8\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200312100609605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200312100640511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200312100701690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout","date":"2021-08-19T01:19:00.000Z","_content":"\n## 简介\n\n演示如何在 StackLayout 中对齐控件。\n\n1.  在 XAML 中创建 Xamarin.Forms StackLayout。\n2.  指定 StackLayout 的方向。\n3.  控制 StackLayout 内子视图的对齐和扩展。\n\n<!-- more -->\n\n## 创建 stacklayout\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 StackLayoutPage.xaml：\n    ![](https://img-blog.csdnimg.cn/20200305134444615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  编辑 StackLayoutPage.xaml：\n\n```xml\n<StackLayout>\n\t<Label Text=\"第一个Label。\" />\n\t<Label Text=\"第二个Label。\" />\n\t<Label Text=\"第三个Label。\" />\n</StackLayout>\n```\n\n> StackLayout 默认为垂直方向。 此外，Margin 属性表示 ContentPage 中 StackLayout 的外边距。\n\n> \\*_除 Margin 外，StackLayout 还可设置 Padding 和 Spacing。 Padding 指定 StackLayout 的内边距，Spacing 指定 StackLayout 中每个子元素之间的间隔大小。_\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new StackLayoutPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305135303284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## StackLayout 方向\n\n1.  编辑 StackLayoutPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,32\" Orientation=\"Horizontal\">\n\t<Label Text=\"第一个Label的显示内容。\" />\n\t<Label Text=\"第二个Label的显示内容。\" />\n\t<Label Text=\"第三个Label的显示内容。\" />\n</StackLayout>\n```\n\n> Orientation 属性：Horizontal 横向，Vertical 纵向\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305135351611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 对齐方式和扩展选项\n\n1.  编辑 StackLayoutPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,35\">\n\t<Label Text=\"Start\"\n\t\t   HorizontalOptions=\"Start\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"Center\"\n\t\t   HorizontalOptions=\"Center\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"End\"\n\t\t   HorizontalOptions=\"End\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"Fill\"\n\t\t   HorizontalOptions=\"Fill\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"StartAndExpand\"\n\t\t   VerticalOptions=\"StartAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"CenterAndExpand\"\n\t\t   VerticalOptions=\"CenterAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"EndAndExpand\"\n\t\t   VerticalOptions=\"EndAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"FillAndExpand\"\n\t\t   VerticalOptions=\"FillAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n</StackLayout>\n```\n\n> 前四个 Label 设置 HorizontalOptions 横向配置 Start、Center、End 和 Fill 各元素的显示位置，后四个 Label 设置 VerticalOptions 纵向配置 StartAndExpand、CenterAndExpand、EndAndExpand 和 FillAndExpand 在剩余空间中的位置。\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305135430671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    > StackLayout 仅遵循与 StackLayout 方向相反的子元素位置配置。 因此，Vertical 方向的 HorizontalOptions 属性设置时有效\n\n> StackLayout 只能按照其方向扩展元素位置。 因此，Vertical 方向的 StackLayout 可以扩展 Label 子元素。 这意味着，对于 Vertical 对齐方式，每个 Label 在 StackLayout 内占据相同的空间量。 但是，只有最后一个 Label（可将 VerticalOptions 属性设置为 FillAndExpand）具有不同的大小\n\n> \\*_以上代码中 StackLayout.Orientation 默认为 Vertical，故前四个 Label 配置 HorizontalOptions 位置有效，后四个 Label 配置 VerticalOptions 为 Expand 有效_\n\n> \\*_使用 StackLayout 中的所有空间时，Expand 不起作用_\n","source":"_posts/Xamarin/Forms/1_StackLayout.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout\ndate: 2021-08-19 09:19:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何在 StackLayout 中对齐控件。\n\n1.  在 XAML 中创建 Xamarin.Forms StackLayout。\n2.  指定 StackLayout 的方向。\n3.  控制 StackLayout 内子视图的对齐和扩展。\n\n<!-- more -->\n\n## 创建 stacklayout\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 StackLayoutPage.xaml：\n    ![](https://img-blog.csdnimg.cn/20200305134444615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  编辑 StackLayoutPage.xaml：\n\n```xml\n<StackLayout>\n\t<Label Text=\"第一个Label。\" />\n\t<Label Text=\"第二个Label。\" />\n\t<Label Text=\"第三个Label。\" />\n</StackLayout>\n```\n\n> StackLayout 默认为垂直方向。 此外，Margin 属性表示 ContentPage 中 StackLayout 的外边距。\n\n> \\*_除 Margin 外，StackLayout 还可设置 Padding 和 Spacing。 Padding 指定 StackLayout 的内边距，Spacing 指定 StackLayout 中每个子元素之间的间隔大小。_\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new StackLayoutPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305135303284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## StackLayout 方向\n\n1.  编辑 StackLayoutPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,32\" Orientation=\"Horizontal\">\n\t<Label Text=\"第一个Label的显示内容。\" />\n\t<Label Text=\"第二个Label的显示内容。\" />\n\t<Label Text=\"第三个Label的显示内容。\" />\n</StackLayout>\n```\n\n> Orientation 属性：Horizontal 横向，Vertical 纵向\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305135351611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 对齐方式和扩展选项\n\n1.  编辑 StackLayoutPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,35\">\n\t<Label Text=\"Start\"\n\t\t   HorizontalOptions=\"Start\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"Center\"\n\t\t   HorizontalOptions=\"Center\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"End\"\n\t\t   HorizontalOptions=\"End\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"Fill\"\n\t\t   HorizontalOptions=\"Fill\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"StartAndExpand\"\n\t\t   VerticalOptions=\"StartAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"CenterAndExpand\"\n\t\t   VerticalOptions=\"CenterAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"EndAndExpand\"\n\t\t   VerticalOptions=\"EndAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n\t<Label Text=\"FillAndExpand\"\n\t\t   VerticalOptions=\"FillAndExpand\"\n\t\t   BackgroundColor=\"LightGray\" />\n</StackLayout>\n```\n\n> 前四个 Label 设置 HorizontalOptions 横向配置 Start、Center、End 和 Fill 各元素的显示位置，后四个 Label 设置 VerticalOptions 纵向配置 StartAndExpand、CenterAndExpand、EndAndExpand 和 FillAndExpand 在剩余空间中的位置。\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305135430671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    > StackLayout 仅遵循与 StackLayout 方向相反的子元素位置配置。 因此，Vertical 方向的 HorizontalOptions 属性设置时有效\n\n> StackLayout 只能按照其方向扩展元素位置。 因此，Vertical 方向的 StackLayout 可以扩展 Label 子元素。 这意味着，对于 Vertical 对齐方式，每个 Label 在 StackLayout 内占据相同的空间量。 但是，只有最后一个 Label（可将 VerticalOptions 属性设置为 FillAndExpand）具有不同的大小\n\n> \\*_以上代码中 StackLayout.Orientation 默认为 Vertical，故前四个 Label 配置 HorizontalOptions 位置有效，后四个 Label 配置 VerticalOptions 为 Expand 有效_\n\n> \\*_使用 StackLayout 中的所有空间时，Expand 不起作用_\n","slug":"Xamarin/Forms/1_StackLayout","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y000264d0h2ns7315d","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 StackLayout 中对齐控件。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms StackLayout。</li>\n<li>指定 StackLayout 的方向。</li>\n<li>控制 StackLayout 内子视图的对齐和扩展。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-stacklayout\"><a href=\"#创建-stacklayout\" class=\"headerlink\" title=\"创建 stacklayout\"></a>创建 stacklayout</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 StackLayoutPage.xaml：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305134444615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>编辑 StackLayoutPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第一个Label。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第二个Label。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第三个Label。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>StackLayout 默认为垂直方向。 此外，Margin 属性表示 ContentPage 中 StackLayout 的外边距。</p>\n</blockquote>\n<blockquote>\n<p>*<em>除 Margin 外，StackLayout 还可设置 Padding 和 Spacing。 Padding 指定 StackLayout 的内边距，Spacing 指定 StackLayout 中每个子元素之间的间隔大小。</em></p>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StackLayoutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305135303284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"StackLayout-方向\"><a href=\"#StackLayout-方向\" class=\"headerlink\" title=\"StackLayout 方向\"></a>StackLayout 方向</h2><ol>\n<li>编辑 StackLayoutPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Orientation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Horizontal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第一个Label的显示内容。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第二个Label的显示内容。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第三个Label的显示内容。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Orientation 属性：Horizontal 横向，Vertical 纵向</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305135351611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"对齐方式和扩展选项\"><a href=\"#对齐方式和扩展选项\" class=\"headerlink\" title=\"对齐方式和扩展选项\"></a>对齐方式和扩展选项</h2><ol>\n<li>编辑 StackLayoutPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>End<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>End<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>StartAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>StartAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>EndAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>EndAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FillAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FillAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>前四个 Label 设置 HorizontalOptions 横向配置 Start、Center、End 和 Fill 各元素的显示位置，后四个 Label 设置 VerticalOptions 纵向配置 StartAndExpand、CenterAndExpand、EndAndExpand 和 FillAndExpand 在剩余空间中的位置。</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305135430671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>StackLayout 仅遵循与 StackLayout 方向相反的子元素位置配置。 因此，Vertical 方向的 HorizontalOptions 属性设置时有效</p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>StackLayout 只能按照其方向扩展元素位置。 因此，Vertical 方向的 StackLayout 可以扩展 Label 子元素。 这意味着，对于 Vertical 对齐方式，每个 Label 在 StackLayout 内占据相同的空间量。 但是，只有最后一个 Label（可将 VerticalOptions 属性设置为 FillAndExpand）具有不同的大小</p>\n</blockquote>\n<blockquote>\n<p>*<em>以上代码中 StackLayout.Orientation 默认为 Vertical，故前四个 Label 配置 HorizontalOptions 位置有效，后四个 Label 配置 VerticalOptions 为 Expand 有效</em></p>\n</blockquote>\n<blockquote>\n<p>*<em>使用 StackLayout 中的所有空间时，Expand 不起作用</em></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 StackLayout 中对齐控件。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms StackLayout。</li>\n<li>指定 StackLayout 的方向。</li>\n<li>控制 StackLayout 内子视图的对齐和扩展。</li>\n</ol>","more":"<h2 id=\"创建-stacklayout\"><a href=\"#创建-stacklayout\" class=\"headerlink\" title=\"创建 stacklayout\"></a>创建 stacklayout</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 StackLayoutPage.xaml：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305134444615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>编辑 StackLayoutPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第一个Label。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第二个Label。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第三个Label。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>StackLayout 默认为垂直方向。 此外，Margin 属性表示 ContentPage 中 StackLayout 的外边距。</p>\n</blockquote>\n<blockquote>\n<p>*<em>除 Margin 外，StackLayout 还可设置 Padding 和 Spacing。 Padding 指定 StackLayout 的内边距，Spacing 指定 StackLayout 中每个子元素之间的间隔大小。</em></p>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">StackLayoutPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305135303284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"StackLayout-方向\"><a href=\"#StackLayout-方向\" class=\"headerlink\" title=\"StackLayout 方向\"></a>StackLayout 方向</h2><ol>\n<li>编辑 StackLayoutPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Orientation</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Horizontal<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第一个Label的显示内容。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第二个Label的显示内容。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>第三个Label的显示内容。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Orientation 属性：Horizontal 横向，Vertical 纵向</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305135351611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"对齐方式和扩展选项\"><a href=\"#对齐方式和扩展选项\" class=\"headerlink\" title=\"对齐方式和扩展选项\"></a>对齐方式和扩展选项</h2><ol>\n<li>编辑 StackLayoutPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>End<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>End<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>StartAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>StartAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>EndAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>EndAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FillAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>FillAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>前四个 Label 设置 HorizontalOptions 横向配置 Start、Center、End 和 Fill 各元素的显示位置，后四个 Label 设置 VerticalOptions 纵向配置 StartAndExpand、CenterAndExpand、EndAndExpand 和 FillAndExpand 在剩余空间中的位置。</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305135430671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>StackLayout 仅遵循与 StackLayout 方向相反的子元素位置配置。 因此，Vertical 方向的 HorizontalOptions 属性设置时有效</p>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>StackLayout 只能按照其方向扩展元素位置。 因此，Vertical 方向的 StackLayout 可以扩展 Label 子元素。 这意味着，对于 Vertical 对齐方式，每个 Label 在 StackLayout 内占据相同的空间量。 但是，只有最后一个 Label（可将 VerticalOptions 属性设置为 FillAndExpand）具有不同的大小</p>\n</blockquote>\n<blockquote>\n<p>*<em>以上代码中 StackLayout.Orientation 默认为 Vertical，故前四个 Label 配置 HorizontalOptions 位置有效，后四个 Label 配置 VerticalOptions 为 Expand 有效</em></p>\n</blockquote>\n<blockquote>\n<p>*<em>使用 StackLayout 中的所有空间时，Expand 不起作用</em></p>\n</blockquote>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 3 - Label","date":"2021-08-19T01:21:00.000Z","_content":"\n## 简介\n\n演示如何在 Label 中显示文本。\n\n1.  在 XAML 中创建 Xamarin.Forms Label。\n2.  更改 Label 的样式。\n3.  在一个 Label 中显示具有多种格式的文本。\n\n<!-- more -->\n\n## 创建 Label\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 LabelPage.xaml：\n    ![](https://img-blog.csdnimg.cn/20200305150539729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  编辑 LabelPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.LabelPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout>\n\t\t\t<Label Text=\"欢迎使用 Xamarin.Forms！\"\n                VerticalOptions=\"CenterAndExpand\"\n                HorizontalOptions=\"CenterAndExpand\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new LabelPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305150842798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 配置 Label 样式\n\n1.  编辑 LabelPage.xaml：\n\n```xml\n<Label Text=\"欢迎使用 Xamarin.Forms！\"\n\t   VerticalOptions=\"CenterAndExpand\"\n\t   HorizontalOptions=\"CenterAndExpand\"\n\t   TextColor=\"Blue\"\n       FontAttributes=\"Italic\"\n       FontSize=\"22\"\n       TextDecorations=\"Underline\" />\n```\n\n> TextColor 设置文本的颜色，FontAttributes 设置字体为斜体，FontSize 设置字号，TextDecorations 应用下划线效果\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305151324276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 自定义 Label 文本格式\n\n1.  编辑 LabelPage.xaml：\n\n```xml\n<Label TextColor=\"Gray\"\n\t   FontSize=\"20\"\n\t   HorizontalOptions=\"Center\"\n\t   VerticalOptions=\"CenterAndExpand\">\n\t<Label.FormattedText>\n\t\t<FormattedString>\n\t\t\t<Span Text=\"欢迎 \"\n\t\t\t\t  TextColor=\"Blue\"/>\n\t\t\t<Span Text=\"使用 \"\n\t\t\t\t  TextColor=\"Red\"\n\t\t\t\t  FontAttributes=\"Italic\" />\n\t\t\t<Span Text=\"Xamarin.Form！\"\n\t\t\t\t  TextColor=\"Green\"\n\t\t\t\t  TextDecorations=\"Underline\" />\n\t\t</FormattedString>\n\t</Label.FormattedText>\n</Label>\n```\n\n> FormattedText 属性是 FormattedString 类型，可以包含一个或多个 Span 实例\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305152247542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/3_Label.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 3 - Label\ndate: 2021-08-19 09:21:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何在 Label 中显示文本。\n\n1.  在 XAML 中创建 Xamarin.Forms Label。\n2.  更改 Label 的样式。\n3.  在一个 Label 中显示具有多种格式的文本。\n\n<!-- more -->\n\n## 创建 Label\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 LabelPage.xaml：\n    ![](https://img-blog.csdnimg.cn/20200305150539729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  编辑 LabelPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.LabelPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout>\n\t\t\t<Label Text=\"欢迎使用 Xamarin.Forms！\"\n                VerticalOptions=\"CenterAndExpand\"\n                HorizontalOptions=\"CenterAndExpand\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new LabelPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305150842798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 配置 Label 样式\n\n1.  编辑 LabelPage.xaml：\n\n```xml\n<Label Text=\"欢迎使用 Xamarin.Forms！\"\n\t   VerticalOptions=\"CenterAndExpand\"\n\t   HorizontalOptions=\"CenterAndExpand\"\n\t   TextColor=\"Blue\"\n       FontAttributes=\"Italic\"\n       FontSize=\"22\"\n       TextDecorations=\"Underline\" />\n```\n\n> TextColor 设置文本的颜色，FontAttributes 设置字体为斜体，FontSize 设置字号，TextDecorations 应用下划线效果\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305151324276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 自定义 Label 文本格式\n\n1.  编辑 LabelPage.xaml：\n\n```xml\n<Label TextColor=\"Gray\"\n\t   FontSize=\"20\"\n\t   HorizontalOptions=\"Center\"\n\t   VerticalOptions=\"CenterAndExpand\">\n\t<Label.FormattedText>\n\t\t<FormattedString>\n\t\t\t<Span Text=\"欢迎 \"\n\t\t\t\t  TextColor=\"Blue\"/>\n\t\t\t<Span Text=\"使用 \"\n\t\t\t\t  TextColor=\"Red\"\n\t\t\t\t  FontAttributes=\"Italic\" />\n\t\t\t<Span Text=\"Xamarin.Form！\"\n\t\t\t\t  TextColor=\"Green\"\n\t\t\t\t  TextDecorations=\"Underline\" />\n\t\t</FormattedString>\n\t</Label.FormattedText>\n</Label>\n```\n\n> FormattedText 属性是 FormattedString 类型，可以包含一个或多个 Span 实例\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305152247542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/3_Label","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y000294d0h14kygr2y","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 Label 中显示文本。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Label。</li>\n<li>更改 Label 的样式。</li>\n<li>在一个 Label 中显示具有多种格式的文本。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-Label\"><a href=\"#创建-Label\" class=\"headerlink\" title=\"创建 Label\"></a>创建 Label</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 LabelPage.xaml：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305150539729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>编辑 LabelPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.LabelPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LabelPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305150842798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"配置-Label-样式\"><a href=\"#配置-Label-样式\" class=\"headerlink\" title=\"配置 Label 样式\"></a>配置 Label 样式</h2><ol>\n<li>编辑 LabelPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Blue<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">FontAttributes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Italic<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">TextDecorations</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Underline<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>TextColor 设置文本的颜色，FontAttributes 设置字体为斜体，FontSize 设置字号，TextDecorations 应用下划线效果</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305151324276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"自定义-Label-文本格式\"><a href=\"#自定义-Label-文本格式\" class=\"headerlink\" title=\"自定义 Label 文本格式\"></a>自定义 Label 文本格式</h2><ol>\n<li>编辑 LabelPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label.FormattedText</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FormattedString</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Span</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎 <span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Span</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>使用 <span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Red<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">FontAttributes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Italic<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Span</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Xamarin.Form！<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Green<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextDecorations</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Underline<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FormattedString</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label.FormattedText</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>FormattedText 属性是 FormattedString 类型，可以包含一个或多个 Span 实例</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305152247542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 Label 中显示文本。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Label。</li>\n<li>更改 Label 的样式。</li>\n<li>在一个 Label 中显示具有多种格式的文本。</li>\n</ol>","more":"<h2 id=\"创建-Label\"><a href=\"#创建-Label\" class=\"headerlink\" title=\"创建 Label\"></a>创建 Label</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 LabelPage.xaml：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305150539729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>编辑 LabelPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.LabelPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">LabelPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305150842798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"配置-Label-样式\"><a href=\"#配置-Label-样式\" class=\"headerlink\" title=\"配置 Label 样式\"></a>配置 Label 样式</h2><ol>\n<li>编辑 LabelPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Blue<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">FontAttributes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Italic<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>22<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">TextDecorations</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Underline<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>TextColor 设置文本的颜色，FontAttributes 设置字体为斜体，FontSize 设置字号，TextDecorations 应用下划线效果</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305151324276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"自定义-Label-文本格式\"><a href=\"#自定义-Label-文本格式\" class=\"headerlink\" title=\"自定义 Label 文本格式\"></a>自定义 Label 文本格式</h2><ol>\n<li>编辑 LabelPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label.FormattedText</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FormattedString</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Span</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎 <span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Span</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>使用 <span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Red<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">FontAttributes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Italic<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Span</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Xamarin.Form！<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Green<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t  <span class=\"token attr-name\">TextDecorations</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Underline<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FormattedString</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label.FormattedText</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Label</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>FormattedText 属性是 FormattedString 类型，可以包含一个或多个 Span 实例</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305152247542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry","date":"2021-08-19T01:23:00.000Z","_content":"\n## 简介\n\n演示 Entry 属性 。\n\n1.  在 XAML 中创建 Xamarin.Forms Entry 。\n2.  响应 Entry 的文本更改。\n3.  Entry 属性简介。\n\n<!-- more -->\n\n## 创建 Entry\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 EntryPage.xaml。\n3.  编辑 EntryPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.EntryPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Entry Placeholder=\"输入文本\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new EntryPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305155717799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 响应 Entry 的文本更改\n\n1.  编辑 EntryPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,32\">\n\t<Entry Placeholder=\"输入文本\"\n\t\t   TextChanged=\"OnEntryTextChanged\"\n\t\t   Completed=\"OnEntryCompleted\" />\n\t<Label Text=\"OldText\"\n\t\t   TextColor=\"LightGray\"/>\n\t<Label x:Name=\"labOld\" />\n\t<Label Text=\"NewText\"\n\t\t   TextColor=\"LightGray\" />\n\t<Label x:Name=\"labNew\" />\n\t<Label Text=\"CompletedText\"\n\t\t   TextColor=\"LightGray\" />\n\t<Label x:Name=\"labCompleted\" />\n</StackLayout>\n```\n\n> \\*_使用返回或完成键完成 Entry 中的文本输入时，才会触发 Completed 事件_\n\n2.  编辑 EntryPage.xaml.cs：\n\n```csharp\npublic void OnEntryTextChanged(object sender, TextChangedEventArgs e)\n{\n\tlabOld.Text = e.OldTextValue;\n\tlabNew.Text = e.NewTextValue;\n}\n\npublic void OnEntryCompleted(object sender, EventArgs e)\n{\n\tlabCompleted.Text = ((Entry)sender).Text;\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Entry 属性简介\n\n1.  编辑 EntryPage.xaml：\n\n```xml\n<Entry Placeholder=\"输入文本\"\n\t   MaxLength=\"15\"\n\t   IsSpellCheckEnabled=\"false\"\n\t   IsTextPredictionEnabled=\"false\"\n\t   IsPassword=\"true\"\n\t   TextChanged=\"OnEntryTextChanged\"\n\t   Completed=\"OnEntryCompleted\" />\n```\n\n> - MaxLength 限制输入长度\n> - IsSpellCheckEnabled 禁用拼写检查\n> - IsTextPredictionEnabled 禁用文本预测和自动文本预测\n> - IsPassword 对输入的字符进行掩码\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/5_Entry.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry\ndate: 2021-08-19 09:23:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示 Entry 属性 。\n\n1.  在 XAML 中创建 Xamarin.Forms Entry 。\n2.  响应 Entry 的文本更改。\n3.  Entry 属性简介。\n\n<!-- more -->\n\n## 创建 Entry\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 EntryPage.xaml。\n3.  编辑 EntryPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.EntryPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Entry Placeholder=\"输入文本\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new EntryPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305155717799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 响应 Entry 的文本更改\n\n1.  编辑 EntryPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,32\">\n\t<Entry Placeholder=\"输入文本\"\n\t\t   TextChanged=\"OnEntryTextChanged\"\n\t\t   Completed=\"OnEntryCompleted\" />\n\t<Label Text=\"OldText\"\n\t\t   TextColor=\"LightGray\"/>\n\t<Label x:Name=\"labOld\" />\n\t<Label Text=\"NewText\"\n\t\t   TextColor=\"LightGray\" />\n\t<Label x:Name=\"labNew\" />\n\t<Label Text=\"CompletedText\"\n\t\t   TextColor=\"LightGray\" />\n\t<Label x:Name=\"labCompleted\" />\n</StackLayout>\n```\n\n> \\*_使用返回或完成键完成 Entry 中的文本输入时，才会触发 Completed 事件_\n\n2.  编辑 EntryPage.xaml.cs：\n\n```csharp\npublic void OnEntryTextChanged(object sender, TextChangedEventArgs e)\n{\n\tlabOld.Text = e.OldTextValue;\n\tlabNew.Text = e.NewTextValue;\n}\n\npublic void OnEntryCompleted(object sender, EventArgs e)\n{\n\tlabCompleted.Text = ((Entry)sender).Text;\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Entry 属性简介\n\n1.  编辑 EntryPage.xaml：\n\n```xml\n<Entry Placeholder=\"输入文本\"\n\t   MaxLength=\"15\"\n\t   IsSpellCheckEnabled=\"false\"\n\t   IsTextPredictionEnabled=\"false\"\n\t   IsPassword=\"true\"\n\t   TextChanged=\"OnEntryTextChanged\"\n\t   Completed=\"OnEntryCompleted\" />\n```\n\n> - MaxLength 限制输入长度\n> - IsSpellCheckEnabled 禁用拼写检查\n> - IsTextPredictionEnabled 禁用文本预测和自动文本预测\n> - IsPassword 对输入的字符进行掩码\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/5_Entry","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y0002b4d0h4vuw864u","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示 Entry 属性 。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Entry 。</li>\n<li>响应 Entry 的文本更改。</li>\n<li>Entry 属性简介。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-Entry\"><a href=\"#创建-Entry\" class=\"headerlink\" title=\"创建 Entry\"></a>创建 Entry</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 EntryPage.xaml。</li>\n<li>编辑 EntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.EntryPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EntryPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305155717799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"响应-Entry-的文本更改\"><a href=\"#响应-Entry-的文本更改\" class=\"headerlink\" title=\"响应 Entry 的文本更改\"></a>响应 Entry 的文本更改</h2><ol>\n<li>编辑 EntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryTextChanged<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OldText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labOld<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labNew<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CompletedText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>*<em>使用返回或完成键完成 Entry 中的文本输入时，才会触发 Completed 事件</em></p>\n</blockquote>\n<ol start=\"2\">\n<li>编辑 EntryPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEntryTextChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabOld<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>OldTextValue<span class=\"token punctuation\">;</span>\n\tlabNew<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>NewTextValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEntryCompleted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabCompleted<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Entry<span class=\"token punctuation\">)</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Entry-属性简介\"><a href=\"#Entry-属性简介\" class=\"headerlink\" title=\"Entry 属性简介\"></a>Entry 属性简介</h2><ol>\n<li>编辑 EntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">MaxLength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>15<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">IsSpellCheckEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">IsTextPredictionEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">IsPassword</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryTextChanged<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>MaxLength 限制输入长度</li>\n<li>IsSpellCheckEnabled 禁用拼写检查</li>\n<li>IsTextPredictionEnabled 禁用文本预测和自动文本预测</li>\n<li>IsPassword 对输入的字符进行掩码</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示 Entry 属性 。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Entry 。</li>\n<li>响应 Entry 的文本更改。</li>\n<li>Entry 属性简介。</li>\n</ol>","more":"<h2 id=\"创建-Entry\"><a href=\"#创建-Entry\" class=\"headerlink\" title=\"创建 Entry\"></a>创建 Entry</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 EntryPage.xaml。</li>\n<li>编辑 EntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.EntryPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EntryPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305155717799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"响应-Entry-的文本更改\"><a href=\"#响应-Entry-的文本更改\" class=\"headerlink\" title=\"响应 Entry 的文本更改\"></a>响应 Entry 的文本更改</h2><ol>\n<li>编辑 EntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryTextChanged<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OldText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labOld<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labNew<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CompletedText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>*<em>使用返回或完成键完成 Entry 中的文本输入时，才会触发 Completed 事件</em></p>\n</blockquote>\n<ol start=\"2\">\n<li>编辑 EntryPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEntryTextChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabOld<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>OldTextValue<span class=\"token punctuation\">;</span>\n\tlabNew<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>NewTextValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEntryCompleted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabCompleted<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Entry<span class=\"token punctuation\">)</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Entry-属性简介\"><a href=\"#Entry-属性简介\" class=\"headerlink\" title=\"Entry 属性简介\"></a>Entry 属性简介</h2><ol>\n<li>编辑 EntryPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Entry</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">MaxLength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>15<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">IsSpellCheckEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">IsTextPredictionEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">IsPassword</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryTextChanged<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEntryCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>MaxLength 限制输入长度</li>\n<li>IsSpellCheckEnabled 禁用拼写检查</li>\n<li>IsTextPredictionEnabled 禁用文本预测和自动文本预测</li>\n<li>IsPassword 对输入的字符进行掩码</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 7 - Image","date":"2021-08-19T01:25:00.000Z","_content":"\n## 简介\n\n演示如何显示图像。\n\n1.  在 XAML 中创建 Xamarin.Forms Image 。\n2.  Image 基本属性。\n3.  Image 图片引用。\n\n<!-- more -->\n\n## 创建 Image\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 ImagePage.xaml。\n3.  编辑 ImagePage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.ImagePage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Image Source=\"https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg\"\n               HeightRequest=\"300\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> Image.Source 属性是 ImageSource 类型，可以是文件、URI 或本地资源\n\n> \\*_Image 默认保持图像的纵横比_\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new ImagePage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200306144958616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    > \\*_Image 自动将下载的图像缓存 24 小时_\n\n## Image 基本属性\n\n1.  编辑 ImagePage.xaml：\n\n```xml\n<Image Source=\"https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg\"\n       Aspect=\"Fill\"\n       HeightRequest=\"{OnPlatform iOS=300, Android=250}\"\n       WidthRequest=\"{OnPlatform iOS=300, Android=250}\"\n       HorizontalOptions=\"Center\" />\n```\n\n> - Aspect 图像的缩放模式\n> - OnPlatform 标记扩展可每个平台自定义值\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200306151617294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Image 图片引用\n\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jc2RuaW1nLmNuL2Nkbi9jb250ZW50LXRvb2xiYXIvY3Nkbi1sb2dvXy5wbmc?x-oss-process=image/format,png)\n\n1.  本地图片引用：\n\n- Android\n  ![](https://img-blog.csdnimg.cn/2020030615274837.png)\n  ![](https://img-blog.csdnimg.cn/20200306155233812.png)\n- IOS\n  ![](https://img-blog.csdnimg.cn/20200306152825162.png)\n  ![](https://img-blog.csdnimg.cn/20200306152949849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n  > 选择文件\n\n![](https://img-blog.csdnimg.cn/20200306153057589.png)\n\n> 重命名资源为文件名，保险与 Android 本地资源名称一致。\n\n![](https://img-blog.csdnimg.cn/20200306155621329.png)\n\n- 编辑 ImagePage.xaml：\n\n```xml\n<Image Source=\"csdn_logo\"\n       Aspect=\"Fill\"\n       HeightRequest=\"{OnPlatform iOS=88, Android=88}\"\n       WidthRequest=\"{OnPlatform iOS=180, Android=180}\"\n       HorizontalOptions=\"Center\" />\n```\n\n> Source 本地资源 Android 引用直接使用文件名称 \\*_使用 OnPlatform 标记可分别定义_\n\n- 调试 Android 上的应用：\n  ![](https://img-blog.csdnimg.cn/20200306153544175.png)\n\n2.  嵌入资源引用：\n    ![](https://img-blog.csdnimg.cn/20200306153912518.png)\n\n- 编辑 ImagePage.xaml：\n\n```xml\n<Image x:Name=\"imgIcon\" />\n```\n\n- 编辑 ImagePage.xaml.cs：\n\n```csharp\npublic ImagePage()\n{\n\tInitializeComponent();\n\timgIcon.Source = ImageSource.FromResource(\"AwesomeApp.Icons.delete.png\");\n}\n```\n\n> 使用 ImageSource.FromResource 查找嵌入资源 \\*_路径：资源所在程序集命名空间.文件夹.文件名.文件类型_\n\n- 调试 Android 上的应用：\n  ![](https://img-blog.csdnimg.cn/20200306155107769.png)\n","source":"_posts/Xamarin/Forms/7_Image.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 7 - Image\ndate: 2021-08-19 09:25:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何显示图像。\n\n1.  在 XAML 中创建 Xamarin.Forms Image 。\n2.  Image 基本属性。\n3.  Image 图片引用。\n\n<!-- more -->\n\n## 创建 Image\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 ImagePage.xaml。\n3.  编辑 ImagePage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.ImagePage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Image Source=\"https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg\"\n               HeightRequest=\"300\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> Image.Source 属性是 ImageSource 类型，可以是文件、URI 或本地资源\n\n> \\*_Image 默认保持图像的纵横比_\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new ImagePage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200306144958616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    > \\*_Image 自动将下载的图像缓存 24 小时_\n\n## Image 基本属性\n\n1.  编辑 ImagePage.xaml：\n\n```xml\n<Image Source=\"https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg\"\n       Aspect=\"Fill\"\n       HeightRequest=\"{OnPlatform iOS=300, Android=250}\"\n       WidthRequest=\"{OnPlatform iOS=300, Android=250}\"\n       HorizontalOptions=\"Center\" />\n```\n\n> - Aspect 图像的缩放模式\n> - OnPlatform 标记扩展可每个平台自定义值\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200306151617294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Image 图片引用\n\n![](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jc2RuaW1nLmNuL2Nkbi9jb250ZW50LXRvb2xiYXIvY3Nkbi1sb2dvXy5wbmc?x-oss-process=image/format,png)\n\n1.  本地图片引用：\n\n- Android\n  ![](https://img-blog.csdnimg.cn/2020030615274837.png)\n  ![](https://img-blog.csdnimg.cn/20200306155233812.png)\n- IOS\n  ![](https://img-blog.csdnimg.cn/20200306152825162.png)\n  ![](https://img-blog.csdnimg.cn/20200306152949849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n  > 选择文件\n\n![](https://img-blog.csdnimg.cn/20200306153057589.png)\n\n> 重命名资源为文件名，保险与 Android 本地资源名称一致。\n\n![](https://img-blog.csdnimg.cn/20200306155621329.png)\n\n- 编辑 ImagePage.xaml：\n\n```xml\n<Image Source=\"csdn_logo\"\n       Aspect=\"Fill\"\n       HeightRequest=\"{OnPlatform iOS=88, Android=88}\"\n       WidthRequest=\"{OnPlatform iOS=180, Android=180}\"\n       HorizontalOptions=\"Center\" />\n```\n\n> Source 本地资源 Android 引用直接使用文件名称 \\*_使用 OnPlatform 标记可分别定义_\n\n- 调试 Android 上的应用：\n  ![](https://img-blog.csdnimg.cn/20200306153544175.png)\n\n2.  嵌入资源引用：\n    ![](https://img-blog.csdnimg.cn/20200306153912518.png)\n\n- 编辑 ImagePage.xaml：\n\n```xml\n<Image x:Name=\"imgIcon\" />\n```\n\n- 编辑 ImagePage.xaml.cs：\n\n```csharp\npublic ImagePage()\n{\n\tInitializeComponent();\n\timgIcon.Source = ImageSource.FromResource(\"AwesomeApp.Icons.delete.png\");\n}\n```\n\n> 使用 ImageSource.FromResource 查找嵌入资源 \\*_路径：资源所在程序集命名空间.文件夹.文件名.文件类型_\n\n- 调试 Android 上的应用：\n  ![](https://img-blog.csdnimg.cn/20200306155107769.png)\n","slug":"Xamarin/Forms/7_Image","published":1,"updated":"2022-07-01T07:50:20.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y0002e4d0hc2etgsqa","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何显示图像。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Image 。</li>\n<li>Image 基本属性。</li>\n<li>Image 图片引用。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-Image\"><a href=\"#创建-Image\" class=\"headerlink\" title=\"创建 Image\"></a>创建 Image</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 ImagePage.xaml。</li>\n<li>编辑 ImagePage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.ImagePage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Image.Source 属性是 ImageSource 类型，可以是文件、URI 或本地资源</p>\n</blockquote>\n<blockquote>\n<p>*<em>Image 默认保持图像的纵横比</em></p>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ImagePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306144958616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>*<em>Image 自动将下载的图像缓存 24 小时</em></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"Image-基本属性\"><a href=\"#Image-基本属性\" class=\"headerlink\" title=\"Image 基本属性\"></a>Image 基本属性</h2><ol>\n<li>编辑 ImagePage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">Aspect</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=300, Android=250&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=300, Android=250&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>Aspect 图像的缩放模式</li>\n<li>OnPlatform 标记扩展可每个平台自定义值</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306151617294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Image-图片引用\"><a href=\"#Image-图片引用\" class=\"headerlink\" title=\"Image 图片引用\"></a>Image 图片引用</h2><p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jc2RuaW1nLmNuL2Nkbi9jb250ZW50LXRvb2xiYXIvY3Nkbi1sb2dvXy5wbmc?x-oss-process=image/format,png\"></p>\n<ol>\n<li>本地图片引用：</li>\n</ol>\n<ul>\n<li>Android<br><img data-src=\"https://img-blog.csdnimg.cn/2020030615274837.png\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200306155233812.png\"></li>\n<li>IOS<br><img data-src=\"https://img-blog.csdnimg.cn/20200306152825162.png\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200306152949849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>选择文件</p>\n</blockquote>\n</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200306153057589.png\"></p>\n<blockquote>\n<p>重命名资源为文件名，保险与 Android 本地资源名称一致。</p>\n</blockquote>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200306155621329.png\"></p>\n<ul>\n<li>编辑 ImagePage.xaml：</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>csdn_logo<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">Aspect</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=88, Android=88&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=180, Android=180&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Source 本地资源 Android 引用直接使用文件名称 *<em>使用 OnPlatform 标记可分别定义</em></p>\n</blockquote>\n<ul>\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306153544175.png\"></li>\n</ul>\n<ol start=\"2\">\n<li>嵌入资源引用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306153912518.png\"></li>\n</ol>\n<ul>\n<li>编辑 ImagePage.xaml：</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>imgIcon<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>编辑 ImagePage.xaml.cs：</li>\n</ul>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">ImagePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\timgIcon<span class=\"token punctuation\">.</span>Source <span class=\"token operator\">=</span> ImageSource<span class=\"token punctuation\">.</span><span class=\"token function\">FromResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AwesomeApp.Icons.delete.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>使用 ImageSource.FromResource 查找嵌入资源 *<em>路径：资源所在程序集命名空间.文件夹.文件名.文件类型</em></p>\n</blockquote>\n<ul>\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306155107769.png\"></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何显示图像。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Image 。</li>\n<li>Image 基本属性。</li>\n<li>Image 图片引用。</li>\n</ol>","more":"<h2 id=\"创建-Image\"><a href=\"#创建-Image\" class=\"headerlink\" title=\"创建 Image\"></a>创建 Image</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 ImagePage.xaml。</li>\n<li>编辑 ImagePage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.ImagePage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg<span class=\"token punctuation\">\"</span></span>\n               <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Image.Source 属性是 ImageSource 类型，可以是文件、URI 或本地资源</p>\n</blockquote>\n<blockquote>\n<p>*<em>Image 默认保持图像的纵横比</em></p>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ImagePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306144958616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>*<em>Image 自动将下载的图像缓存 24 小时</em></p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"Image-基本属性\"><a href=\"#Image-基本属性\" class=\"headerlink\" title=\"Image 基本属性\"></a>Image 基本属性</h2><ol>\n<li>编辑 ImagePage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">Aspect</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=300, Android=250&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=300, Android=250&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>Aspect 图像的缩放模式</li>\n<li>OnPlatform 标记扩展可每个平台自定义值</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306151617294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Image-图片引用\"><a href=\"#Image-图片引用\" class=\"headerlink\" title=\"Image 图片引用\"></a>Image 图片引用</h2><p><img data-src=\"https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jc2RuaW1nLmNuL2Nkbi9jb250ZW50LXRvb2xiYXIvY3Nkbi1sb2dvXy5wbmc?x-oss-process=image/format,png\"></p>\n<ol>\n<li>本地图片引用：</li>\n</ol>\n<ul>\n<li>Android<br><img data-src=\"https://img-blog.csdnimg.cn/2020030615274837.png\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200306155233812.png\"></li>\n<li>IOS<br><img data-src=\"https://img-blog.csdnimg.cn/20200306152825162.png\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200306152949849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>选择文件</p>\n</blockquote>\n</li>\n</ul>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200306153057589.png\"></p>\n<blockquote>\n<p>重命名资源为文件名，保险与 Android 本地资源名称一致。</p>\n</blockquote>\n<p><img data-src=\"https://img-blog.csdnimg.cn/20200306155621329.png\"></p>\n<ul>\n<li>编辑 ImagePage.xaml：</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>csdn_logo<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">Aspect</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Fill<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=88, Android=88&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;OnPlatform iOS=180, Android=180&#125;<span class=\"token punctuation\">\"</span></span>\n       <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Source 本地资源 Android 引用直接使用文件名称 *<em>使用 OnPlatform 标记可分别定义</em></p>\n</blockquote>\n<ul>\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306153544175.png\"></li>\n</ul>\n<ol start=\"2\">\n<li>嵌入资源引用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306153912518.png\"></li>\n</ol>\n<ul>\n<li>编辑 ImagePage.xaml：</li>\n</ul>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>imgIcon<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<ul>\n<li>编辑 ImagePage.xaml.cs：</li>\n</ul>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">ImagePage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\timgIcon<span class=\"token punctuation\">.</span>Source <span class=\"token operator\">=</span> ImageSource<span class=\"token punctuation\">.</span><span class=\"token function\">FromResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AwesomeApp.Icons.delete.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>使用 ImageSource.FromResource 查找嵌入资源 *<em>路径：资源所在程序集命名空间.文件夹.文件名.文件类型</em></p>\n</blockquote>\n<ul>\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306155107769.png\"></li>\n</ul>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor","date":"2021-08-19T01:24:00.000Z","_content":"\n## 简介\n\n演示 Editor 属性。\n\n1.  在 XAML 中创建 Xamarin.Forms Editor 。\n2.  响应 Editor 的文本更改。\n3.  Editor 属性简介。\n\n<!-- more -->\n\n## 创建 Editor\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 EditorPage.xaml。\n3.  编辑 EditorPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.EditorPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Editor Placeholder=\"输入文本\"\n\t\t\t\t\tAutoSize=\"TextChanges\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> AutoSize 设备 Editor 按内容输入自动高度 4. 编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new EditorPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200306114715300.png)\n\n## 响应 Editor 的文本更改\n\n1.  编辑 EditorPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,32\">\n\t<Editor Placeholder=\"输入文本\"\n\t\t\tTextChanged=\"OnEditorTextChanged\"\n\t\t\tCompleted=\"OnEditorCompleted\" />\n\t<Label Text=\"OldText\"\n\t\t   TextColor=\"Black\"/>\n\t<Label x:Name=\"labOld\" />\n\t<Label Text=\"NewText\"\n\t\t   TextColor=\"Black\" />\n\t<Label x:Name=\"labNew\" />\n\t<Label Text=\"CompletedText\"\n\t\t   TextColor=\"Black\" />\n\t<Label x:Name=\"labCompleted\" />\n</StackLayout>\n```\n\n> \\*_使用返回或完成键完成 Editor 中的文本输入时，才会触发 Completed 事件_\n\n2.  编辑 EditorPage.xaml.cs：\n\n```csharp\npublic void OnEditorTextChanged(object sender, TextChangedEventArgs e)\n{\n\tlabOld.Text = e.OldTextValue;\n\tlabNew.Text = e.NewTextValue;\n}\n\npublic void OnEditorCompleted(object sender, EventArgs e)\n{\n\tlabCompleted.Text = ((Editor)sender).Text;\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Editor 属性简介\n\n1.  编辑 EditorPage.xaml：\n\n```xml\n<Editor Placeholder=\"输入文本\"\n\t\tAutoSize=\"TextChanges\"\n\t\tMaxLength=\"300\"\n\t\tIsSpellCheckEnabled=\"false\"\n\t\tIsTextPredictionEnabled=\"false\"\n\t\tTextChanged=\"OnEditorTextChanged\"\n\t\tCompleted=\"OnEditorCompleted\" />\n```\n\n> - MaxLength 限制输入长度\n> - IsSpellCheckEnabled 禁用拼写检查\n> - IsTextPredictionEnabled 禁用文本预测和自动文本预测\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/6_Editor.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor\ndate: 2021-08-19 09:24:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示 Editor 属性。\n\n1.  在 XAML 中创建 Xamarin.Forms Editor 。\n2.  响应 Editor 的文本更改。\n3.  Editor 属性简介。\n\n<!-- more -->\n\n## 创建 Editor\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 EditorPage.xaml。\n3.  编辑 EditorPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.EditorPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Editor Placeholder=\"输入文本\"\n\t\t\t\t\tAutoSize=\"TextChanges\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> AutoSize 设备 Editor 按内容输入自动高度 4. 编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new EditorPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200306114715300.png)\n\n## 响应 Editor 的文本更改\n\n1.  编辑 EditorPage.xaml：\n\n```xml\n<StackLayout Margin=\"20,32\">\n\t<Editor Placeholder=\"输入文本\"\n\t\t\tTextChanged=\"OnEditorTextChanged\"\n\t\t\tCompleted=\"OnEditorCompleted\" />\n\t<Label Text=\"OldText\"\n\t\t   TextColor=\"Black\"/>\n\t<Label x:Name=\"labOld\" />\n\t<Label Text=\"NewText\"\n\t\t   TextColor=\"Black\" />\n\t<Label x:Name=\"labNew\" />\n\t<Label Text=\"CompletedText\"\n\t\t   TextColor=\"Black\" />\n\t<Label x:Name=\"labCompleted\" />\n</StackLayout>\n```\n\n> \\*_使用返回或完成键完成 Editor 中的文本输入时，才会触发 Completed 事件_\n\n2.  编辑 EditorPage.xaml.cs：\n\n```csharp\npublic void OnEditorTextChanged(object sender, TextChangedEventArgs e)\n{\n\tlabOld.Text = e.OldTextValue;\n\tlabNew.Text = e.NewTextValue;\n}\n\npublic void OnEditorCompleted(object sender, EventArgs e)\n{\n\tlabCompleted.Text = ((Editor)sender).Text;\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Editor 属性简介\n\n1.  编辑 EditorPage.xaml：\n\n```xml\n<Editor Placeholder=\"输入文本\"\n\t\tAutoSize=\"TextChanges\"\n\t\tMaxLength=\"300\"\n\t\tIsSpellCheckEnabled=\"false\"\n\t\tIsTextPredictionEnabled=\"false\"\n\t\tTextChanged=\"OnEditorTextChanged\"\n\t\tCompleted=\"OnEditorCompleted\" />\n```\n\n> - MaxLength 限制输入长度\n> - IsSpellCheckEnabled 禁用拼写检查\n> - IsTextPredictionEnabled 禁用文本预测和自动文本预测\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/6_Editor","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y1002g4d0hbcxqcv59","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示 Editor 属性。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Editor 。</li>\n<li>响应 Editor 的文本更改。</li>\n<li>Editor 属性简介。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-Editor\"><a href=\"#创建-Editor\" class=\"headerlink\" title=\"创建 Editor\"></a>创建 Editor</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 EditorPage.xaml。</li>\n<li>编辑 EditorPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.EditorPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">AutoSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextChanges<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>AutoSize 设备 Editor 按内容输入自动高度 4. 编辑 App.xaml.cs：</p>\n</blockquote>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EditorPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306114715300.png\"></li>\n</ol>\n<h2 id=\"响应-Editor-的文本更改\"><a href=\"#响应-Editor-的文本更改\" class=\"headerlink\" title=\"响应 Editor 的文本更改\"></a>响应 Editor 的文本更改</h2><ol>\n<li>编辑 EditorPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorTextChanged<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OldText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labOld<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labNew<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CompletedText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>*<em>使用返回或完成键完成 Editor 中的文本输入时，才会触发 Completed 事件</em></p>\n</blockquote>\n<ol start=\"2\">\n<li>编辑 EditorPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEditorTextChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabOld<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>OldTextValue<span class=\"token punctuation\">;</span>\n\tlabNew<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>NewTextValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEditorCompleted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabCompleted<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Editor<span class=\"token punctuation\">)</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Editor-属性简介\"><a href=\"#Editor-属性简介\" class=\"headerlink\" title=\"Editor 属性简介\"></a>Editor 属性简介</h2><ol>\n<li>编辑 EditorPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">AutoSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextChanges<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">MaxLength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">IsSpellCheckEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">IsTextPredictionEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorTextChanged<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>MaxLength 限制输入长度</li>\n<li>IsSpellCheckEnabled 禁用拼写检查</li>\n<li>IsTextPredictionEnabled 禁用文本预测和自动文本预测</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示 Editor 属性。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Editor 。</li>\n<li>响应 Editor 的文本更改。</li>\n<li>Editor 属性简介。</li>\n</ol>","more":"<h2 id=\"创建-Editor\"><a href=\"#创建-Editor\" class=\"headerlink\" title=\"创建 Editor\"></a>创建 Editor</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 EditorPage.xaml。</li>\n<li>编辑 EditorPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.EditorPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">AutoSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextChanges<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>AutoSize 设备 Editor 按内容输入自动高度 4. 编辑 App.xaml.cs：</p>\n</blockquote>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">EditorPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306114715300.png\"></li>\n</ol>\n<h2 id=\"响应-Editor-的文本更改\"><a href=\"#响应-Editor-的文本更改\" class=\"headerlink\" title=\"响应 Editor 的文本更改\"></a>响应 Editor 的文本更改</h2><ol>\n<li>编辑 EditorPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorTextChanged<span class=\"token punctuation\">\"</span></span>\n\t\t\t<span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OldText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labOld<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labNew<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CompletedText<span class=\"token punctuation\">\"</span></span>\n\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>labCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>*<em>使用返回或完成键完成 Editor 中的文本输入时，才会触发 Completed 事件</em></p>\n</blockquote>\n<ol start=\"2\">\n<li>编辑 EditorPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEditorTextChanged</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TextChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabOld<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>OldTextValue<span class=\"token punctuation\">;</span>\n\tlabNew<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>NewTextValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEditorCompleted</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlabCompleted<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Editor<span class=\"token punctuation\">)</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Editor-属性简介\"><a href=\"#Editor-属性简介\" class=\"headerlink\" title=\"Editor 属性简介\"></a>Editor 属性简介</h2><ol>\n<li>编辑 EditorPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Editor</span> <span class=\"token attr-name\">Placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>输入文本<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">AutoSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TextChanges<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">MaxLength</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>300<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">IsSpellCheckEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">IsTextPredictionEnabled</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">TextChanged</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorTextChanged<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Completed</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnEditorCompleted<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>MaxLength 限制输入长度</li>\n<li>IsSpellCheckEnabled 禁用拼写检查</li>\n<li>IsTextPredictionEnabled 禁用文本预测和自动文本预测</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid","date":"2021-08-19T01:20:00.000Z","_content":"\n## 简介\n\n演示如何在 Grid 中布局。\n\n1.  在 XAML 中创建 Xamarin.Forms Grid。\n2.  指定 Grid 的列和行。\n3.  涉及 Grid 中多列或多行的内容。\n\n<!-- more -->\n\n## 创建 Grid\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 GridPage.xaml：\n    ![](https://img-blog.csdnimg.cn/20200305132648634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  编辑 GridPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.GridPage\">\n    <ContentPage.Content>\n\t\t<Grid Margin=\"20,35\">\n\t\t\t<Label Text=\"设置Grid.Margin，可控制Grid外边距。\" />\n\t\t</Grid>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> \\*_除 Margin 属性外，还可在 Grid 上设置 Padding 属性。 Padding 指定 Grid 的内边距。_\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new GridPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305140418953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 行列配置\n\n1.  编辑 GridPage.xaml：\n\n```xml\n<Grid Margin=\"20,35,20,20\">\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"0.5*\" />\n        <ColumnDefinition Width=\"0.5*\" />\n    </Grid.ColumnDefinitions>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"50\" />\n        <RowDefinition Height=\"50\" />\n    </Grid.RowDefinitions>\n    <Label Text=\"Column 0, Row 0\" />\n    <Label Grid.Column=\"1\"\n           Text=\"Column 1, Row 0\" />\n    <Label Grid.Row=\"1\"\n           Text=\"Column 0, Row 1\" />\n    <Label Grid.Column=\"1\"\n           Grid.Row=\"1\"\n           Text=\"Column 1, Row 1\" />\n</Grid>\n```\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305143245643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    > 有效的宽度值和高度值为：\n    >\n    > - Auto 对列或行进行大小调整以适应内容。\n    > - 比例值，将列和行的大小设置为剩余空间的比例。 以 \\* 结尾表示比例值。\n    > - 绝对值，使用特定的固定值调整列或行的大小。\n\n> \\*_可以使用 ColumnSpacing 和 RowSpacing 属性设置 Grid 中列和行之间的间距_\n\n## 跨行跨列\n\n1.  编辑 GridPage.xaml：\n\n```xml\n<Grid Margin=\"20,35,20,20\">\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"0.5*\" />\n        <ColumnDefinition Width=\"0.5*\" />\n    </Grid.ColumnDefinitions>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"50\" />\n        <RowDefinition Height=\"30\" />\n        <RowDefinition Height=\"30\" />\n    </Grid.RowDefinitions>\n    <Label Grid.ColumnSpan=\"2\"\n           Text=\"This text uses the ColumnSpan property to span both columns.\" />\n    <Label Grid.Row=\"1\"\n           Grid.RowSpan=\"2\"\n           Text=\"This text uses the RowSpan property to span two rows.\" />\n</Grid>\n```\n\n> ColumnSpan 跨越多列，RowSpan 跨越多行\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305145400950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/2_Grid.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid\ndate: 2021-08-19 09:20:00\ncategories:\n\t- 学习笔记\ntags:\n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何在 Grid 中布局。\n\n1.  在 XAML 中创建 Xamarin.Forms Grid。\n2.  指定 Grid 的列和行。\n3.  涉及 Grid 中多列或多行的内容。\n\n<!-- more -->\n\n## 创建 Grid\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 GridPage.xaml：\n    ![](https://img-blog.csdnimg.cn/20200305132648634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  编辑 GridPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.GridPage\">\n    <ContentPage.Content>\n\t\t<Grid Margin=\"20,35\">\n\t\t\t<Label Text=\"设置Grid.Margin，可控制Grid外边距。\" />\n\t\t</Grid>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> \\*_除 Margin 属性外，还可在 Grid 上设置 Padding 属性。 Padding 指定 Grid 的内边距。_\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new GridPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305140418953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 行列配置\n\n1.  编辑 GridPage.xaml：\n\n```xml\n<Grid Margin=\"20,35,20,20\">\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"0.5*\" />\n        <ColumnDefinition Width=\"0.5*\" />\n    </Grid.ColumnDefinitions>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"50\" />\n        <RowDefinition Height=\"50\" />\n    </Grid.RowDefinitions>\n    <Label Text=\"Column 0, Row 0\" />\n    <Label Grid.Column=\"1\"\n           Text=\"Column 1, Row 0\" />\n    <Label Grid.Row=\"1\"\n           Text=\"Column 0, Row 1\" />\n    <Label Grid.Column=\"1\"\n           Grid.Row=\"1\"\n           Text=\"Column 1, Row 1\" />\n</Grid>\n```\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305143245643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    > 有效的宽度值和高度值为：\n    >\n    > - Auto 对列或行进行大小调整以适应内容。\n    > - 比例值，将列和行的大小设置为剩余空间的比例。 以 \\* 结尾表示比例值。\n    > - 绝对值，使用特定的固定值调整列或行的大小。\n\n> \\*_可以使用 ColumnSpacing 和 RowSpacing 属性设置 Grid 中列和行之间的间距_\n\n## 跨行跨列\n\n1.  编辑 GridPage.xaml：\n\n```xml\n<Grid Margin=\"20,35,20,20\">\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"0.5*\" />\n        <ColumnDefinition Width=\"0.5*\" />\n    </Grid.ColumnDefinitions>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"50\" />\n        <RowDefinition Height=\"30\" />\n        <RowDefinition Height=\"30\" />\n    </Grid.RowDefinitions>\n    <Label Grid.ColumnSpan=\"2\"\n           Text=\"This text uses the ColumnSpan property to span both columns.\" />\n    <Label Grid.Row=\"1\"\n           Grid.RowSpan=\"2\"\n           Text=\"This text uses the RowSpan property to span two rows.\" />\n</Grid>\n```\n\n> ColumnSpan 跨越多列，RowSpan 跨越多行\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305145400950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/2_Grid","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y1002j4d0h14ekh19t","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 Grid 中布局。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Grid。</li>\n<li>指定 Grid 的列和行。</li>\n<li>涉及 Grid 中多列或多行的内容。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-Grid\"><a href=\"#创建-Grid\" class=\"headerlink\" title=\"创建 Grid\"></a>创建 Grid</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 GridPage.xaml：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305132648634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>编辑 GridPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.GridPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>设置Grid.Margin，可控制Grid外边距。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>*<em>除 Margin 属性外，还可在 Grid 上设置 Padding 属性。 Padding 指定 Grid 的内边距。</em></p>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GridPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305140418953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"行列配置\"><a href=\"#行列配置\" class=\"headerlink\" title=\"行列配置\"></a>行列配置</h2><ol>\n<li>编辑 GridPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35,20,20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 0, Row 0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 1, Row 0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 0, Row 1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 1, Row 1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305143245643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>有效的宽度值和高度值为：</p>\n<ul>\n<li>Auto 对列或行进行大小调整以适应内容。</li>\n<li>比例值，将列和行的大小设置为剩余空间的比例。 以 * 结尾表示比例值。</li>\n<li>绝对值，使用特定的固定值调整列或行的大小。</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>*<em>可以使用 ColumnSpacing 和 RowSpacing 属性设置 Grid 中列和行之间的间距</em></p>\n</blockquote>\n<h2 id=\"跨行跨列\"><a href=\"#跨行跨列\" class=\"headerlink\" title=\"跨行跨列\"></a>跨行跨列</h2><ol>\n<li>编辑 GridPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35,20,20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.ColumnSpan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>This text uses the ColumnSpan property to span both columns.<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Grid.RowSpan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>This text uses the RowSpan property to span two rows.<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>ColumnSpan 跨越多列，RowSpan 跨越多行</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305145400950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 Grid 中布局。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Grid。</li>\n<li>指定 Grid 的列和行。</li>\n<li>涉及 Grid 中多列或多行的内容。</li>\n</ol>","more":"<h2 id=\"创建-Grid\"><a href=\"#创建-Grid\" class=\"headerlink\" title=\"创建 Grid\"></a>创建 Grid</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 GridPage.xaml：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305132648634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>编辑 GridPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.GridPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>设置Grid.Margin，可控制Grid外边距。<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>*<em>除 Margin 属性外，还可在 Grid 上设置 Padding 属性。 Padding 指定 Grid 的内边距。</em></p>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GridPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305140418953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"行列配置\"><a href=\"#行列配置\" class=\"headerlink\" title=\"行列配置\"></a>行列配置</h2><ol>\n<li>编辑 GridPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35,20,20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 0, Row 0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 1, Row 0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 0, Row 1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column 1, Row 1<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305143245643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><blockquote>\n<p>有效的宽度值和高度值为：</p>\n<ul>\n<li>Auto 对列或行进行大小调整以适应内容。</li>\n<li>比例值，将列和行的大小设置为剩余空间的比例。 以 * 结尾表示比例值。</li>\n<li>绝对值，使用特定的固定值调整列或行的大小。</li>\n</ul>\n</blockquote>\n</li>\n</ol>\n<blockquote>\n<p>*<em>可以使用 ColumnSpacing 和 RowSpacing 属性设置 Grid 中列和行之间的间距</em></p>\n</blockquote>\n<h2 id=\"跨行跨列\"><a href=\"#跨行跨列\" class=\"headerlink\" title=\"跨行跨列\"></a>跨行跨列</h2><ol>\n<li>编辑 GridPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,35,20,20<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0.5*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>30<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.ColumnSpan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>This text uses the ColumnSpan property to span both columns.<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Grid.RowSpan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n           <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>This text uses the RowSpan property to span two rows.<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>ColumnSpan 跨越多列，RowSpan 跨越多行</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305145400950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 4 - Button","date":"2021-08-19T01:22:00.000Z","_content":"\n## 简介\n\n演示如何自定义 Button。\n\n1.  在 XAML 中创建 Xamarin.Forms Button。\n2.  Button 点击事件。\n3.  更改 Button 的样式。\n\n<!-- more -->\n\n## 创建 Button\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 ButtonPage.xaml。\n3.  编辑 ButtonPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.ButtonPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout>\n\t\t\t<Button Text=\"欢迎使用 Xamarin.Forms！\"\n                VerticalOptions=\"CenterAndExpand\"\n                HorizontalOptions=\"CenterAndExpand\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new ButtonPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/2020030515320694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Button 点击事件\n\n1.  编辑 ButtonPage.xaml：\n\n```xml\n<Button Text=\"欢迎使用 Xamarin.Forms！\"\n\t\tx:Name=\"btnWel\"\n        VerticalOptions=\"CenterAndExpand\"\n        HorizontalOptions=\"CenterAndExpand\"\n\t\tClicked=\"OnButtonClicked\"/>\n```\n\n> 除了 Clicked 事件，Button 还定义了 Pressed 和 Released 事件\n\n2.  编辑 ButtonPage.xaml.cs：\n\n```csharp\nprivate void OnButtonClicked(object sender, EventArgs e)\n{\n\tbtnWel.Text = \"你点击了我一下！\";\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305153708933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 更改 Button 的样式\n\n1.  编辑 ButtonPage.xaml：\n\n```xml\n<Button Text=\"欢迎使用 Xamarin.Forms！\"\n\t\tx:Name=\"btnWel\"\n        VerticalOptions=\"CenterAndExpand\"\n        HorizontalOptions=\"Center\"\n        TextColor=\"Black\"\n\t\tFontSize=\"20\"\n        BackgroundColor=\"LightGray\"\n        BorderColor=\"Gray\"\n        BorderWidth=\"5\"\n        CornerRadius=\"5\"\n        WidthRequest=\"240\"\n        HeightRequest=\"120\"\n\t\tClicked=\"OnButtonClicked\"/>\n```\n\n> BorderColor 设置边框颜色，BorderWidth 设置边框宽度，CornerRadius 设置圆角大小，WidthRequest 和 HeightRequest 设置 Button 大小\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305154412650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/4_Button.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 4 - Button\ndate: 2021-08-19 09:22:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何自定义 Button。\n\n1.  在 XAML 中创建 Xamarin.Forms Button。\n2.  Button 点击事件。\n3.  更改 Button 的样式。\n\n<!-- more -->\n\n## 创建 Button\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 ButtonPage.xaml。\n3.  编辑 ButtonPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.ButtonPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout>\n\t\t\t<Button Text=\"欢迎使用 Xamarin.Forms！\"\n                VerticalOptions=\"CenterAndExpand\"\n                HorizontalOptions=\"CenterAndExpand\" />\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new ButtonPage();\n}\n```\n\n5.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/2020030515320694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## Button 点击事件\n\n1.  编辑 ButtonPage.xaml：\n\n```xml\n<Button Text=\"欢迎使用 Xamarin.Forms！\"\n\t\tx:Name=\"btnWel\"\n        VerticalOptions=\"CenterAndExpand\"\n        HorizontalOptions=\"CenterAndExpand\"\n\t\tClicked=\"OnButtonClicked\"/>\n```\n\n> 除了 Clicked 事件，Button 还定义了 Pressed 和 Released 事件\n\n2.  编辑 ButtonPage.xaml.cs：\n\n```csharp\nprivate void OnButtonClicked(object sender, EventArgs e)\n{\n\tbtnWel.Text = \"你点击了我一下！\";\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305153708933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 更改 Button 的样式\n\n1.  编辑 ButtonPage.xaml：\n\n```xml\n<Button Text=\"欢迎使用 Xamarin.Forms！\"\n\t\tx:Name=\"btnWel\"\n        VerticalOptions=\"CenterAndExpand\"\n        HorizontalOptions=\"Center\"\n        TextColor=\"Black\"\n\t\tFontSize=\"20\"\n        BackgroundColor=\"LightGray\"\n        BorderColor=\"Gray\"\n        BorderWidth=\"5\"\n        CornerRadius=\"5\"\n        WidthRequest=\"240\"\n        HeightRequest=\"120\"\n\t\tClicked=\"OnButtonClicked\"/>\n```\n\n> BorderColor 设置边框颜色，BorderWidth 设置边框宽度，CornerRadius 设置圆角大小，WidthRequest 和 HeightRequest 设置 Button 大小\n\n2.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305154412650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/4_Button","published":1,"updated":"2022-07-01T07:50:20.944Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y1002m4d0hcn28fsnn","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何自定义 Button。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Button。</li>\n<li>Button 点击事件。</li>\n<li>更改 Button 的样式。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-Button\"><a href=\"#创建-Button\" class=\"headerlink\" title=\"创建 Button\"></a>创建 Button</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 ButtonPage.xaml。</li>\n<li>编辑 ButtonPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.ButtonPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ButtonPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/2020030515320694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Button-点击事件\"><a href=\"#Button-点击事件\" class=\"headerlink\" title=\"Button 点击事件\"></a>Button 点击事件</h2><ol>\n<li>编辑 ButtonPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btnWel<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnButtonClicked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>除了 Clicked 事件，Button 还定义了 Pressed 和 Released 事件</p>\n</blockquote>\n<ol start=\"2\">\n<li>编辑 ButtonPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tbtnWel<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"你点击了我一下！\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305153708933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"更改-Button-的样式\"><a href=\"#更改-Button-的样式\" class=\"headerlink\" title=\"更改 Button 的样式\"></a>更改 Button 的样式</h2><ol>\n<li>编辑 ButtonPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btnWel<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">BorderColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">BorderWidth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">CornerRadius</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>240<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>120<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnButtonClicked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>BorderColor 设置边框颜色，BorderWidth 设置边框宽度，CornerRadius 设置圆角大小，WidthRequest 和 HeightRequest 设置 Button 大小</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305154412650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何自定义 Button。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms Button。</li>\n<li>Button 点击事件。</li>\n<li>更改 Button 的样式。</li>\n</ol>","more":"<h2 id=\"创建-Button\"><a href=\"#创建-Button\" class=\"headerlink\" title=\"创建 Button\"></a>创建 Button</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 ButtonPage.xaml。</li>\n<li>编辑 ButtonPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.ButtonPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ButtonPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/2020030515320694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"Button-点击事件\"><a href=\"#Button-点击事件\" class=\"headerlink\" title=\"Button 点击事件\"></a>Button 点击事件</h2><ol>\n<li>编辑 ButtonPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btnWel<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnButtonClicked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>除了 Clicked 事件，Button 还定义了 Pressed 和 Released 事件</p>\n</blockquote>\n<ol start=\"2\">\n<li>编辑 ButtonPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnButtonClicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tbtnWel<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token string\">\"你点击了我一下！\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305153708933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"更改-Button-的样式\"><a href=\"#更改-Button-的样式\" class=\"headerlink\" title=\"更改 Button 的样式\"></a>更改 Button 的样式</h2><ol>\n<li>编辑 ButtonPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用 Xamarin.Forms！<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>btnWel<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">FontSize</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">BorderColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">BorderWidth</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">CornerRadius</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>240<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>120<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>OnButtonClicked<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>BorderColor 设置边框颜色，BorderWidth 设置边框宽度，CornerRadius 设置圆角大小，WidthRequest 和 HeightRequest 设置 Button 大小</p>\n</blockquote>\n<ol start=\"2\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305154412650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView","date":"2021-08-19T01:26:00.000Z","_content":"\n## 简介\n\n演示如何自定义 ListView。\n\n1.  在 XAML 中创建 Xamarin.Forms ListView 。\n2.  ListView 数据绑定。\n3.  ListView 选择事件。\n4.  ListView 自定义单元格。\n\n<!-- more -->\n\n## 创建 ListView\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 ListViewPage.xaml。\n3.  编辑 ListViewPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.ListViewPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<ListView x:Name=\"list\"\n\t\t\t\t\t  SeparatorColor=\"Gray\">\n\t\t\t\t<ListView.ItemsSource>\n\t\t\t\t\t<x:Array Type=\"{x:Type x:String}\">\n\t\t\t\t\t\t<x:String>Item1</x:String>\n\t\t\t\t\t\t<x:String>Item2</x:String>\n\t\t\t\t\t\t<x:String>Item3</x:String>\n\t\t\t\t\t\t<x:String>Item4</x:String>\n\t\t\t\t\t\t<x:String>Item5</x:String>\n\t\t\t\t\t\t<x:String>Item6</x:String>\n\t\t\t\t\t\t<x:String>Item7</x:String>\n\t\t\t\t\t\t<x:String>Item8</x:String>\n\t\t\t\t\t\t<x:String>Item9</x:String>\n\t\t\t\t\t</x:Array>\n\t\t\t\t</ListView.ItemsSource>\n\t\t\t\t<ListView.ItemTemplate>\n\t\t\t\t\t<DataTemplate>\n\t\t\t\t\t\t<TextCell Text=\"{Binding .}\"\n\t\t\t\t\t\t\t\t  TextColor=\"Black\" />\n\t\t\t\t\t</DataTemplate>\n\t\t\t\t</ListView.ItemTemplate>\n\t\t\t</ListView>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> - ItemsSource 指定了一个字符串数组做为数据源\n> - ItemTemplate 定义了一个文本单元格\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new ListViewPage();\n}\n```\n\n5.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200306172716586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 数据绑定\n\n1.  编辑 ListViewPage.xaml：\n\n```xml\n<ListView x:Name=\"list\"\n\t\t  SeparatorColor=\"Gray\">\n\t<ListView.ItemTemplate>\n\t\t<DataTemplate>\n\t\t\t<ImageCell ImageSource=\"{Binding Image}\"\n\t\t\t\t\t   Text=\"{Binding Title}\"\n\t\t\t\t\t   TextColor=\"Black\"\n\t\t\t\t\t   Detail=\"{Binding Detail}\"/>\n\t\t</DataTemplate>\n\t</ListView.ItemTemplate>\n</ListView>\n```\n\n> ItemTemplate 定义了一个图文单元格\n\n2.  添加 ItemData 类\n\n```csharp\npublic class ItemData\n{\n    public string Title { get; set; }\n    public string Detail { get; set; }\n    public string Image { get; set; }\n\n    public override string ToString()\n    {\n        return Title;\n    }\n}\n```\n\n3.  编辑 ListViewPage.xaml.cs：\n\n```csharp\npublic ListViewPage()\n{\n\tInitializeComponent();\n\n\tList<ItemData> listData = new List<ItemData>();\n\tfor (int i = 1; i < 10; i++)\n\t{\n\t\tlistData.Add(new ItemData\n\t\t{\n\t\t\tTitle = \"Title\" + i.ToString(),\n\t\t\tDetail = \"Detail\" + i.ToString(),\n\t\t\tImage = \"csdn_logo\"\n\t\t});\n\t}\n\tlist.ItemsSource = listData;\n}\n```\n\n> Image 这里使用的是本地资源，还可以根据需要使用 URL 或嵌入资源 4. 调试界面：\n> ![](https://img-blog.csdnimg.cn/20200307091011181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 选择事件\n\n1.  编辑 ListViewPage.xaml：\n\n```xml\n<Label x:Name=\"lblSelectTitle\"\n\t   Text=\"这里显示Selected事件的单元格绑定Title\"/>\n<Label x:Name=\"lblTappedTitle\"\n\t   Text=\"这里显示Tapped事件的单元格绑定Title\"/>\n<ListView x:Name=\"list\"\n\t\t  SeparatorColor=\"Gray\"\n\t\t  ItemSelected=\"list_ItemSelected\"\n\t\t  ItemTapped=\"list_ItemTapped\">\n```\n\n2.  编辑 ListViewPage.xaml.cs：\n\n```csharp\nprivate int selectIndex = -1;\nprivate void list_ItemSelected(object sender, SelectedItemChangedEventArgs e)\n{\n\tif (selectIndex != e.SelectedItemIndex)\n\t{\n\t\tselectIndex = e.SelectedItemIndex;\n\t\tlblSelectTitle.Text = (e.SelectedItem as ItemData).Title;\n\t}\n\telse\n\t{\n\t\tlblSelectTitle.Text = (e.SelectedItem as ItemData).Detail;\n\t}\n}\nprivate int tapIndex = -1;\nprivate void list_ItemTapped(object sender, ItemTappedEventArgs e)\n{\n\tif (tapIndex != e.ItemIndex)\n\t{\n\t\ttapIndex = e.ItemIndex;\n\t\tlblTappedTitle.Text = (e.Item as ItemData).Title;\n\t}\n\telse\n\t{\n\t\tlblTappedTitle.Text = (e.Item as ItemData).Detail;\n\t}\n}\n```\n\n> - ItemSelected 事件选择新项后触发\n> - ItemTapped 事件每次点按后都会触发\n>\n> 3.  调试界面：\n>     ![](https://img-blog.csdnimg.cn/20200307092528623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 自定义单元格\n\n1.  编辑 ListViewPage.xaml：\n\n```xml\n<ListView x:Name=\"list\"\n\t\t  SeparatorColor=\"Gray\"\n\t\t  HasUnevenRows=\"true\"\n\t\t  ItemsSource=\"{Binding listData}\"\n\t\t  ItemSelected=\"list_ItemSelected\"\n\t\t  ItemTapped=\"list_ItemTapped\">\n\t<ListView.ItemTemplate>\n\t\t<DataTemplate>\n\t\t\t<ViewCell>\n\t\t\t\t<Grid Padding=\"12\">\n\t\t\t\t\t<Grid.RowDefinitions>\n\t\t\t\t\t\t<RowDefinition Height=\"Auto\" />\n\t\t\t\t\t\t<RowDefinition Height=\"*\" />\n\t\t\t\t\t</Grid.RowDefinitions>\n\t\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t\t<Image Grid.RowSpan=\"2\"\n\t\t\t\t\t\t   Margin=\"0,0,6,0\"\n\t\t\t\t\t\t   Source=\"{Binding Image}\"\n\t\t\t\t\t\t   HeightRequest=\"60\"\n\t\t\t\t\t\t   WidthRequest=\"60\"\n\t\t\t\t\t\t   BackgroundColor=\"LightGray\"\n\t\t\t\t\t\t   VerticalOptions=\"Start\" />\n\t\t\t\t\t<Label Grid.Column=\"1\"\n\t\t\t\t\t\t   Text=\"{Binding Title}\"\n\t\t\t\t\t\t   TextColor=\"Black\"\n\t\t\t\t\t\t   FontAttributes=\"Bold\" />\n\t\t\t\t\t<Label Grid.Row=\"1\"\n\t\t\t\t\t\t   Grid.Column=\"1\"\n\t\t\t\t\t\t   Text=\"{Binding Detail}\"\n\t\t\t\t\t\t   TextColor=\"DimGray\"\n\t\t\t\t\t\t   VerticalOptions=\"Start\" />\n\t\t\t\t</Grid>\n\t\t\t</ViewCell>\n\t\t</DataTemplate>\n\t</ListView.ItemTemplate>\n</ListView>\n```\n\n2.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200307113326591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/8_ListView.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView\ndate: 2021-08-19 09:26:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何自定义 ListView。\n\n1.  在 XAML 中创建 Xamarin.Forms ListView 。\n2.  ListView 数据绑定。\n3.  ListView 选择事件。\n4.  ListView 自定义单元格。\n\n<!-- more -->\n\n## 创建 ListView\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 ListViewPage.xaml。\n3.  编辑 ListViewPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.ListViewPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<ListView x:Name=\"list\"\n\t\t\t\t\t  SeparatorColor=\"Gray\">\n\t\t\t\t<ListView.ItemsSource>\n\t\t\t\t\t<x:Array Type=\"{x:Type x:String}\">\n\t\t\t\t\t\t<x:String>Item1</x:String>\n\t\t\t\t\t\t<x:String>Item2</x:String>\n\t\t\t\t\t\t<x:String>Item3</x:String>\n\t\t\t\t\t\t<x:String>Item4</x:String>\n\t\t\t\t\t\t<x:String>Item5</x:String>\n\t\t\t\t\t\t<x:String>Item6</x:String>\n\t\t\t\t\t\t<x:String>Item7</x:String>\n\t\t\t\t\t\t<x:String>Item8</x:String>\n\t\t\t\t\t\t<x:String>Item9</x:String>\n\t\t\t\t\t</x:Array>\n\t\t\t\t</ListView.ItemsSource>\n\t\t\t\t<ListView.ItemTemplate>\n\t\t\t\t\t<DataTemplate>\n\t\t\t\t\t\t<TextCell Text=\"{Binding .}\"\n\t\t\t\t\t\t\t\t  TextColor=\"Black\" />\n\t\t\t\t\t</DataTemplate>\n\t\t\t\t</ListView.ItemTemplate>\n\t\t\t</ListView>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n> - ItemsSource 指定了一个字符串数组做为数据源\n> - ItemTemplate 定义了一个文本单元格\n\n4.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new ListViewPage();\n}\n```\n\n5.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200306172716586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 数据绑定\n\n1.  编辑 ListViewPage.xaml：\n\n```xml\n<ListView x:Name=\"list\"\n\t\t  SeparatorColor=\"Gray\">\n\t<ListView.ItemTemplate>\n\t\t<DataTemplate>\n\t\t\t<ImageCell ImageSource=\"{Binding Image}\"\n\t\t\t\t\t   Text=\"{Binding Title}\"\n\t\t\t\t\t   TextColor=\"Black\"\n\t\t\t\t\t   Detail=\"{Binding Detail}\"/>\n\t\t</DataTemplate>\n\t</ListView.ItemTemplate>\n</ListView>\n```\n\n> ItemTemplate 定义了一个图文单元格\n\n2.  添加 ItemData 类\n\n```csharp\npublic class ItemData\n{\n    public string Title { get; set; }\n    public string Detail { get; set; }\n    public string Image { get; set; }\n\n    public override string ToString()\n    {\n        return Title;\n    }\n}\n```\n\n3.  编辑 ListViewPage.xaml.cs：\n\n```csharp\npublic ListViewPage()\n{\n\tInitializeComponent();\n\n\tList<ItemData> listData = new List<ItemData>();\n\tfor (int i = 1; i < 10; i++)\n\t{\n\t\tlistData.Add(new ItemData\n\t\t{\n\t\t\tTitle = \"Title\" + i.ToString(),\n\t\t\tDetail = \"Detail\" + i.ToString(),\n\t\t\tImage = \"csdn_logo\"\n\t\t});\n\t}\n\tlist.ItemsSource = listData;\n}\n```\n\n> Image 这里使用的是本地资源，还可以根据需要使用 URL 或嵌入资源 4. 调试界面：\n> ![](https://img-blog.csdnimg.cn/20200307091011181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 选择事件\n\n1.  编辑 ListViewPage.xaml：\n\n```xml\n<Label x:Name=\"lblSelectTitle\"\n\t   Text=\"这里显示Selected事件的单元格绑定Title\"/>\n<Label x:Name=\"lblTappedTitle\"\n\t   Text=\"这里显示Tapped事件的单元格绑定Title\"/>\n<ListView x:Name=\"list\"\n\t\t  SeparatorColor=\"Gray\"\n\t\t  ItemSelected=\"list_ItemSelected\"\n\t\t  ItemTapped=\"list_ItemTapped\">\n```\n\n2.  编辑 ListViewPage.xaml.cs：\n\n```csharp\nprivate int selectIndex = -1;\nprivate void list_ItemSelected(object sender, SelectedItemChangedEventArgs e)\n{\n\tif (selectIndex != e.SelectedItemIndex)\n\t{\n\t\tselectIndex = e.SelectedItemIndex;\n\t\tlblSelectTitle.Text = (e.SelectedItem as ItemData).Title;\n\t}\n\telse\n\t{\n\t\tlblSelectTitle.Text = (e.SelectedItem as ItemData).Detail;\n\t}\n}\nprivate int tapIndex = -1;\nprivate void list_ItemTapped(object sender, ItemTappedEventArgs e)\n{\n\tif (tapIndex != e.ItemIndex)\n\t{\n\t\ttapIndex = e.ItemIndex;\n\t\tlblTappedTitle.Text = (e.Item as ItemData).Title;\n\t}\n\telse\n\t{\n\t\tlblTappedTitle.Text = (e.Item as ItemData).Detail;\n\t}\n}\n```\n\n> - ItemSelected 事件选择新项后触发\n> - ItemTapped 事件每次点按后都会触发\n>\n> 3.  调试界面：\n>     ![](https://img-blog.csdnimg.cn/20200307092528623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 自定义单元格\n\n1.  编辑 ListViewPage.xaml：\n\n```xml\n<ListView x:Name=\"list\"\n\t\t  SeparatorColor=\"Gray\"\n\t\t  HasUnevenRows=\"true\"\n\t\t  ItemsSource=\"{Binding listData}\"\n\t\t  ItemSelected=\"list_ItemSelected\"\n\t\t  ItemTapped=\"list_ItemTapped\">\n\t<ListView.ItemTemplate>\n\t\t<DataTemplate>\n\t\t\t<ViewCell>\n\t\t\t\t<Grid Padding=\"12\">\n\t\t\t\t\t<Grid.RowDefinitions>\n\t\t\t\t\t\t<RowDefinition Height=\"Auto\" />\n\t\t\t\t\t\t<RowDefinition Height=\"*\" />\n\t\t\t\t\t</Grid.RowDefinitions>\n\t\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t\t<Image Grid.RowSpan=\"2\"\n\t\t\t\t\t\t   Margin=\"0,0,6,0\"\n\t\t\t\t\t\t   Source=\"{Binding Image}\"\n\t\t\t\t\t\t   HeightRequest=\"60\"\n\t\t\t\t\t\t   WidthRequest=\"60\"\n\t\t\t\t\t\t   BackgroundColor=\"LightGray\"\n\t\t\t\t\t\t   VerticalOptions=\"Start\" />\n\t\t\t\t\t<Label Grid.Column=\"1\"\n\t\t\t\t\t\t   Text=\"{Binding Title}\"\n\t\t\t\t\t\t   TextColor=\"Black\"\n\t\t\t\t\t\t   FontAttributes=\"Bold\" />\n\t\t\t\t\t<Label Grid.Row=\"1\"\n\t\t\t\t\t\t   Grid.Column=\"1\"\n\t\t\t\t\t\t   Text=\"{Binding Detail}\"\n\t\t\t\t\t\t   TextColor=\"DimGray\"\n\t\t\t\t\t\t   VerticalOptions=\"Start\" />\n\t\t\t\t</Grid>\n\t\t\t</ViewCell>\n\t\t</DataTemplate>\n\t</ListView.ItemTemplate>\n</ListView>\n```\n\n2.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200307113326591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/8_ListView","published":1,"updated":"2022-07-01T07:50:20.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y1002q4d0hchagamsf","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何自定义 ListView。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms ListView 。</li>\n<li>ListView 数据绑定。</li>\n<li>ListView 选择事件。</li>\n<li>ListView 自定义单元格。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"创建-ListView\"><a href=\"#创建-ListView\" class=\"headerlink\" title=\"创建 ListView\"></a>创建 ListView</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 ListViewPage.xaml。</li>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.ListViewPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemsSource</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>Array</span> <span class=\"token attr-name\">Type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;x:Type x:String&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>Array</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemsSource</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextCell</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding .&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>ItemsSource 指定了一个字符串数组做为数据源</li>\n<li>ItemTemplate 定义了一个文本单元格</li>\n</ul>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ListViewPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306172716586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h2><ol>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImageCell</span> <span class=\"token attr-name\">ImageSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Image&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Title&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">Detail</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Detail&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>ItemTemplate 定义了一个图文单元格</p>\n</blockquote>\n<ol start=\"2\">\n<li>添加 ItemData 类</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemData</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Title <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Detail <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Image <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> Title<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 ListViewPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">ListViewPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>ItemData<span class=\"token punctuation\">></span></span> listData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>ItemData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tlistData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ItemData</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tTitle <span class=\"token operator\">=</span> <span class=\"token string\">\"Title\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tDetail <span class=\"token operator\">=</span> <span class=\"token string\">\"Detail\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tImage <span class=\"token operator\">=</span> <span class=\"token string\">\"csdn_logo\"</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tlist<span class=\"token punctuation\">.</span>ItemsSource <span class=\"token operator\">=</span> listData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Image 这里使用的是本地资源，还可以根据需要使用 URL 或嵌入资源 4. 调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307091011181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></p>\n</blockquote>\n<h2 id=\"选择事件\"><a href=\"#选择事件\" class=\"headerlink\" title=\"选择事件\"></a>选择事件</h2><ol>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblSelectTitle<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里显示Selected事件的单元格绑定Title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblTappedTitle<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里显示Tapped事件的单元格绑定Title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemSelected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemSelected<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemTapped</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemTapped<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 ListViewPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> selectIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">list_ItemSelected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectedItemChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectIndex <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">.</span>SelectedItemIndex<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tselectIndex <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>SelectedItemIndex<span class=\"token punctuation\">;</span>\n\t\tlblSelectTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tlblSelectTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Detail<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> tapIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">list_ItemTapped</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ItemTappedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tapIndex <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">.</span>ItemIndex<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\ttapIndex <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>ItemIndex<span class=\"token punctuation\">;</span>\n\t\tlblTappedTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Item <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tlblTappedTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Item <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Detail<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>ItemSelected 事件选择新项后触发</li>\n<li>ItemTapped 事件每次点按后都会触发</li>\n</ul>\n<ol start=\"3\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307092528623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n</blockquote>\n<h2 id=\"自定义单元格\"><a href=\"#自定义单元格\" class=\"headerlink\" title=\"自定义单元格\"></a>自定义单元格</h2><ol>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">HasUnevenRows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemsSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding listData&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemSelected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemSelected<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemTapped</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemTapped<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Padding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>12<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Grid.RowSpan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0,0,6,0<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Image&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>60<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>60<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Title&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">FontAttributes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Bold<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Detail&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DimGray<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307113326591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何自定义 ListView。</p>\n<ol>\n<li>在 XAML 中创建 Xamarin.Forms ListView 。</li>\n<li>ListView 数据绑定。</li>\n<li>ListView 选择事件。</li>\n<li>ListView 自定义单元格。</li>\n</ol>","more":"<h2 id=\"创建-ListView\"><a href=\"#创建-ListView\" class=\"headerlink\" title=\"创建 ListView\"></a>创建 ListView</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 ListViewPage.xaml。</li>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.ListViewPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemsSource</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>Array</span> <span class=\"token attr-name\">Type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;x:Type x:String&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item2<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item3<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item4<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item5<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item6<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item7<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item8<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>Item9<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>String</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token namespace\">x:</span>Array</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemsSource</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>TextCell</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding .&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t\t\t  <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>ItemsSource 指定了一个字符串数组做为数据源</li>\n<li>ItemTemplate 定义了一个文本单元格</li>\n</ul>\n</blockquote>\n<ol start=\"4\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ListViewPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200306172716586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"数据绑定\"><a href=\"#数据绑定\" class=\"headerlink\" title=\"数据绑定\"></a>数据绑定</h2><ol>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ImageCell</span> <span class=\"token attr-name\">ImageSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Image&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Title&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">Detail</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Detail&#125;<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>ItemTemplate 定义了一个图文单元格</p>\n</blockquote>\n<ol start=\"2\">\n<li>添加 ItemData 类</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ItemData</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Title <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Detail <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> Image <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">override</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> <span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> Title<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>编辑 ListViewPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">ListViewPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>ItemData<span class=\"token punctuation\">></span></span> listData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span>ItemData<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tlistData<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ItemData</span>\n\t\t<span class=\"token punctuation\">&#123;</span>\n\t\t\tTitle <span class=\"token operator\">=</span> <span class=\"token string\">\"Title\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tDetail <span class=\"token operator\">=</span> <span class=\"token string\">\"Detail\"</span> <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span><span class=\"token function\">ToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tImage <span class=\"token operator\">=</span> <span class=\"token string\">\"csdn_logo\"</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\tlist<span class=\"token punctuation\">.</span>ItemsSource <span class=\"token operator\">=</span> listData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<p>Image 这里使用的是本地资源，还可以根据需要使用 URL 或嵌入资源 4. 调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307091011181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></p>\n</blockquote>\n<h2 id=\"选择事件\"><a href=\"#选择事件\" class=\"headerlink\" title=\"选择事件\"></a>选择事件</h2><ol>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblSelectTitle<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里显示Selected事件的单元格绑定Title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblTappedTitle<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>这里显示Tapped事件的单元格绑定Title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemSelected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemSelected<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemTapped</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemTapped<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 ListViewPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> selectIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">list_ItemSelected</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">SelectedItemChangedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectIndex <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">.</span>SelectedItemIndex<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tselectIndex <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>SelectedItemIndex<span class=\"token punctuation\">;</span>\n\t\tlblSelectTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tlblSelectTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>SelectedItem <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Detail<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> tapIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">list_ItemTapped</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ItemTappedEventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tapIndex <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">.</span>ItemIndex<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\ttapIndex <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>ItemIndex<span class=\"token punctuation\">;</span>\n\t\tlblTappedTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Item <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Title<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">else</span>\n\t<span class=\"token punctuation\">&#123;</span>\n\t\tlblTappedTitle<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>Item <span class=\"token keyword\">as</span> <span class=\"token class-name\">ItemData</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Detail<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<blockquote>\n<ul>\n<li>ItemSelected 事件选择新项后触发</li>\n<li>ItemTapped 事件每次点按后都会触发</li>\n</ul>\n<ol start=\"3\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307092528623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n</blockquote>\n<h2 id=\"自定义单元格\"><a href=\"#自定义单元格\" class=\"headerlink\" title=\"自定义单元格\"></a>自定义单元格</h2><ol>\n<li>编辑 ListViewPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">SeparatorColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Gray<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">HasUnevenRows</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemsSource</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding listData&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemSelected</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemSelected<span class=\"token punctuation\">\"</span></span>\n\t\t  <span class=\"token attr-name\">ItemTapped</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>list_ItemTapped<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span> <span class=\"token attr-name\">Padding</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>12<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>RowDefinition</span> <span class=\"token attr-name\">Height</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.RowDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Image</span> <span class=\"token attr-name\">Grid.RowSpan</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>0,0,6,0<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Source</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Image&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">HeightRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>60<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">WidthRequest</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>60<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">BackgroundColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LightGray<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Title&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Black<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">FontAttributes</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Bold<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Grid.Row</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>&#123;Binding Detail&#125;<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">TextColor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>DimGray<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ViewCell</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>DataTemplate</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView.ItemTemplate</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ListView</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307113326591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 - 总结","date":"2021-08-19T01:34:20.000Z","_content":"\n## 简介\n\n通过对 “Xamarin.Forms 创建移动应用程序的基础知识” 这个专题的编写，已经可以实现简单功能的 APP 编写，处理日常事务的简单工作\n\n<!-- more -->\n\n## 专题内容\n\n1. [了解 Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个 Xamarin 应用](../FirstCode/)\n2. [了解 Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout](../1_StackLayout/)\n3. [了解 Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid](../2_Grid/)\n4. [了解 Xamarin.Forms 创建移动应用程序的基础知识 3 - Label](../3_Label/)\n5. [了解 Xamarin.Forms 创建移动应用程序的基础知识 4 - Button](../4_Button/)\n6. [了解 Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry](../5_Entry/)\n7. [了解 Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor](../6_Editor/)\n8. [了解 Xamarin.Forms 创建移动应用程序的基础知识 7 - Image](../7_Image/)\n9. [了解 Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView](../8_ListView/)\n10. [了解 Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口](../9_PopWin/)\n11. [了解 Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期](../10_LifeCycle/)\n12. [了解 Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite 数据库](../11_Sqlite/)\n13. [了解 Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问 URL 数据](../12_UrlData/)\n","source":"_posts/Xamarin/Forms/Summarize.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 - 总结\ndate: 2021-08-19 09:34:20\ncategories:\n\t- 学习笔记\ntags:\n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n通过对 “Xamarin.Forms 创建移动应用程序的基础知识” 这个专题的编写，已经可以实现简单功能的 APP 编写，处理日常事务的简单工作\n\n<!-- more -->\n\n## 专题内容\n\n1. [了解 Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个 Xamarin 应用](../FirstCode/)\n2. [了解 Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout](../1_StackLayout/)\n3. [了解 Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid](../2_Grid/)\n4. [了解 Xamarin.Forms 创建移动应用程序的基础知识 3 - Label](../3_Label/)\n5. [了解 Xamarin.Forms 创建移动应用程序的基础知识 4 - Button](../4_Button/)\n6. [了解 Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry](../5_Entry/)\n7. [了解 Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor](../6_Editor/)\n8. [了解 Xamarin.Forms 创建移动应用程序的基础知识 7 - Image](../7_Image/)\n9. [了解 Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView](../8_ListView/)\n10. [了解 Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口](../9_PopWin/)\n11. [了解 Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期](../10_LifeCycle/)\n12. [了解 Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite 数据库](../11_Sqlite/)\n13. [了解 Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问 URL 数据](../12_UrlData/)\n","slug":"Xamarin/Forms/Summarize","published":1,"updated":"2022-07-01T07:50:20.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y2002t4d0h77i0fhkt","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>通过对 “Xamarin.Forms 创建移动应用程序的基础知识” 这个专题的编写，已经可以实现简单功能的 APP 编写，处理日常事务的简单工作</p>\n<span id=\"more\"></span>\n\n<h2 id=\"专题内容\"><a href=\"#专题内容\" class=\"headerlink\" title=\"专题内容\"></a>专题内容</h2><ol>\n<li><a href=\"../FirstCode/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个 Xamarin 应用</a></li>\n<li><a href=\"../1_StackLayout/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout</a></li>\n<li><a href=\"../2_Grid/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid</a></li>\n<li><a href=\"../3_Label/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 3 - Label</a></li>\n<li><a href=\"../4_Button/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 4 - Button</a></li>\n<li><a href=\"../5_Entry/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry</a></li>\n<li><a href=\"../6_Editor/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor</a></li>\n<li><a href=\"../7_Image/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 7 - Image</a></li>\n<li><a href=\"../8_ListView/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView</a></li>\n<li><a href=\"../9_PopWin/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口</a></li>\n<li><a href=\"../10_LifeCycle/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期</a></li>\n<li><a href=\"../11_Sqlite/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite 数据库</a></li>\n<li><a href=\"../12_UrlData/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问 URL 数据</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>通过对 “Xamarin.Forms 创建移动应用程序的基础知识” 这个专题的编写，已经可以实现简单功能的 APP 编写，处理日常事务的简单工作</p>","more":"<h2 id=\"专题内容\"><a href=\"#专题内容\" class=\"headerlink\" title=\"专题内容\"></a>专题内容</h2><ol>\n<li><a href=\"../FirstCode/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个 Xamarin 应用</a></li>\n<li><a href=\"../1_StackLayout/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout</a></li>\n<li><a href=\"../2_Grid/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid</a></li>\n<li><a href=\"../3_Label/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 3 - Label</a></li>\n<li><a href=\"../4_Button/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 4 - Button</a></li>\n<li><a href=\"../5_Entry/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry</a></li>\n<li><a href=\"../6_Editor/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor</a></li>\n<li><a href=\"../7_Image/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 7 - Image</a></li>\n<li><a href=\"../8_ListView/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView</a></li>\n<li><a href=\"../9_PopWin/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口</a></li>\n<li><a href=\"../10_LifeCycle/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期</a></li>\n<li><a href=\"../11_Sqlite/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite 数据库</a></li>\n<li><a href=\"../12_UrlData/\">了解 Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问 URL 数据</a></li>\n</ol>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个Xamarin应用","date":"2021-08-19T01:18:00.000Z","_content":"\n## 简介\n\n生成第一个 Xamarin 应用\n\n<!-- more -->\n\n## 开发环境\n\nVisual Studio 2019\n\n## Windows 分步说明\n\n1.  选择“文件”>“新建”>“项目...” ，或按“创建新项目...” 按钮：![](https://img-blog.csdnimg.cn/20200305094410752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n2.  搜索“Xamarin”或从“项目类型” 菜单中选择“移动” 。 选择“移动应用(Xamarin.Forms)” 项目类型：![](https://img-blog.csdnimg.cn/20200305094544257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  选择项目名称 – 示例使用“AwesomeApp”：![](https://img-blog.csdnimg.cn/20200305094628686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n4.  单击“空白” 项目类型，确保选择了“Android” 和“iOS” ：![](https://img-blog.csdnimg.cn/20200305094734459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n5.  到 NuGet 包还原（状态栏中将出现“还原已完成”消息）。\n6.  新 Visual Studio 2019 安装不会配置 Android 模拟器。 单击“调试” 按钮上的下拉箭头，然后选择“创建 Android Emulator” 以启动仿真器创建屏幕：\n    ![](https://img-blog.csdnimg.cn/20200305092243262.png)\n7.  在仿真器创建屏幕中，使用默认设置并单击“创建” 按钮：![](https://img-blog.csdnimg.cn/20200305094857438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n8.  创建仿真器会使你返回“设备管理器”窗口。 单击“启动” 按钮以启动新仿真器：![](https://img-blog.csdnimg.cn/20200305094923593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n9.  Visual Studio 2019 现在应在“调试” 按钮上显示新仿真器的名称：\n    ![](https://img-blog.csdnimg.cn/20200305095008259.png)\n10. 单击“调试” 按钮以生成应用程序并将其部署到 Android 仿真器：\n    ![](https://img-blog.csdnimg.cn/20200305095224286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 自定义应用程序\n\n1.  编辑 MainPage.xaml：\n\n```xml\n<Label Text=\"欢迎使用Xamarin！\" HorizontalOptions=\"Center\" VerticalOptions=\"CenterAndExpand\" />\n<Button Text=\"点我\" Clicked=\"Button_Clicked\" />\n```\n\n2.  编辑 MainPage.xaml.cs：\n\n```csharp\nint count = 0;\nvoid Button_Clicked(object sender, System.EventArgs e)\n{\n    count++;\n    ((Button)sender).Text = $\"你点击了 {count} 次。\";\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305095949266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 在 Visual Studio 2019 中生成 iOS 应用\n\n{% video https://sec.ch9.ms/ch9/093f/7c34917b-e6a0-41b5-8f49-4253b0b9093f/XamariniOS_high.mp4 %}\n","source":"_posts/Xamarin/Forms/FirstCode.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个Xamarin应用\ndate: 2021-08-19 09:18:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n生成第一个 Xamarin 应用\n\n<!-- more -->\n\n## 开发环境\n\nVisual Studio 2019\n\n## Windows 分步说明\n\n1.  选择“文件”>“新建”>“项目...” ，或按“创建新项目...” 按钮：![](https://img-blog.csdnimg.cn/20200305094410752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n2.  搜索“Xamarin”或从“项目类型” 菜单中选择“移动” 。 选择“移动应用(Xamarin.Forms)” 项目类型：![](https://img-blog.csdnimg.cn/20200305094544257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n3.  选择项目名称 – 示例使用“AwesomeApp”：![](https://img-blog.csdnimg.cn/20200305094628686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n4.  单击“空白” 项目类型，确保选择了“Android” 和“iOS” ：![](https://img-blog.csdnimg.cn/20200305094734459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n5.  到 NuGet 包还原（状态栏中将出现“还原已完成”消息）。\n6.  新 Visual Studio 2019 安装不会配置 Android 模拟器。 单击“调试” 按钮上的下拉箭头，然后选择“创建 Android Emulator” 以启动仿真器创建屏幕：\n    ![](https://img-blog.csdnimg.cn/20200305092243262.png)\n7.  在仿真器创建屏幕中，使用默认设置并单击“创建” 按钮：![](https://img-blog.csdnimg.cn/20200305094857438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n8.  创建仿真器会使你返回“设备管理器”窗口。 单击“启动” 按钮以启动新仿真器：![](https://img-blog.csdnimg.cn/20200305094923593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n9.  Visual Studio 2019 现在应在“调试” 按钮上显示新仿真器的名称：\n    ![](https://img-blog.csdnimg.cn/20200305095008259.png)\n10. 单击“调试” 按钮以生成应用程序并将其部署到 Android 仿真器：\n    ![](https://img-blog.csdnimg.cn/20200305095224286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 自定义应用程序\n\n1.  编辑 MainPage.xaml：\n\n```xml\n<Label Text=\"欢迎使用Xamarin！\" HorizontalOptions=\"Center\" VerticalOptions=\"CenterAndExpand\" />\n<Button Text=\"点我\" Clicked=\"Button_Clicked\" />\n```\n\n2.  编辑 MainPage.xaml.cs：\n\n```csharp\nint count = 0;\nvoid Button_Clicked(object sender, System.EventArgs e)\n{\n    count++;\n    ((Button)sender).Text = $\"你点击了 {count} 次。\";\n}\n```\n\n3.  调试 Android 上的应用：\n    ![](https://img-blog.csdnimg.cn/20200305095949266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 在 Visual Studio 2019 中生成 iOS 应用\n\n{% video https://sec.ch9.ms/ch9/093f/7c34917b-e6a0-41b5-8f49-4253b0b9093f/XamariniOS_high.mp4 %}\n","slug":"Xamarin/Forms/FirstCode","published":1,"updated":"2022-07-01T07:50:20.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y2002v4d0he13chtlw","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>生成第一个 Xamarin 应用</p>\n<span id=\"more\"></span>\n\n<h2 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h2><p>Visual Studio 2019</p>\n<h2 id=\"Windows-分步说明\"><a href=\"#Windows-分步说明\" class=\"headerlink\" title=\"Windows 分步说明\"></a>Windows 分步说明</h2><ol>\n<li>选择“文件”&gt;“新建”&gt;“项目…” ，或按“创建新项目…” 按钮：<img data-src=\"https://img-blog.csdnimg.cn/20200305094410752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>搜索“Xamarin”或从“项目类型” 菜单中选择“移动” 。 选择“移动应用(Xamarin.Forms)” 项目类型：<img data-src=\"https://img-blog.csdnimg.cn/20200305094544257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>选择项目名称 – 示例使用“AwesomeApp”：<img data-src=\"https://img-blog.csdnimg.cn/20200305094628686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>单击“空白” 项目类型，确保选择了“Android” 和“iOS” ：<img data-src=\"https://img-blog.csdnimg.cn/20200305094734459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>到 NuGet 包还原（状态栏中将出现“还原已完成”消息）。</li>\n<li>新 Visual Studio 2019 安装不会配置 Android 模拟器。 单击“调试” 按钮上的下拉箭头，然后选择“创建 Android Emulator” 以启动仿真器创建屏幕：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305092243262.png\"></li>\n<li>在仿真器创建屏幕中，使用默认设置并单击“创建” 按钮：<img data-src=\"https://img-blog.csdnimg.cn/20200305094857438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>创建仿真器会使你返回“设备管理器”窗口。 单击“启动” 按钮以启动新仿真器：<img data-src=\"https://img-blog.csdnimg.cn/20200305094923593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>Visual Studio 2019 现在应在“调试” 按钮上显示新仿真器的名称：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305095008259.png\"></li>\n<li>单击“调试” 按钮以生成应用程序并将其部署到 Android 仿真器：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305095224286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"自定义应用程序\"><a href=\"#自定义应用程序\" class=\"headerlink\" title=\"自定义应用程序\"></a>自定义应用程序</h2><ol>\n<li>编辑 MainPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用Xamarin！<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>点我<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 MainPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Button<span class=\"token punctuation\">)</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"你点击了 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">count</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 次。\"</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305095949266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"在-Visual-Studio-2019-中生成-iOS-应用\"><a href=\"#在-Visual-Studio-2019-中生成-iOS-应用\" class=\"headerlink\" title=\"在 Visual Studio 2019 中生成 iOS 应用\"></a>在 Visual Studio 2019 中生成 iOS 应用</h2><video src=\"https://sec.ch9.ms/ch9/093f/7c34917b-e6a0-41b5-8f49-4253b0b9093f/XamariniOS_high.mp4\" preload=\"metadata\" controlslist=\"nodownload\" controls playsinline poster=\"\"></video>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>生成第一个 Xamarin 应用</p>","more":"<h2 id=\"开发环境\"><a href=\"#开发环境\" class=\"headerlink\" title=\"开发环境\"></a>开发环境</h2><p>Visual Studio 2019</p>\n<h2 id=\"Windows-分步说明\"><a href=\"#Windows-分步说明\" class=\"headerlink\" title=\"Windows 分步说明\"></a>Windows 分步说明</h2><ol>\n<li>选择“文件”&gt;“新建”&gt;“项目…” ，或按“创建新项目…” 按钮：<img data-src=\"https://img-blog.csdnimg.cn/20200305094410752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>搜索“Xamarin”或从“项目类型” 菜单中选择“移动” 。 选择“移动应用(Xamarin.Forms)” 项目类型：<img data-src=\"https://img-blog.csdnimg.cn/20200305094544257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>选择项目名称 – 示例使用“AwesomeApp”：<img data-src=\"https://img-blog.csdnimg.cn/20200305094628686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>单击“空白” 项目类型，确保选择了“Android” 和“iOS” ：<img data-src=\"https://img-blog.csdnimg.cn/20200305094734459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>到 NuGet 包还原（状态栏中将出现“还原已完成”消息）。</li>\n<li>新 Visual Studio 2019 安装不会配置 Android 模拟器。 单击“调试” 按钮上的下拉箭头，然后选择“创建 Android Emulator” 以启动仿真器创建屏幕：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305092243262.png\"></li>\n<li>在仿真器创建屏幕中，使用默认设置并单击“创建” 按钮：<img data-src=\"https://img-blog.csdnimg.cn/20200305094857438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>创建仿真器会使你返回“设备管理器”窗口。 单击“启动” 按钮以启动新仿真器：<img data-src=\"https://img-blog.csdnimg.cn/20200305094923593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n<li>Visual Studio 2019 现在应在“调试” 按钮上显示新仿真器的名称：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305095008259.png\"></li>\n<li>单击“调试” 按钮以生成应用程序并将其部署到 Android 仿真器：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305095224286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"自定义应用程序\"><a href=\"#自定义应用程序\" class=\"headerlink\" title=\"自定义应用程序\"></a>自定义应用程序</h2><ol>\n<li>编辑 MainPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>欢迎使用Xamarin！<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>CenterAndExpand<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>点我<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 MainPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">System<span class=\"token punctuation\">.</span>EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Button<span class=\"token punctuation\">)</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"你点击了 </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">count</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\"> 次。\"</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试 Android 上的应用：<br><img data-src=\"https://img-blog.csdnimg.cn/20200305095949266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"在-Visual-Studio-2019-中生成-iOS-应用\"><a href=\"#在-Visual-Studio-2019-中生成-iOS-应用\" class=\"headerlink\" title=\"在 Visual Studio 2019 中生成 iOS 应用\"></a>在 Visual Studio 2019 中生成 iOS 应用</h2><video src=\"https://sec.ch9.ms/ch9/093f/7c34917b-e6a0-41b5-8f49-4253b0b9093f/XamariniOS_high.mp4\" preload=\"metadata\" controlslist=\"nodownload\" controls playsinline poster=\"\"></video>"},{"title":"Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口","date":"2021-08-19T01:27:00.000Z","_content":"\n## 简介\n\n演示如何在 Xamarin.Forms 中显示弹出式菜单。\n\n1.  弹出提醒。\n2.  模式对话框。\n\n<!-- more -->\n\n## 弹出提醒\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 PopupsPage.xaml。\n3.  编辑 PopupsPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.PopupsPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Button Text=\"弹出提醒1\"\n\t\t\t\t\tClicked=\"Button1_Clicked\" />\n\t\t\t<Button Text=\"弹出提醒2\"\n\t\t\t\t\tClicked=\"Button2_Clicked\" />\n\t\t\t<Grid>\n\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t<Label Text=\"弹出提醒2确认\"\n\t\t\t\t\t   VerticalOptions=\"Center\" />\n\t\t\t\t<Switch Grid.Column=\"1\"\n\t\t\t\t\t\tx:Name=\"swhBtn2OK\"\n\t\t\t\t\t\tHorizontalOptions=\"Start\" />\n\t\t\t</Grid>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 PopupsPage.xaml：\n\n```csharp\nprivate async void Button1_Clicked(object sender, EventArgs e)\n{\n\tawait DisplayAlert(\"弹出框\", \"这里是提醒内容\", \"关闭\");\n}\nprivate async void Button2_Clicked(object sender, EventArgs e)\n{\n\tswhBtn2OK.IsToggled = await DisplayAlert(\"确认框\", \"这里是确认内容\", \"确认\", \"取消\");\n}\n```\n\n5.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new PopupsPage();\n}\n```\n\n5.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200307151206169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    ![](https://img-blog.csdnimg.cn/20200307151226189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 模式对话框\n\n1.  编辑 PopupsPage.xaml：\n\n```xml\n<Button Text=\"模式对话框\"\n\t\tClicked=\"Button3_Clicked\" />\n<Label x:Name=\"lblBtn3Action\"\n\t   Text=\"模式对话框返回值\" />\n```\n\n2.  编辑 PopupsPage.xaml.cs：\n\n```csharp\nprivate async void Button3_Clicked(object sender, EventArgs e)\n{\n\tlblBtn3Action.Text = await DisplayActionSheet(\"模式对话框\", \"关闭\", \"请选择一个Action\", \"Action1\", \"Action2\", \"Action3\");\n}\n```\n\n3.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200307151046154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","source":"_posts/Xamarin/Forms/9_PopWin.md","raw":"---\ntitle: Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口\ndate: 2021-08-19 09:27:00\ncategories:\n\t- 学习笔记\ntags: \n\t- .NetCore\n\t- Xamarin\n---\n\n## 简介\n\n演示如何在 Xamarin.Forms 中显示弹出式菜单。\n\n1.  弹出提醒。\n2.  模式对话框。\n\n<!-- more -->\n\n## 弹出提醒\n\n1.  打开已有项目 AwesomeApp。\n2.  添加新项 PopupsPage.xaml。\n3.  编辑 PopupsPage.xaml：\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n             xmlns:d=\"http://xamarin.com/schemas/2014/forms/design\"\n             xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"\n             mc:Ignorable=\"d\"\n             x:Class=\"AwesomeApp.PopupsPage\">\n\t<ContentPage.Content>\n\t\t<StackLayout Margin=\"20,32\">\n\t\t\t<Button Text=\"弹出提醒1\"\n\t\t\t\t\tClicked=\"Button1_Clicked\" />\n\t\t\t<Button Text=\"弹出提醒2\"\n\t\t\t\t\tClicked=\"Button2_Clicked\" />\n\t\t\t<Grid>\n\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t<Label Text=\"弹出提醒2确认\"\n\t\t\t\t\t   VerticalOptions=\"Center\" />\n\t\t\t\t<Switch Grid.Column=\"1\"\n\t\t\t\t\t\tx:Name=\"swhBtn2OK\"\n\t\t\t\t\t\tHorizontalOptions=\"Start\" />\n\t\t\t</Grid>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n4.  编辑 PopupsPage.xaml：\n\n```csharp\nprivate async void Button1_Clicked(object sender, EventArgs e)\n{\n\tawait DisplayAlert(\"弹出框\", \"这里是提醒内容\", \"关闭\");\n}\nprivate async void Button2_Clicked(object sender, EventArgs e)\n{\n\tswhBtn2OK.IsToggled = await DisplayAlert(\"确认框\", \"这里是确认内容\", \"确认\", \"取消\");\n}\n```\n\n5.  编辑 App.xaml.cs：\n\n```csharp\npublic App()\n{\n\tInitializeComponent();\n\tMainPage = new PopupsPage();\n}\n```\n\n5.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200307151206169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n    ![](https://img-blog.csdnimg.cn/20200307151226189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n\n## 模式对话框\n\n1.  编辑 PopupsPage.xaml：\n\n```xml\n<Button Text=\"模式对话框\"\n\t\tClicked=\"Button3_Clicked\" />\n<Label x:Name=\"lblBtn3Action\"\n\t   Text=\"模式对话框返回值\" />\n```\n\n2.  编辑 PopupsPage.xaml.cs：\n\n```csharp\nprivate async void Button3_Clicked(object sender, EventArgs e)\n{\n\tlblBtn3Action.Text = await DisplayActionSheet(\"模式对话框\", \"关闭\", \"请选择一个Action\", \"Action1\", \"Action2\", \"Action3\");\n}\n```\n\n3.  调试界面：\n    ![](https://img-blog.csdnimg.cn/20200307151046154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70)\n","slug":"Xamarin/Forms/9_PopWin","published":1,"updated":"2022-07-01T07:50:20.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl526b8y2002z4d0h0qd1biit","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 Xamarin.Forms 中显示弹出式菜单。</p>\n<ol>\n<li>弹出提醒。</li>\n<li>模式对话框。</li>\n</ol>\n<span id=\"more\"></span>\n\n<h2 id=\"弹出提醒\"><a href=\"#弹出提醒\" class=\"headerlink\" title=\"弹出提醒\"></a>弹出提醒</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 PopupsPage.xaml。</li>\n<li>编辑 PopupsPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.PopupsPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>弹出提醒1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button1_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>弹出提醒2<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button2_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>弹出提醒2确认<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Switch</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t<span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>swhBtn2OK<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t<span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 PopupsPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button1_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">await</span> <span class=\"token function\">DisplayAlert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"弹出框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"这里是提醒内容\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button2_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tswhBtn2OK<span class=\"token punctuation\">.</span>IsToggled <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">DisplayAlert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确认框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"这里是确认内容\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"确认\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PopupsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307151206169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200307151226189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"模式对话框\"><a href=\"#模式对话框\" class=\"headerlink\" title=\"模式对话框\"></a>模式对话框</h2><ol>\n<li>编辑 PopupsPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>模式对话框<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button3_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblBtn3Action<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>模式对话框返回值<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 PopupsPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button3_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlblBtn3Action<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">DisplayActionSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"模式对话框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关闭\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"请选择一个Action\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Action1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Action2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Action3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307151046154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>演示如何在 Xamarin.Forms 中显示弹出式菜单。</p>\n<ol>\n<li>弹出提醒。</li>\n<li>模式对话框。</li>\n</ol>","more":"<h2 id=\"弹出提醒\"><a href=\"#弹出提醒\" class=\"headerlink\" title=\"弹出提醒\"></a>弹出提醒</h2><ol>\n<li>打开已有项目 AwesomeApp。</li>\n<li>添加新项 PopupsPage.xaml。</li>\n<li>编辑 PopupsPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\" ?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage</span> <span class=\"token attr-name\">xmlns</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>x</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>d</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://xamarin.com/schemas/2014/forms/design<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>mc</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">mc:</span>Ignorable</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>d<span class=\"token punctuation\">\"</span></span>\n             <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>AwesomeApp.PopupsPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>StackLayout</span> <span class=\"token attr-name\">Margin</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>20,32<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>弹出提醒1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button1_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>弹出提醒2<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button2_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Auto<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ColumnDefinition</span> <span class=\"token attr-name\">Width</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>*<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid.ColumnDefinitions</span><span class=\"token punctuation\">></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>弹出提醒2确认<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t   <span class=\"token attr-name\">VerticalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Center<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Switch</span> <span class=\"token attr-name\">Grid.Column</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t<span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>swhBtn2OK<span class=\"token punctuation\">\"</span></span>\n\t\t\t\t\t\t<span class=\"token attr-name\">HorizontalOptions</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Start<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n\t\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Grid</span><span class=\"token punctuation\">></span></span>\n\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>StackLayout</span><span class=\"token punctuation\">></span></span>\n\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage.Content</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ContentPage</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"4\">\n<li>编辑 PopupsPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button1_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">await</span> <span class=\"token function\">DisplayAlert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"弹出框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"这里是提醒内容\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关闭\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button2_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tswhBtn2OK<span class=\"token punctuation\">.</span>IsToggled <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">DisplayAlert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"确认框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"这里是确认内容\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"确认\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"取消\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>编辑 App.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token function\">InitializeComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tMainPage <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">PopupsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"5\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307151206169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"><br><img data-src=\"https://img-blog.csdnimg.cn/20200307151226189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>\n<h2 id=\"模式对话框\"><a href=\"#模式对话框\" class=\"headerlink\" title=\"模式对话框\"></a>模式对话框</h2><ol>\n<li>编辑 PopupsPage.xaml：</li>\n</ol>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>模式对话框<span class=\"token punctuation\">\"</span></span>\n\t\t<span class=\"token attr-name\">Clicked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Button3_Clicked<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Label</span> <span class=\"token attr-name\"><span class=\"token namespace\">x:</span>Name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>lblBtn3Action<span class=\"token punctuation\">\"</span></span>\n\t   <span class=\"token attr-name\">Text</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>模式对话框返回值<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"2\">\n<li>编辑 PopupsPage.xaml.cs：</li>\n</ol>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Button3_Clicked</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">object</span></span> sender<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EventArgs</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n\tlblBtn3Action<span class=\"token punctuation\">.</span>Text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">DisplayActionSheet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"模式对话框\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"关闭\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"请选择一个Action\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Action1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Action2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Action3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<ol start=\"3\">\n<li>调试界面：<br><img data-src=\"https://img-blog.csdnimg.cn/20200307151046154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70\"></li>\n</ol>"}],"PostAsset":[{"_id":"source/_posts/Problem/libgdiplus/install.png","slug":"install.png","post":"cl526b8xu000j4d0h5z142glx","modified":0,"renderable":0},{"_id":"source/_posts/GIS/TDT/FirstCode/image.jpg","slug":"image.jpg","post":"cl526b8xv000s4d0h2k6ldcdc","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl526b8xs00094d0h5350a5fg","category_id":"cl526b8xq00044d0ha87u3xvf","_id":"cl526b8xu000g4d0hd9zk2el5"},{"post_id":"cl526b8xo00014d0h38yj1dzv","category_id":"cl526b8xq00044d0ha87u3xvf","_id":"cl526b8xu000k4d0h09eveqkw"},{"post_id":"cl526b8xt000e4d0h27pvdvpl","category_id":"cl526b8xq00044d0ha87u3xvf","_id":"cl526b8xu000n4d0h62utffjz"},{"post_id":"cl526b8xq00034d0h0n7b9kns","category_id":"cl526b8xq00044d0ha87u3xvf","_id":"cl526b8xv000r4d0hbw3ygs43"},{"post_id":"cl526b8xr00074d0h9oqw5478","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xv000t4d0h8y6acv8w"},{"post_id":"cl526b8xu000m4d0h1egfe5ul","category_id":"cl526b8xq00044d0ha87u3xvf","_id":"cl526b8xw000x4d0hd27d7z02"},{"post_id":"cl526b8xv000q4d0h7wq49s31","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xw00104d0h9ky67dc8"},{"post_id":"cl526b8xs000a4d0he8x6ev1r","category_id":"cl526b8xv000o4d0h74an9cx7","_id":"cl526b8xw00154d0h8wojhe0b"},{"post_id":"cl526b8xv000s4d0h2k6ldcdc","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xx00174d0hdcirh0m3"},{"post_id":"cl526b8xv000w4d0h132cgrw4","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xx00194d0h7goqerr3"},{"post_id":"cl526b8xt000f4d0h1jutc9pe","category_id":"cl526b8xv000o4d0h74an9cx7","_id":"cl526b8xx001c4d0h2y2g8abg"},{"post_id":"cl526b8xw000z4d0h845p808y","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xy001f4d0hgqkv2hyx"},{"post_id":"cl526b8xw00134d0h2u3pgiv9","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xy001i4d0hcjbgbsy8"},{"post_id":"cl526b8xu000j4d0h5z142glx","category_id":"cl526b8xv000o4d0h74an9cx7","_id":"cl526b8xy001k4d0h9ttm4i9o"},{"post_id":"cl526b8xw00164d0h9ueiclvf","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xy001n4d0h695207yc"},{"post_id":"cl526b8xx001b4d0h7s2d1qg9","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xz001q4d0h0jkrhy5a"},{"post_id":"cl526b8xx001e4d0h4t7mgqik","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xz001u4d0h1z26cebt"},{"post_id":"cl526b8xy001h4d0h00930ckh","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8xz001x4d0hhbnwgq9d"},{"post_id":"cl526b8xx00184d0h9glwegg1","category_id":"cl526b8xx001d4d0h75vghlgt","_id":"cl526b8xz00214d0he6l08s8k"},{"post_id":"cl526b8xy001j4d0hhsl0dfcs","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y000244d0h2g9o1o5a"},{"post_id":"cl526b8xy001m4d0hgoh1fxre","category_id":"cl526b8xq00044d0ha87u3xvf","_id":"cl526b8y000284d0hb1314wk3"},{"post_id":"cl526b8xy001p4d0hahrh21lr","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y0002a4d0hdhejf2zz"},{"post_id":"cl526b8xz001t4d0h1d6ld205","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y0002c4d0hdd2e80wn"},{"post_id":"cl526b8xz001w4d0h5ius9n2u","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y1002f4d0h0ftmdgbo"},{"post_id":"cl526b8xz001z4d0h1lcu5kn2","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y1002h4d0hbl7v3oy7"},{"post_id":"cl526b8y000234d0h58pb9r0o","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y1002k4d0hhth7dhfu"},{"post_id":"cl526b8y000264d0h2ns7315d","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y1002n4d0h145u6b9t"},{"post_id":"cl526b8y000294d0h14kygr2y","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y2002r4d0h3qn25xo1"},{"post_id":"cl526b8y0002b4d0h4vuw864u","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y2002u4d0hgdws2gz3"},{"post_id":"cl526b8y0002e4d0hc2etgsqa","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y2002x4d0h6aft9tn4"},{"post_id":"cl526b8y1002g4d0hbcxqcv59","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y200304d0hc2e2e5to"},{"post_id":"cl526b8y1002j4d0h14ekh19t","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y200324d0h07jd73fq"},{"post_id":"cl526b8y1002m4d0hcn28fsnn","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y300344d0h99kye61d"},{"post_id":"cl526b8y1002q4d0hchagamsf","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y300354d0hchldbusq"},{"post_id":"cl526b8y2002t4d0h77i0fhkt","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y300374d0hgje5gqh8"},{"post_id":"cl526b8y2002v4d0he13chtlw","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y300384d0h4hwk5ihw"},{"post_id":"cl526b8y2002z4d0h0qd1biit","category_id":"cl526b8xu000h4d0h81ixeyvk","_id":"cl526b8y3003a4d0her6zb5in"}],"PostTag":[{"post_id":"cl526b8xo00014d0h38yj1dzv","tag_id":"cl526b8xr00054d0hf03pbn4h","_id":"cl526b8xt000d4d0h5ap16ia5"},{"post_id":"cl526b8xq00034d0h0n7b9kns","tag_id":"cl526b8xs000c4d0h1m6hcbhu","_id":"cl526b8xu000l4d0h19v14kd5"},{"post_id":"cl526b8xr00074d0h9oqw5478","tag_id":"cl526b8xu000i4d0h07k472bl","_id":"cl526b8xw000y4d0hcvbwc4tf"},{"post_id":"cl526b8xr00074d0h9oqw5478","tag_id":"cl526b8xv000p4d0h4gmnh06b","_id":"cl526b8xw00124d0h6alzev1p"},{"post_id":"cl526b8xs00094d0h5350a5fg","tag_id":"cl526b8xv000v4d0hddmad2wl","_id":"cl526b8xy001o4d0h6kzga7jp"},{"post_id":"cl526b8xs00094d0h5350a5fg","tag_id":"cl526b8xw00144d0hazq1037i","_id":"cl526b8xz001r4d0h22s60vsh"},{"post_id":"cl526b8xs00094d0h5350a5fg","tag_id":"cl526b8xx001a4d0hhus25bvy","_id":"cl526b8xz001v4d0h6p7je5h3"},{"post_id":"cl526b8xs00094d0h5350a5fg","tag_id":"cl526b8xy001g4d0hgjxs9ysk","_id":"cl526b8xz001y4d0h2snqhu0e"},{"post_id":"cl526b8xs000a4d0he8x6ev1r","tag_id":"cl526b8xv000v4d0hddmad2wl","_id":"cl526b8y000224d0hgtz71iwq"},{"post_id":"cl526b8xs000a4d0he8x6ev1r","tag_id":"cl526b8xz001s4d0her4e0ohm","_id":"cl526b8y000254d0h3ifg06ox"},{"post_id":"cl526b8xt000e4d0h27pvdvpl","tag_id":"cl526b8xv000v4d0hddmad2wl","_id":"cl526b8y1002l4d0h2xndf0op"},{"post_id":"cl526b8xt000e4d0h27pvdvpl","tag_id":"cl526b8y000274d0heakw64jf","_id":"cl526b8y1002o4d0h20cab195"},{"post_id":"cl526b8xt000e4d0h27pvdvpl","tag_id":"cl526b8y0002d4d0h69az7y1q","_id":"cl526b8y2002s4d0hh5n0015m"},{"post_id":"cl526b8xt000f4d0h1jutc9pe","tag_id":"cl526b8y1002i4d0hed1k5fqu","_id":"cl526b8y2002y4d0h343qg9c7"},{"post_id":"cl526b8xt000f4d0h1jutc9pe","tag_id":"cl526b8y1002p4d0hcat85vmt","_id":"cl526b8y200314d0heg127dxo"},{"post_id":"cl526b8xu000j4d0h5z142glx","tag_id":"cl526b8y2002w4d0h045f6y7l","_id":"cl526b8y3003b4d0h9p9gaifg"},{"post_id":"cl526b8xu000j4d0h5z142glx","tag_id":"cl526b8xz001s4d0her4e0ohm","_id":"cl526b8y3003c4d0hge9ycc89"},{"post_id":"cl526b8xu000j4d0h5z142glx","tag_id":"cl526b8y300364d0h60b2aesc","_id":"cl526b8y3003e4d0h3d0qhkiz"},{"post_id":"cl526b8xu000m4d0h1egfe5ul","tag_id":"cl526b8y300394d0h4a2c4qqg","_id":"cl526b8y3003h4d0ha22e3nrz"},{"post_id":"cl526b8xu000m4d0h1egfe5ul","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y3003i4d0ha2jkg2xe"},{"post_id":"cl526b8xu000m4d0h1egfe5ul","tag_id":"cl526b8y3003f4d0hbq9wczus","_id":"cl526b8y3003k4d0h7cn3666s"},{"post_id":"cl526b8xv000q4d0h7wq49s31","tag_id":"cl526b8y3003g4d0h6y46alz8","_id":"cl526b8y3003p4d0hgjpibiyn"},{"post_id":"cl526b8xv000q4d0h7wq49s31","tag_id":"cl526b8y3003j4d0hgaxv7c0m","_id":"cl526b8y3003q4d0h9fe82w2m"},{"post_id":"cl526b8xv000q4d0h7wq49s31","tag_id":"cl526b8y3003l4d0h803yh03l","_id":"cl526b8y4003s4d0hec5r8zmt"},{"post_id":"cl526b8xv000q4d0h7wq49s31","tag_id":"cl526b8y3003m4d0hggh2cisi","_id":"cl526b8y4003t4d0he8jzh97m"},{"post_id":"cl526b8xv000q4d0h7wq49s31","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y4003v4d0hb9de51ng"},{"post_id":"cl526b8xv000s4d0h2k6ldcdc","tag_id":"cl526b8y3003o4d0h6v5e0dgk","_id":"cl526b8y4003w4d0hb71996ba"},{"post_id":"cl526b8xv000s4d0h2k6ldcdc","tag_id":"cl526b8y4003r4d0hfss0ct4d","_id":"cl526b8y4003y4d0hep0542x2"},{"post_id":"cl526b8xv000w4d0h132cgrw4","tag_id":"cl526b8y4003u4d0hay897qbz","_id":"cl526b8y400414d0h559eetcq"},{"post_id":"cl526b8xv000w4d0h132cgrw4","tag_id":"cl526b8y4003x4d0h4u2mdmxo","_id":"cl526b8y400424d0h5fnv2o98"},{"post_id":"cl526b8xv000w4d0h132cgrw4","tag_id":"cl526b8y1002i4d0hed1k5fqu","_id":"cl526b8y400444d0he0dya7kh"},{"post_id":"cl526b8xw000z4d0h845p808y","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y400474d0h9nplaa7g"},{"post_id":"cl526b8xw000z4d0h845p808y","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y400484d0hgzkya4we"},{"post_id":"cl526b8xw000z4d0h845p808y","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y4004a4d0h9a8efwta"},{"post_id":"cl526b8xw00134d0h2u3pgiv9","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y5004d4d0h8xtwckop"},{"post_id":"cl526b8xw00134d0h2u3pgiv9","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y5004e4d0h67w74wtj"},{"post_id":"cl526b8xw00134d0h2u3pgiv9","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y5004g4d0hdzz33ub1"},{"post_id":"cl526b8xw00164d0h9ueiclvf","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y5004j4d0h4pux2bug"},{"post_id":"cl526b8xw00164d0h9ueiclvf","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y5004k4d0h4b6ic6jy"},{"post_id":"cl526b8xw00164d0h9ueiclvf","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y5004m4d0h0pfo3ko8"},{"post_id":"cl526b8xx00184d0h9glwegg1","tag_id":"cl526b8y5004i4d0hfpb7712m","_id":"cl526b8y5004r4d0hadb98fzt"},{"post_id":"cl526b8xx00184d0h9glwegg1","tag_id":"cl526b8y5004l4d0hatrsgibr","_id":"cl526b8y5004s4d0hfbsf0oxo"},{"post_id":"cl526b8xx00184d0h9glwegg1","tag_id":"cl526b8y5004n4d0hcf4u96zu","_id":"cl526b8y5004u4d0h6ydl1pbf"},{"post_id":"cl526b8xx00184d0h9glwegg1","tag_id":"cl526b8y5004o4d0h7flc723r","_id":"cl526b8y5004v4d0hhc2e62dr"},{"post_id":"cl526b8xx00184d0h9glwegg1","tag_id":"cl526b8y5004p4d0hairufbyu","_id":"cl526b8y5004x4d0hegkya1g1"},{"post_id":"cl526b8xx001b4d0h7s2d1qg9","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y5004z4d0hbkgdeaui"},{"post_id":"cl526b8xx001b4d0h7s2d1qg9","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y500504d0h6yek6aaq"},{"post_id":"cl526b8xx001b4d0h7s2d1qg9","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y600524d0hbgsx285n"},{"post_id":"cl526b8xx001e4d0h4t7mgqik","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y600554d0haklt68cg"},{"post_id":"cl526b8xx001e4d0h4t7mgqik","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y600564d0h6juo39ru"},{"post_id":"cl526b8xx001e4d0h4t7mgqik","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y600584d0hc62w3x43"},{"post_id":"cl526b8xy001h4d0h00930ckh","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y6005b4d0hgbh15lug"},{"post_id":"cl526b8xy001h4d0h00930ckh","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y6005c4d0haws61sss"},{"post_id":"cl526b8xy001h4d0h00930ckh","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y6005e4d0h2q1r6jlx"},{"post_id":"cl526b8xy001j4d0hhsl0dfcs","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y6005h4d0hasl83tfy"},{"post_id":"cl526b8xy001j4d0hhsl0dfcs","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y6005i4d0h910r9eus"},{"post_id":"cl526b8xy001j4d0hhsl0dfcs","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y6005k4d0h51zlahb5"},{"post_id":"cl526b8xy001m4d0hgoh1fxre","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y6005n4d0h4qpo3vir"},{"post_id":"cl526b8xy001m4d0hgoh1fxre","tag_id":"cl526b8y6005j4d0hav0oajng","_id":"cl526b8y6005o4d0h4cjfbosy"},{"post_id":"cl526b8xy001m4d0hgoh1fxre","tag_id":"cl526b8y6005l4d0h13ntd5p0","_id":"cl526b8y7005q4d0hht1e31m7"},{"post_id":"cl526b8xy001p4d0hahrh21lr","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y7005t4d0h8cne9mkb"},{"post_id":"cl526b8xy001p4d0hahrh21lr","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y7005u4d0h7ykkhruk"},{"post_id":"cl526b8xy001p4d0hahrh21lr","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y7005w4d0hdq956eci"},{"post_id":"cl526b8xz001t4d0h1d6ld205","tag_id":"cl526b8y3003d4d0heo883wc1","_id":"cl526b8y7005z4d0h9ejj9tt9"},{"post_id":"cl526b8xz001t4d0h1d6ld205","tag_id":"cl526b8y400434d0hb0etdqw8","_id":"cl526b8y700604d0hf97k6k2h"},{"post_id":"cl526b8xz001t4d0h1d6ld205","tag_id":"cl526b8y400454d0h2my7hiro","_id":"cl526b8y700624d0h5erg7b2z"},{"post_id":"cl526b8xz001w4d0h5ius9n2u","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y700644d0h3stw47lg"},{"post_id":"cl526b8xz001w4d0h5ius9n2u","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y700654d0hda8uhvn1"},{"post_id":"cl526b8xz001z4d0h1lcu5kn2","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y700684d0h071p84af"},{"post_id":"cl526b8xz001z4d0h1lcu5kn2","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y700694d0hazar8fkq"},{"post_id":"cl526b8y000234d0h58pb9r0o","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y7006c4d0he48kdnaz"},{"post_id":"cl526b8y000234d0h58pb9r0o","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y7006d4d0h43c8f5e0"},{"post_id":"cl526b8y000264d0h2ns7315d","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y8006g4d0hgv2k67dy"},{"post_id":"cl526b8y000264d0h2ns7315d","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y8006h4d0h9daibyfa"},{"post_id":"cl526b8y000294d0h14kygr2y","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y8006k4d0hgn12fodk"},{"post_id":"cl526b8y000294d0h14kygr2y","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y8006l4d0h1kwygv6j"},{"post_id":"cl526b8y0002b4d0h4vuw864u","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y8006o4d0h899u7qru"},{"post_id":"cl526b8y0002b4d0h4vuw864u","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y8006p4d0h3r7h0nka"},{"post_id":"cl526b8y0002e4d0hc2etgsqa","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y8006s4d0h8fnnhqpn"},{"post_id":"cl526b8y0002e4d0hc2etgsqa","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y8006t4d0h4otffcam"},{"post_id":"cl526b8y1002g4d0hbcxqcv59","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y8006w4d0h318o2q0j"},{"post_id":"cl526b8y1002g4d0hbcxqcv59","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y8006x4d0h1zom16q0"},{"post_id":"cl526b8y1002j4d0h14ekh19t","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y800704d0hfzwp0bt2"},{"post_id":"cl526b8y1002j4d0h14ekh19t","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y800714d0hfmuhgvqd"},{"post_id":"cl526b8y1002m4d0hcn28fsnn","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y900744d0h6vu3hvii"},{"post_id":"cl526b8y1002m4d0hcn28fsnn","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y900754d0h65ai2wgi"},{"post_id":"cl526b8y1002q4d0hchagamsf","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y900784d0h8mp0e0on"},{"post_id":"cl526b8y1002q4d0hchagamsf","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y900794d0h0j1vba7b"},{"post_id":"cl526b8y2002t4d0h77i0fhkt","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y9007c4d0hdylma7cs"},{"post_id":"cl526b8y2002t4d0h77i0fhkt","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y9007d4d0h720i6kun"},{"post_id":"cl526b8y2002v4d0he13chtlw","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y9007g4d0hfn9bcau7"},{"post_id":"cl526b8y2002v4d0he13chtlw","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y9007h4d0h38j3f092"},{"post_id":"cl526b8y2002z4d0h0qd1biit","tag_id":"cl526b8y7005y4d0h02fb6wmj","_id":"cl526b8y9007j4d0hcmj75eis"},{"post_id":"cl526b8y2002z4d0h0qd1biit","tag_id":"cl526b8y700614d0h9km88gaq","_id":"cl526b8y9007k4d0hd4fl9drc"}],"Tag":[{"name":"Git","_id":"cl526b8xr00054d0hf03pbn4h"},{"name":"npm","_id":"cl526b8xs000c4d0h1m6hcbhu"},{"name":"Linux","_id":"cl526b8xu000i4d0h07k472bl"},{"name":"Shell","_id":"cl526b8xv000p4d0h4gmnh06b"},{"name":"Mac","_id":"cl526b8xv000v4d0hddmad2wl"},{"name":"Hexo","_id":"cl526b8xw00144d0hazq1037i"},{"name":"Gitee Pages","_id":"cl526b8xx001a4d0hhus25bvy"},{"name":"Blog","_id":"cl526b8xy001g4d0hgjxs9ysk"},{"name":"NetCore","_id":"cl526b8xz001s4d0her4e0ohm"},{"name":"Scrcpy","_id":"cl526b8y000274d0heakw64jf"},{"name":"无线投屏","_id":"cl526b8y0002d4d0h69az7y1q"},{"name":"UniApp","_id":"cl526b8y1002i4d0hed1k5fqu"},{"name":"GPS","_id":"cl526b8y1002p4d0hcat85vmt"},{"name":"MacM1","_id":"cl526b8y2002w4d0h045f6y7l"},{"name":"libgdiplus","_id":"cl526b8y300364d0h60b2aesc"},{"name":"Mac M1","_id":"cl526b8y300394d0h4a2c4qqg"},{"name":"Python","_id":"cl526b8y3003d4d0heo883wc1"},{"name":"Anaconda","_id":"cl526b8y3003f4d0hbq9wczus"},{"name":"PaddlePaddle","_id":"cl526b8y3003g4d0h6y46alz8"},{"name":"PaddleX","_id":"cl526b8y3003j4d0hgaxv7c0m"},{"name":"VC","_id":"cl526b8y3003l4d0h803yh03l"},{"name":"ML","_id":"cl526b8y3003m4d0hggh2cisi"},{"name":"GIS","_id":"cl526b8y3003o4d0h6v5e0dgk"},{"name":"天地图","_id":"cl526b8y4003r4d0hfss0ct4d"},{"name":"H5","_id":"cl526b8y4003u4d0hay897qbz"},{"name":"定位","_id":"cl526b8y4003x4d0h4u2mdmxo"},{"name":"Mediapipe","_id":"cl526b8y400434d0hb0etdqw8"},{"name":"OpenCV","_id":"cl526b8y400454d0h2my7hiro"},{"name":"coordinate","_id":"cl526b8y5004i4d0hfpb7712m"},{"name":"wgs84","_id":"cl526b8y5004l4d0hatrsgibr"},{"name":"bd09","_id":"cl526b8y5004n4d0hcf4u96zu"},{"name":"gcj02","_id":"cl526b8y5004o4d0h7flc723r"},{"name":"transform","_id":"cl526b8y5004p4d0hairufbyu"},{"name":"PostgreSQL","_id":"cl526b8y6005j4d0hav0oajng"},{"name":"Psycopg","_id":"cl526b8y6005l4d0h13ntd5p0"},{"name":".NetCore","_id":"cl526b8y7005y4d0h02fb6wmj"},{"name":"Xamarin","_id":"cl526b8y700614d0h9km88gaq"}]}}