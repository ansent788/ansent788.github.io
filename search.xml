<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>常用数据库链接字符串</title>
    <url>/ExperienceEssay/DBConn/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>常用数据库链接字符串</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>数据库类型</th>
<th>连接方式</th>
<th>连接字符串</th>
</tr>
</thead>
<tbody><tr>
<td>Access</td>
<td>ODBC</td>
<td>“Driver&#x3D;{Microsoft Access Driver(*.mdb)}; Dbq&#x3D;&lt;\mdb file&gt;; Uid&#x3D;&lt;\user name&gt;; Pwd&#x3D;&lt;\password&gt;;”</td>
</tr>
<tr>
<td>Access</td>
<td>OLEDB</td>
<td>“Provider&#x3D;Microsoft.Jet.OLEDB4.0; Data Source&#x3D;&lt;\mdb file&gt;; User Id&#x3D;&lt;\user name&gt;; Password&#x3D;&lt;\password&gt;”</td>
</tr>
<tr>
<td>SQL Server</td>
<td>ODBC</td>
<td>“Driver&#x3D;{SQL Server}; Server&#x3D;&lt;\server name&gt;; Database&#x3D;&lt;\database name&gt; Uid&#x3D;&lt;\user name&gt;; Pwd&#x3D;&lt;\password&gt;;”</td>
</tr>
<tr>
<td>SQL Server</td>
<td>OLEDB</td>
<td>“Provider&#x3D;SQLOLEDB; Data Source&#x3D;&lt;\server name&gt;; Initial Catalog&#x3D;&lt;\database name&gt;; Integrated Security&#x3D;SSPI; User</td>
</tr>
<tr>
<td>MySql</td>
<td>ODBC</td>
<td>“Draver&#x3D;{mySQL}; Server&#x3D;&lt;\server name&gt;; Option&#x3D;16384; Database&#x3D;&lt;\database name&gt;; Uid&#x3D;&lt;\user name&gt;; Pwd&#x3D;&lt;\password&gt;;”</td>
</tr>
<tr>
<td>MySql</td>
<td>OLEDB</td>
<td>“Provider&#x3D;MySQLProv; Data Source&#x3D;&lt;\database name&gt;; User Id&#x3D;&lt;\user name&gt;; Password&#x3D;&lt;\password&gt;;”</td>
</tr>
<tr>
<td>Oracle</td>
<td>ODBC</td>
<td>“Driver&#x3D;{Microsoft ODBC for Oracle}; Server&#x3D;OracleServer.world; Uid&#x3D;&lt;\user name&gt;; Pwd&#x3D;&lt;\password&gt;;”</td>
</tr>
<tr>
<td>Oracle</td>
<td>OLEDB</td>
<td>“Provider&#x3D;OraOLEDB.Oracle; Data Source&#x3D;&lt;\database name&gt; User Id&#x3D;&lt;\user name&gt;; Password&#x3D;&lt;\password&gt;;”</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>DB</tag>
        <tag>CONN</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 命令行使用</title>
    <url>/ExperienceEssay/Git/</url>
    <content><![CDATA[<h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>Git 命令行总结</p>
<span id="more"></span>

<h3 id="2-init-初始化"><a href="#2-init-初始化" class="headerlink" title="2. init 初始化"></a>2. init 初始化</h3><ul>
<li><p>初始化Git代码仓库</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="3-clone-初始化"><a href="#3-clone-初始化" class="headerlink" title="3. clone 初始化"></a>3. clone 初始化</h3><ul>
<li><p>默认克隆主分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone 远程仓库地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>指定clone某个分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token parameter variable">-b</span> 远程分支名 远程仓库地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="4-config-配置"><a href="#4-config-配置" class="headerlink" title="4. config 配置"></a>4. config 配置</h3><ul>
<li><p>查看配置</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config --list｜-l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看系统配置</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--system</span> --list｜-l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看用户（global）配置</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> --list｜-l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>配置用户（global）用户</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token punctuation">[</span>your name<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>配置用户（global）邮箱</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token punctuation">[</span>your email<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看仓库配置</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> config <span class="token parameter variable">--local</span> --list｜-l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="5-add-添加"><a href="#5-add-添加" class="headerlink" title="5. add 添加"></a>5. add 添加</h3><ul>
<li><p>添加所有新文件</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="6-commit-更改"><a href="#6-commit-更改" class="headerlink" title="6. commit 更改"></a>6. commit 更改</h3><ul>
<li><p>带注释添加更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">'message'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>修改更改注释</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit <span class="token parameter variable">--amend</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="7-remote-跟踪"><a href="#7-remote-跟踪" class="headerlink" title="7. remote 跟踪"></a>7. remote 跟踪</h3><ul>
<li><p>跟踪远程分支到指定分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> origin/<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>修改远程仓库地址</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote set-url origin <span class="token punctuation">[</span>newUrl<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看远程仓库地址</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>删除本地存在远程不存在的分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote prune origin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="8-pull-拉取"><a href="#8-pull-拉取" class="headerlink" title="8. pull 拉取"></a>8. pull 拉取</h3><ul>
<li><p>远程分支拉取 - 不变基</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull origin <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>:<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> --no-rebase<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>远程分支拉取 - 变基</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull origin <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>:<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token parameter variable">--rebase</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>允许不相关历史强制合并</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> pull origin master --allow-unrelated-histories<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="9-push-推送"><a href="#9-push-推送" class="headerlink" title="9. push 推送"></a>9. push 推送</h3><ul>
<li><p>推送到指定的远程分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>推送到指定的远程分支 - 强制</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token parameter variable">--force</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>新建并推送到远程分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push --set-upstream origin <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="10-reset-重置"><a href="#10-reset-重置" class="headerlink" title="10. reset 重置"></a>10. reset 重置</h3><ul>
<li><p>重置当前最后一次更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset <span class="token parameter variable">--soft</span> HEAD^<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="11-cherry-pick-应用更改"><a href="#11-cherry-pick-应用更改" class="headerlink" title="11. cherry-pick 应用更改"></a>11. cherry-pick 应用更改</h3><ul>
<li><p>应用指定更改到当前分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>最近一次更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>多个更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span> <span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span> <span class="token punctuation">..</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>一段更改不包含开头</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span><span class="token punctuation">..</span><span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>一段更改包含开头</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> cherry-pick <span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span>^<span class="token punctuation">..</span><span class="token punctuation">[</span>commitHash<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li></li>
</ul>
<h3 id="12-stash-储藏"><a href="#12-stash-储藏" class="headerlink" title="12. stash 储藏"></a>12. stash 储藏</h3><ul>
<li><p>储藏当前更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>读取储藏更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="13-branch-分支"><a href="#13-branch-分支" class="headerlink" title="13. branch 分支"></a>13. branch 分支</h3><ul>
<li><p>查看当前远端分支情况</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-a</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看分支</p>
<pre class="line-numbers language-bash" data-language="bash"><div class="caption"><span>list</span></div><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>查看分支详情</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-vv</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>创建分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>创建分支并指定跟踪分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token parameter variable">-t</span> origin/<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>删除本地分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -d<span class="token operator">|</span>-D <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>按指定更改创建分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token punctuation">[</span>branch<span class="token punctuation">]</span> <span class="token punctuation">[</span>start point<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>设置跟踪的远程分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch --set-upstream-to origin/<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>修改跟踪的远程分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-u</span> origin/<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="14-checkout-检出"><a href="#14-checkout-检出" class="headerlink" title="14. checkout 检出"></a>14. checkout 检出</h3><ul>
<li><p>撤消当前分支所有修改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>切换分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>创建并切换</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>创建并切换、设置跟踪的远程分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token parameter variable">-t</span> origin/<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="15-rebase-变基"><a href="#15-rebase-变基" class="headerlink" title="15. rebase 变基"></a>15. rebase 变基</h3><ul>
<li><p>no branch, rebasing master （当前无分支，可变基到master分支）</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> rebase <span class="token parameter variable">--continue</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="16-reset-重置某次更改"><a href="#16-reset-重置某次更改" class="headerlink" title="16. reset 重置某次更改"></a>16. reset 重置某次更改</h3><ul>
<li><p>回滚到某次更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset commit_id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>此次更改之后的修改会被退回到暂存区</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset <span class="token parameter variable">--soft</span> commit_id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>此次更改之后的修改不做任何保留</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> commit_id<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
<h3 id="17-rebase-重新设置基准"><a href="#17-rebase-重新设置基准" class="headerlink" title="17. rebase 重新设置基准"></a>17. rebase 重新设置基准</h3><blockquote>
<p>当两个分支不在一条线上，需要执行 merge 操作时使用该命令</p>
</blockquote>
<ul>
<li><p>撤销更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log // 查找要删除的前一次更改的 commit_id
<span class="token function">git</span> rebase <span class="token parameter variable">-i</span> commit_id // 将 commit_id 替换成复制的值
进入 Vim 编辑模式，将要删除的 commit 前面的 <span class="token variable"><span class="token variable">`</span>pick<span class="token variable">`</span></span> 改成 <span class="token variable"><span class="token variable">`</span>drop<span class="token variable">`</span></span>
保存并退出 Vim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>解决冲突</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">diff</span> // 查看冲突内容
// 手动解决冲突（冲突位置已在文件中标明）
<span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>file<span class="token operator">></span> 或 <span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span> // 添加
<span class="token function">git</span> rebase <span class="token parameter variable">--continue</span> // 继续 rebase
// 若还在 rebase 状态，则重复 <span class="token number">2</span>、3、4，直至 rebase 完成出现 applying 字样
<span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="18-revert-还原到更改"><a href="#18-revert-还原到更改" class="headerlink" title="18. revert 还原到更改"></a>18. revert 还原到更改</h3><ul>
<li><p>之前的更改仍会保留在 git log 中，而此次还原会做为一次新的更改</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> log // 查找需要还原的 commit_id
<span class="token function">git</span> revert commit_id  // 还原到这次更改<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
</li>
<li><p>merge 节点的话，则需要加上 -m 指令</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> revert commit_id <span class="token parameter variable">-m</span> <span class="token number">1</span> // 第一个更改点
// 手动解决冲突
<span class="token function">git</span> <span class="token function">add</span> <span class="token parameter variable">-A</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">""</span>
<span class="token function">git</span> revert commit_id <span class="token parameter variable">-m</span> <span class="token number">2</span> // 第二个更改点
// 重复 <span class="token number">2</span>，3，4
<span class="token function">git</span> push<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="19-merge-合并分支"><a href="#19-merge-合并分支" class="headerlink" title="19. merge 合并分支"></a>19. merge 合并分支</h3><ul>
<li><p>合并分支到当前分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch <span class="token parameter variable">-a</span> <span class="token parameter variable">-vv</span> // 查看所有分支是否为最新更改
// 拉取最新更改
<span class="token function">git</span> merge <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> // 合并为v祸从口出当前分支<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="20-fetch-抓取"><a href="#20-fetch-抓取" class="headerlink" title="20. fetch 抓取"></a>20. fetch 抓取</h3><ul>
<li><p>清除无效分支</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> fetch <span class="token parameter variable">-p</span> // 删除本地存在，但远程不存在的分支<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li>
</ul>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>常用数据库默认端口</title>
    <url>/ExperienceEssay/DBPort/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>常用数据库默认端口</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>数据库</th>
<th>端口</th>
</tr>
</thead>
<tbody><tr>
<td>MySql</td>
<td>3306</td>
</tr>
<tr>
<td>Oracle</td>
<td>1521</td>
</tr>
<tr>
<td>SqlServer</td>
<td>1433</td>
</tr>
<tr>
<td>DB2</td>
<td>5000</td>
</tr>
<tr>
<td>PostgreSQL</td>
<td>5432</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>DB</tag>
        <tag>Port</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac + Hexo + Gitee Pages 搭建在线自生成静态Blog</title>
    <url>/ExperienceEssay/GiteeHexo/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>以前都是在本地生成静态站点，然后提交到代码库再更新 Blog，很不方便。最近看到 Gitee 支持 Hexo 在线生成，于是全部上传到了代码库中，这下可以随时随地记录了。</p>
<span id="more"></span>

<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><ol>
<li>git <span class="exturl" data-url="aHR0cHM6Ly9naXQtc2NtLmNvbS8=">https://git-scm.com<i class="fa fa-external-link-alt"></i></span></li>
<li>node.js <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL3poLWNu">https://nodejs.org/zh-cn<i class="fa fa-external-link-alt"></i></span></li>
<li>hexo <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3M=">https://hexo.io/zh-cn/docs<i class="fa fa-external-link-alt"></i></span></li>
</ol>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>具体过程与部署步骤就不在这里说了，hexo 站点中很详细，这里主要说怎么部署到 Gitee</p>
<ol>
<li><p>按 hexo 文档本地部署并配置好项目，测试正常</p>
</li>
<li><p>将自己的主题配置文件复制到 Blog 项目根目录</p>
<blockquote>
<p>修改文件名为: _config.[theme].yml (<em>theme:主题文件夹名，一般是主题名称</em>)</p>
</blockquote>
</li>
<li><p>将自己的个性化静态文件复制到 source 目录下</p>
<blockquote>
<p>如我个性化了部分主题中的图片，于是将这些图片放到了 source 下的 images，在 config 中 使用路径为: &#x2F;images&#x2F;[imageName]</p>
</blockquote>
</li>
<li><p>上传代码到 Gitee</p>
<blockquote>
<p>配置文件和包文件<br>_config.yml、_comfig.[theme].yml、package.json<br>及文件夹<br>scaffolds、source、themes</p>
</blockquote>
</li>
<li><p>添加 Blog 文章</p>
</li>
<li><p>进入代码库 -&gt; 服务 -&gt; Pages，点击更新</p>
</li>
</ol>
<h3 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h3><p>🎉 现在可以随时在 Gitee 中的 WebIDE 编写文章了！脱离了本地环境的限制，感觉自由 🆓 原来是这么的美好！</p>
<blockquote>
<p><strong>记得要更新 Blog 内容时去 Pages 再次点击更新哦！</strong></p>
</blockquote>
<hr>
<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo init [folder]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章"></a>添加文章</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo new [post] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-p, –path</td>
<td align="left">自定义新文章的路径</td>
</tr>
<tr>
<td align="left">-r, –replace</td>
<td align="left">如果存在同名文章，将其替换</td>
</tr>
<tr>
<td align="left">-s, –slug</td>
<td align="left">文章的 Slug，作为新文章的文件名和发布后的 URL</td>
</tr>
</tbody></table>
<h2 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo g | generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-d, –deploy</td>
<td align="left">文件生成后立即部署网站</td>
</tr>
<tr>
<td align="left">-w, –watch</td>
<td align="left">监视文件变动</td>
</tr>
<tr>
<td align="left">-b, –bail</td>
<td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td>
</tr>
<tr>
<td align="left">-f, –force</td>
<td align="left">强制重新生成文件</br>Hexo 引入了差分机制，如果 public 目录存在，那么 hexo g 只会重新生成改动的文件。</br>使用该参数的效果接近 hexo clean &amp;&amp; hexo generate</td>
</tr>
<tr>
<td align="left">-c, –concurrency</td>
<td align="left">最大同时生成文件的数量，默认无限制</td>
</tr>
</tbody></table>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-p, –port</td>
<td align="left">重设端口</td>
</tr>
<tr>
<td align="left">-s, –static</td>
<td align="left">只使用静态文件</td>
</tr>
<tr>
<td align="left">-l, –log</td>
<td align="left">启动日记记录，使用覆盖记录格式</td>
</tr>
</tbody></table>
<h2 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo d | deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-g, –generate</td>
<td align="left">部署之前预先生成静态文件</td>
</tr>
</tbody></table>
<h2 id="渲染文件"><a href="#渲染文件" class="headerlink" title="渲染文件"></a>渲染文件</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo render &lt;file1&gt; [file2] ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<table>
<thead>
<tr>
<th align="left">选项</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-o, –output</td>
<td align="left">设置输出路径</td>
</tr>
</tbody></table>
<h2 id="从其他博客系统-迁移内容"><a href="#从其他博客系统-迁移内容" class="headerlink" title="从其他博客系统 迁移内容"></a>从其他博客系统 <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvbWlncmF0aW9u">迁移内容<i class="fa fa-external-link-alt"></i></span></h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo migrate &lt;file1&gt; [file2] ...<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="清除缓存"><a href="#清除缓存" class="headerlink" title="清除缓存"></a>清除缓存</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo clean<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="列出网站资料"><a href="#列出网站资料" class="headerlink" title="列出网站资料"></a>列出网站资料</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo list &lt;type&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="显示-Hexo-版本"><a href="#显示-Hexo-版本" class="headerlink" title="显示 Hexo 版本"></a>显示 Hexo 版本</h2><pre class="line-numbers language-base" data-language="base"><code class="language-base">[npx] hexo version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Hexo</tag>
        <tag>Gitee Pages</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 无线投屏 Scrcpy</title>
    <url>/ExperienceEssay/Scrcpy/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>安卓手机无线投屏到 Mac</p>
<span id="more"></span>

<h3 id="安装-Scrcpy"><a href="#安装-Scrcpy" class="headerlink" title="安装 Scrcpy"></a>安装 Scrcpy</h3><p>国外源码 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL21pcnJvcnMvc2NyY3B5">https://github.com/mirrors/scrcpy<i class="fa fa-external-link-alt"></i></span><br>国内镜像 <span class="exturl" data-url="aHR0cHM6Ly9naXRlZS5jb20vbWlycm9ycy9zY3JjcHk=">https://gitee.com/mirrors/scrcpy<i class="fa fa-external-link-alt"></i></span></p>
<ol>
<li>清华源 homebrew 安装<blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9taXJyb3JzLnR1bmEudHNpbmdodWEuZWR1LmNuL2hlbHAvaG9tZWJyZXcv">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
</li>
<li>调试包 adb 安装<br><code>brew install android-platform-tools</code></li>
<li>安装 scrcpy<br><code>brew install scrcpy</code></li>
</ol>
<h3 id="连接手机"><a href="#连接手机" class="headerlink" title="连接手机"></a>连接手机</h3><ol>
<li>打开手机 USB 调试<blockquote>
<p>有些手机需打开“仅充电形式下打开 ADB 调试”，当通知档显示有 USB 调试即配置成功</p>
</blockquote>
</li>
<li>连接 USB</li>
<li>运行 scrcpy<br><code>scrcpy</code></li>
</ol>
<h3 id="无线投屏"><a href="#无线投屏" class="headerlink" title="无线投屏"></a>无线投屏</h3><ol>
<li>按连接手机步骤完成</li>
<li>打开配置 adb 连接端口<br><code>adb tcpip [port]</code></li>
<li>查看手机 IP<br><code>adb shell ip route | awk &#39;&#123;print $9&#125;&#39;</code></li>
<li>拔下设备插头</li>
<li>打开 adb 调试链接<br><code>adb connect [ip]:[port]</code></li>
<li>运行 scrcpy<br><code>scrcpy</code></li>
</ol>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>Scrcpy</tag>
        <tag>无线投屏</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 常用命令</title>
    <url>/Linux/LinuxShell/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Linux 常用命令</p>
<span id="more"></span>

<h3 id="环境查看"><a href="#环境查看" class="headerlink" title="环境查看"></a>环境查看</h3><ul>
<li>操作系统和位数信息<br><code>uname -m &amp;&amp; cat /etc/*release</code></li>
<li>处理器<br><code>arch</code></li>
<li>系统内核<br><code>uname -a</code></li>
<li>系统版本<br><code>cat /etc/lsb-release</code></li>
<li>已加载的文件系统<br><code>cat /proc/mounts</code></li>
<li>PCI 设备<br><code>ls pci -tv</code></li>
<li>USB 设备<br><code>ls usb -tv</code></li>
</ul>
<h3 id="后台进程命令"><a href="#后台进程命令" class="headerlink" title="后台进程命令"></a>后台进程命令</h3><ol>
<li>运行后台进程<br>  <code>sudo nohup [commandName] [&gt; logFile] [2&gt;&amp;1] [&amp;]</code></li>
</ol>
<blockquote>
<ul>
<li>commandName 命令名称</li>
<li>&gt; logFile 输出日志</li>
<li>2&gt;&amp;1 错误日志重定向到输出日志</li>
<li>&amp; 后台运行进程</li>
</ul>
</blockquote>
<h3 id="查看进程命令"><a href="#查看进程命令" class="headerlink" title="查看进程命令"></a>查看进程命令</h3><ol>
<li>根据名称查看<br>  <code>sudo ps -fe | grep [commandName]</code></li>
</ol>
<h3 id="结束进程命令"><a href="#结束进程命令" class="headerlink" title="结束进程命令"></a>结束进程命令</h3><ol>
<li>查看端口被哪个程序占用<br>  <code>sudo lsof -i tcp:port</code></li>
<li>看到进程的 PID，可以将进程杀死。<br>  <code>sudo kill -9 PID</code></li>
</ol>
<h3 id="硬件挂载"><a href="#硬件挂载" class="headerlink" title="硬件挂载"></a>硬件挂载</h3><ol>
<li>挂载<br>  <code>sudo mount /dev/[deviceName] [Path(一艘为/mnt/[deviceName])]</code></li>
<li>看到进程的 PID，可以将进程杀死。<br>  <code>sudo umount [Path]</code></li>
</ol>
<h3 id="DNS管理"><a href="#DNS管理" class="headerlink" title="DNS管理"></a>DNS管理</h3><ol>
<li>编辑&#x2F;etc&#x2F;resolv.conf文件</li>
</ol>
<blockquote>
<p>在文件中添加以下行：<br>nameserver [dnsHost]</p>
<p>请注意，如果您的系统使用resolvconf或其他网络管理服务，您可能需要按照该服务的规范来添加DNS服务器，以确保更改在系统重启后持久生效。在某些系统中，&#x2F;etc&#x2F;resolv.conf文件可能是一个符号链接，指向&#x2F;etc&#x2F;resolvconf&#x2F;resolv.conf.d&#x2F;head或其他位置，您可能需要编辑相应的文件。</p>
</blockquote>
<h3 id="权限设置"><a href="#权限设置" class="headerlink" title="权限设置"></a>权限设置</h3><p>在Ubuntu中，您可以使用chmod和chown命令来设置文件夹的权限，并确保当前用户拥有所需的访问权限。以下是一些基本的命令示例：</p>
<ol>
<li><p>给当前用户设置文件夹的读权限：<br>  &#96;chmod u+r 文件夹名称</p>
</li>
<li><p>给当前用户设置文件夹的写权限：<br>  <code>chmod u+w 文件夹名称</code></p>
</li>
<li><p>给当前用户设置文件夹的执行权限：<br>  <code>chmod u+x 文件夹名称</code></p>
</li>
<li><p>同时给当前用户设置文件夹的读写执行权限：<br>  <code>chmod u+rwx 文件夹名称</code></p>
</li>
<li><p>如果需要递归地应用权限到所有子文件和子文件夹，可以使用-R选项：<br>  <code>chmod -R u+rwx 文件夹名称</code></p>
</li>
<li><p>确保当前用户是文件夹的所有者：<br>  <code>sudo chown $(whoami) 文件夹名称</code></p>
<blockquote>
<p>请将“文件夹名称”替换为您要修改权限的实际文件夹名称。如果您需要为组设置权限，可以使用g代替u。如果您需要为所有用户设置权限，可以使用a代替u。</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 安装 PaddleX</title>
    <url>/Paddlex/Install/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>飞桨全流程开发工具，集飞桨核心框架、模型库、工具及组件等深度学习开发所需全部能力于一身，打通深度学习开发全流程。PaddleX 同时提供简明易懂的 Python API，及一键下载安装的图形化开发客户端。用户可根据实际生产需求选择相应的开发方式，获得飞桨全流程开发的最佳体验。</p>
<span id="more"></span>

<h2 id="API-方式"><a href="#API-方式" class="headerlink" title="API 方式"></a>API 方式</h2><p>推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。</p>
<blockquote>
<p>Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。<br>使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。</p>
</blockquote>
<ol>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2luZGl2aWR1YWw=">Anaconda 下载<i class="fa fa-external-link-alt"></i></span><blockquote>
<p>选择 64-Bit Graphical Installer 下载</p>
</blockquote>
</li>
<li>创建 Python 环境<blockquote>
<p>conda create -n [paddlexName] python&#x3D;[version]<br>注：<em>M1 版本 CPU 选择 3.8，Intel 建议选择 Python3</em></p>
</blockquote>
</li>
<li>进入 Python 环境，部署依赖库<blockquote>
<p>conda activate [paddlexName]<br>pip install cython<br>pip install pycocotools</p>
</blockquote>
</li>
<li>安装 PaddlePaddle 与 PaddleX<blockquote>
<p>pip install paddlepaddle 或 paddlepaddle-gpu<br>pip install paddlex</p>
</blockquote>
</li>
</ol>
<h3 id="架构不匹配可按如下方式创建环境"><a href="#架构不匹配可按如下方式创建环境" class="headerlink" title="架构不匹配可按如下方式创建环境"></a>架构不匹配可按如下方式创建环境</h3><pre class="line-numbers language-console" data-language="console"><code class="language-console"># 创建一个可以安装 x64 包的虚拟环境
CONDA_SUBDIR&#x3D;osx-64 conda create -n [paddlexName] python&#x3D;[version]

# 激活该环境
conda activate [paddlexName]

# 验证该环境支持平台
python -c &quot;import platform;print(platform.machine())&quot;

# 确保该环境为创建的包为 x64 架构所用
conda env config vars set CONDA_SUBDIR&#x3D;osx-64

# 退出该环境
conda deactivate

# 重新激活该环境
conda activate [paddlexName]

# 查看环境变量，确定是osx-64
echo &quot;CONDA_SUBDIR: $CONDA_SUBDIR&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>安装完成后可进入 Python 进行测试</p>
<h2 id="GUI-方式"><a href="#GUI-方式" class="headerlink" title="GUI 方式"></a>GUI 方式</h2><ol>
<li><span class="exturl" data-url="aHR0cHM6Ly93d3cucGFkZGxlcGFkZGxlLm9yZy5jbi9wYWRkbGV4L2Rvd25sb2Fk">PaddleX GUI 下载<i class="fa fa-external-link-alt"></i></span></li>
<li>解压后，修改文件夹名称为：[可执行文件名称].app</li>
<li>拷贝到应用程序目录下，安装完毕</li>
</ol>
<blockquote>
<p>也可按文件夹中提示方式直接使用</p>
</blockquote>
<h2 id="Restful-方式"><a href="#Restful-方式" class="headerlink" title="Restful 方式"></a>Restful 方式</h2><p><span class="exturl" data-url="aHR0cHM6Ly9iai5iY2Vib3MuY29tL3BhZGRsZXgvUGFkZGxlWF9SZW1vdGVfR1VJL21hYy9QYWRkbGVYX1JlbW90ZV9HVUkuemlw">Mac 版下载地址<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9iai5iY2Vib3MuY29tL3BhZGRsZXgvUGFkZGxlWF9SZW1vdGVfR1VJL3dpbmRvd3MvUGFkZGxlWF9SZW1vdGVfR1VJLnppcA==">Win 版下载地址<i class="fa fa-external-link-alt"></i></span></p>
<blockquote>
<p>下载后解压按说明文件操作即可<br><span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1BhZGRsZVBhZGRsZS9QYWRkbGVYL2Jsb2IvZGV2ZWxvcC9kb2NzL1Jlc2Z1bF9BUEkvZG9jcy9yZWFkbWUubWQ=">详细说明<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>PaddlePaddle</tag>
        <tag>PaddleX</tag>
        <tag>VC</tag>
        <tag>ML</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>npm 命令行使用</title>
    <url>/ExperienceEssay/Npm/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>npm 使用经验与命令总结</p>
<span id="more"></span>

<h3 id="node-sass-问题"><a href="#node-sass-问题" class="headerlink" title="node-sass 问题"></a>node-sass 问题</h3><ul>
<li><p>MacM1 下无法编译 node-sass，问题出现是因 node-sass 不支持 arm64，node16 后支持了 M1 安装包已升级成为 arm64包。</p>
<blockquote>
<p>解决办法，去 Node.js 官网下载对应版本的 <span class="exturl" data-url="aHR0cHM6Ly9ub2RlanMub3JnL2Rpc3QvdjE2LjE0LjIvbm9kZS12MTYuMTQuMi1kYXJ3aW4teDY0LnRhci5neg==">x64<i class="fa fa-external-link-alt"></i></span> 版本，然后按手动复制到 &#x2F;usr&#x2F;local</p>
<p><em><strong>注：其他版本同理</strong></em></p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>MacApiError 数据处理中流不可异步写入</title>
    <url>/Problem/MacApiError/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>最近在苹果本上运行 NetCore WebApi 时遇到的问题</p>
<span id="more"></span>

<h2 id="出现的问题"><a href="#出现的问题" class="headerlink" title="出现的问题"></a>出现的问题</h2><ol>
<li>未做数据过滤时正常</li>
<li>数据过滤，进行加密后报错</li>
<li>去掉数据加密正常</li>
<li>Win 系列系统正常</li>
<li>Mac 系统不正常（其他 Linux 未做测试）</li>
</ol>
<h2 id="问题出现原因"><a href="#问题出现原因" class="headerlink" title="问题出现原因"></a>问题出现原因</h2><ol>
<li>数据加密需要对返回内容做加密处理，并写入流</li>
<li>WebApi 数据处理中流不可直接异步写入，也不可同步写入</li>
</ol>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ol>
<li>服务配置为允许同步写入: AllowSynchronousIO &#x3D; true<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>KestrelServerOptions<span class="token punctuation">></span></span></span><span class="token punctuation">(</span>option <span class="token operator">=></span> option<span class="token punctuation">.</span>AllowSynchronousIO <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
services<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Configure</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>IISServerOptions<span class="token punctuation">></span></span></span><span class="token punctuation">(</span>option <span class="token operator">=></span> option<span class="token punctuation">.</span>AllowSynchronousIO <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li>
<li>异步、同步都可写入了<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token class-name"><span class="token keyword">var</span></span> resWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StreamWriter</span><span class="token punctuation">(</span>resOrigin<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> resWriter<span class="token punctuation">.</span><span class="token function">WriteAsync</span><span class="token punctuation">(</span>writeStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">await</span> resWriter<span class="token punctuation">.</span><span class="token function">FlushAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//将原始的请求和响应流替换回去</span>
context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Body <span class="token operator">=</span> reqOrigin<span class="token punctuation">;</span>
context<span class="token punctuation">.</span>Response<span class="token punctuation">.</span>Body <span class="token operator">=</span> resOrigin<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
]]></content>
      <categories>
        <category>问题记录</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>NetCore</tag>
      </tags>
  </entry>
  <entry>
    <title>uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动</title>
    <url>/Problem/UniApp_GPS/</url>
    <content><![CDATA[<h3 id="uniapp-判断-IOS-和-Android-的-GPS-是否开启并设置启动"><a href="#uniapp-判断-IOS-和-Android-的-GPS-是否开启并设置启动" class="headerlink" title="uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动"></a>uniapp 判断 IOS 和 Android 的 GPS 是否开启并设置启动</h3><span id="more"></span>

<h4 id="Native-js-原生-API"><a href="#Native-js-原生-API" class="headerlink" title="Native.js 原生 API"></a>Native.js 原生 API</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> system <span class="token operator">=</span> uni<span class="token punctuation">.</span><span class="token function">getSystemInfoSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取系统信息</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>system<span class="token punctuation">.</span>platform <span class="token operator">===</span> <span class="token string">"android"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// 判断平台</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> plus<span class="token punctuation">.</span>android<span class="token punctuation">.</span><span class="token function">importClass</span><span class="token punctuation">(</span><span class="token string">"android.content.Context"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> locationManager <span class="token operator">=</span> plus<span class="token punctuation">.</span>android<span class="token punctuation">.</span><span class="token function">importClass</span><span class="token punctuation">(</span>
    <span class="token string">"android.location.LocationManager"</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> main <span class="token operator">=</span> plus<span class="token punctuation">.</span>android<span class="token punctuation">.</span><span class="token function">runtimeMainActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> mainSvr <span class="token operator">=</span> main<span class="token punctuation">.</span><span class="token function">getSystemService</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token constant">LOCATION_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mainSvr<span class="token punctuation">.</span><span class="token function">isProviderEnabled</span><span class="token punctuation">(</span>locationManager<span class="token punctuation">.</span><span class="token constant">GPS_PROVIDER</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    uni<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"提示"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">"请打开定位服务功能"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">showCancel</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 不显示取消按钮</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mainSvr<span class="token punctuation">.</span><span class="token function">isProviderEnabled</span><span class="token punctuation">(</span>locationManager<span class="token punctuation">.</span><span class="token constant">GPS_PROVIDER</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
          <span class="token keyword">var</span> Intent <span class="token operator">=</span> plus<span class="token punctuation">.</span>android<span class="token punctuation">.</span><span class="token function">importClass</span><span class="token punctuation">(</span><span class="token string">"android.content.Intent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> Settings <span class="token operator">=</span> plus<span class="token punctuation">.</span>android<span class="token punctuation">.</span><span class="token function">importClass</span><span class="token punctuation">(</span><span class="token string">"android.provider.Settings"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">var</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span>Settings<span class="token punctuation">.</span><span class="token constant">ACTION_LOCATION_SOURCE_SETTINGS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          main<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打开系统设置GPS服务页面</span>
        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"GPS功能已开启"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>system<span class="token punctuation">.</span>platform <span class="token operator">===</span> <span class="token string">"ios"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">var</span> cllocationManger <span class="token operator">=</span> plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">"CLLocationManager"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> enable <span class="token operator">=</span> cllocationManger<span class="token punctuation">.</span><span class="token function">locationServicesEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> status <span class="token operator">=</span> cllocationManger<span class="token punctuation">.</span><span class="token function">authorizationStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span>cllocationManger<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>enable <span class="token operator">&amp;&amp;</span> status <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"手机系统的定位已经打开"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"手机系统的定位没有打开"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    uni<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"提示"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">"请打开定位服务功能"</span><span class="token punctuation">,</span>
      <span class="token literal-property property">showCancel</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 不显示取消按钮</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">var</span> UIApplication <span class="token operator">=</span> plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">"UIApplication"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> application2 <span class="token operator">=</span> UIApplication<span class="token punctuation">.</span><span class="token function">sharedApplication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> <span class="token constant">NSURL2</span> <span class="token operator">=</span> plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">"NSURL"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// var setting2 = NSURL2.URLWithString("prefs:root=LOCATION_SERVICES");</span>
        <span class="token comment">// var setting2 = NSURL2.URLWithString("App-Prefs:root=LOCATION_SERVICES");</span>
        <span class="token comment">// var setting2 = NSURL2.URLWithString("app-settings");</span>
        <span class="token keyword">var</span> setting2 <span class="token operator">=</span> <span class="token constant">NSURL2</span><span class="token punctuation">.</span><span class="token function">URLWithString</span><span class="token punctuation">(</span>
          <span class="token string">"App-Prefs:root=Privacy&amp;path=LOCATION"</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// var setting2 = NSURL2.URLWithString("App-Prefs:root=Privacy&amp;path=LOCATION_SERVICES");</span>
        application2<span class="token punctuation">.</span><span class="token function">openURL</span><span class="token punctuation">(</span>setting2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span>setting2<span class="token punctuation">)</span><span class="token punctuation">;</span>
        plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span><span class="token constant">NSURL2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        plus<span class="token punctuation">.</span>ios<span class="token punctuation">.</span><span class="token function">deleteObject</span><span class="token punctuation">(</span>application2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="permission-模块"><a href="#permission-模块" class="headerlink" title="permission 模块"></a>permission 模块</h4><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9leHQuZGNsb3VkLm5ldC5jbi9wbHVnaW4/aWQ9NTk0">https://ext.dcloud.net.cn/plugin?id=594<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>问题记录</category>
      </categories>
      <tags>
        <tag>UniApp</tag>
        <tag>GPS</tag>
      </tags>
  </entry>
  <entry>
    <title>MacM1 添加 libgdiplus 包</title>
    <url>/Problem/libgdiplus/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MacM1 添加 libgdiplus 包</p>
<span id="more"></span>

<h3 id="安装-libgdiplus"><a href="#安装-libgdiplus" class="headerlink" title="安装 libgdiplus"></a>安装 libgdiplus</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">brew <span class="token function">install</span> mono-libgdiplus<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><img data-src="/Problem/libgdiplus/install.png" alt="install"></p>
<h3 id="引用-CoreCompat"><a href="#引用-CoreCompat" class="headerlink" title="引用 CoreCompat"></a>引用 CoreCompat</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">dotnet <span class="token function">add</span> package runtime.osx.10.10-x64.CoreCompat.System.Drawing<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
]]></content>
      <categories>
        <category>问题记录</category>
      </categories>
      <tags>
        <tag>NetCore</tag>
        <tag>MacM1</tag>
        <tag>libgdiplus</tag>
      </tags>
  </entry>
  <entry>
    <title>MacM1 配置 Python 环境</title>
    <url>/Python/MacM1Python/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MacM1 部署 Python 环境后，大多数 AI 框架支持总是出问题，这里分享下自己的经验。</p>
<span id="more"></span>

<h2 id="安装-Anaconda"><a href="#安装-Anaconda" class="headerlink" title="安装 Anaconda"></a>安装 Anaconda</h2><p>推荐大家先安装 Anacaonda，而后在新建的 conda 环境中安装，以避免卸载时的麻烦。</p>
<blockquote>
<p>Anaconda 是一个开源的 Python 发行版本，其包含了 conda、Python 等 180 多个科学包及其依赖项。<br>使用 Anaconda 可以通过创建多个独立的 Python 环境，避免用户的 Python 环境安装太多不同版本依赖导致冲突。</p>
</blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuYW5hY29uZGEuY29tL3Byb2R1Y3RzL2luZGl2aWR1YWw=">选择 64-Bit Graphical Installer 下载<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="处理架构不匹配问题"><a href="#处理架构不匹配问题" class="headerlink" title="处理架构不匹配问题"></a>处理架构不匹配问题</h2><pre class="line-numbers language-console" data-language="console"><code class="language-console"># 创建一个可以安装 x64 包的虚拟环境
CONDA_SUBDIR&#x3D;osx-64 conda create -n [paddlexName] python&#x3D;[version]

# 激活该环境
conda activate [paddlexName]

# 验证该环境支持平台
python -c &quot;import platform;print(platform.machine())&quot;

# 确保该环境为创建的包为 x64 架构所用
conda env config vars set CONDA_SUBDIR&#x3D;osx-64

# 退出该环境
conda deactivate

# 重新激活该环境
conda activate [paddlexName]

# 查看环境变量，确定是osx-64
echo &quot;CONDA_SUBDIR: $CONDA_SUBDIR&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>安装完成后可进入 Python 进行测试</p>
<h2 id="ubuntu处理OpenGL"><a href="#ubuntu处理OpenGL" class="headerlink" title="ubuntu处理OpenGL"></a>ubuntu处理OpenGL</h2><p>在Ubuntu系统中，libGL.so.1 是 OpenGL 的动态链接库，通常由 Mesa 或者其他图形驱动包提供。如果你遇到了需要安装 libGL.so.1 的情况，可以通过以下命令来安装：</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">sudo apt-get update
sudo apt-get install libgl1-mesa-glx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>这条命令会安装 Mesa 提供的 OpenGL 实现库，确保你的系统有图形界面的话，这通常是必须的。如果你在没有图形界面的服务器上运行需要 OpenGL 的程序，你可能需要安装头文件和开发库：</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">sudo apt-get install libgl1-mesa-dev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>如果你遇到了特定版本的依赖问题，可以使用 apt-file 工具来查找并安装所需的文件：</p>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">sudo apt-get install apt-file
sudo apt-file update
sudo apt-file search libGL.so.1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>然后根据 apt-file 提供的信息安装相应的包。</p>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mac M1</tag>
        <tag>Anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>Psycopg</title>
    <url>/Python/Psycopg/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Psycopg 3是一个新设计的PostgreSQL数据库适配器，用于Python编程语言。</p>
<span id="more"></span>

<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote>
<p>pip &gt; 20.3<br>python &gt; 3.6<br>PostgreSQL &gt; 10</p>
</blockquote>
<pre class="line-numbers language-console" data-language="console"><code class="language-console">pip install psycopg
pip install psycopg_binary<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> psycopg

conn <span class="token operator">=</span> psycopg<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">"dbname=&lt;dbname> user=&lt;username> password=&lt;password>"</span><span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>

    <span class="token keyword">with</span> conn<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cur<span class="token punctuation">:</span>
        <span class="token keyword">for</span> record <span class="token keyword">in</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT * FROM test"</span><span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span>
        <span class="token keyword">for</span> record <span class="token keyword">in</span> cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT now()"</span><span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span>

    <span class="token keyword">with</span> conn<span class="token punctuation">.</span>transaction<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> record <span class="token keyword">in</span> conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT * FROM test"</span><span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span>
        <span class="token keyword">for</span> record <span class="token keyword">in</span> conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT now()"</span><span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span>conn<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT (%s %% 2) = 1 AS even"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> binary<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fetchone<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">except</span> BaseException<span class="token punctuation">:</span>
    conn<span class="token punctuation">.</span>rollback<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    conn<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">finally</span><span class="token punctuation">:</span>
    conn<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PostgreSQL</tag>
        <tag>Psycopg</tag>
      </tags>
  </entry>
  <entry>
    <title>坐标转换</title>
    <url>/Utils/Coordtransform/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>提供了百度坐标（BD09）、国测局坐标（火星坐标，GCJ02）、和WGS84坐标系之间的转换的工具模块。</p>
<span id="more"></span>

<p>国测局坐标(火星坐标,比如高德地图在用),百度坐标,wgs84坐标(谷歌国外以及绝大部分国外在线地图使用的坐标)。</p>
<h3 id="需转换的坐标，一行一条，格式如下："><a href="#需转换的坐标，一行一条，格式如下：" class="headerlink" title="需转换的坐标，一行一条，格式如下："></a>需转换的坐标，一行一条，格式如下：</h3><p>分隔符：<input value="," onchange="oldSplitChange(this)" /></p>
<blockquote>
<p>116.404<span name="old_split">,</span>39.915<br>116.404<span name="old_split">,</span>39.915</p>
</blockquote>
<textarea id="old_value" style="width:100%;height: 200px"></textarea>

<select id="coord_select">
  <option>bd09 to gcj02</option>
  <option>gcj02 to bd09</option>
  <option>wgs84 to gcj02</option>
  <option>gcj02 to wgs84</option>
</select>
<button onclick="ctf()">转换</button>

<h3 id="转换出的坐标"><a href="#转换出的坐标" class="headerlink" title="转换出的坐标"></a>转换出的坐标</h3><p>分隔符：<input value="," onchange="newSplitChange(this)" /></p>
<textarea id="new_value" style="width:100%;height: 200px"></textarea>

<script src="/utils/coordtransform.js"></script>
<script>
  var old_split = ',', new_split = ',';
  function oldSplitChange(obj){
    if(obj.value != '') old_split = obj.value;
    document.getElementsByName('old_split').forEach(item=>{item.innerHTML = old_split});
  }
  function newSplitChange(obj){
    if(obj.value != '') new_split = obj.value;
  }
  function ctf() {
    var select = document.getElementById('coord_select'); //定位id
    var index = select.selectedIndex; // 选中索引
    var text = select.options[index].text; // 选中文本
    var tffn;
    switch(text) {
      //百度经纬度坐标转国测局坐标
      case 'bd09 to gcj02':
        tffn = coordtransform.bd09togcj02;
        break;
      //国测局坐标转百度经纬度坐标
      case 'gcj02 to bd09':
        tffn = coordtransform.gcj02tobd09;
        break;
      //wgs84转国测局坐标
      case 'wgs84 to gcj02':
        tffn = coordtransform.wgs84togcj02;
        break;
      //国测局坐标转wgs84坐标
      case 'gcj02 to wgs84':
        tffn = coordtransform.gcj02towgs84;
        break;
      default:
        tffn = coordtransform.bd09togcj02;
        break;
    }
    var old_coord = document.getElementById('old_value').value.split('\n').map(item=>{return item.split(old_split)});
    var new_coord = '';
    for(const item of old_coord) {
      if(new_coord != '') new_coord += '\n';
      var coord = tffn(item[0],item[1]);
      new_coord += coord[0] + new_split + coord[1];
      if(item.length>2){
        for (let index = 2; index < item.length; index += 2){
          coord = tffn(item[index],item[index + 1]);
          new_coord += new_split + coord[0] + new_split + coord[1];
        }
      }
    }
    document.getElementById('new_value').value = new_coord;
  }
</script>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>coordinate</tag>
        <tag>wgs84</tag>
        <tag>bd09</tag>
        <tag>gcj02</tag>
        <tag>transform</tag>
      </tags>
  </entry>
  <entry>
    <title>串口学习笔记</title>
    <url>/WinForm/SerialPort/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>串口学习笔记</p>
<span id="more"></span>

<h3 id="一、什么是串口"><a href="#一、什么是串口" class="headerlink" title="一、什么是串口"></a>一、什么是串口</h3><p>串口通信(Serial Communication)，是一种用于在计算机和外部设备之间传输数据的通信方式。它使用串行数据传输的方式，通过计算机的串口与外部设备进行数据交换。串口通信常用于连接各种设备，例如打印机、调制解调器、传感器等。它通过逐位传输数据，可以实现可靠的数据传输和通信。</p>
<h3 id="二、常用的串口通信方式主要包括以下几种"><a href="#二、常用的串口通信方式主要包括以下几种" class="headerlink" title="二、常用的串口通信方式主要包括以下几种"></a>二、常用的串口通信方式主要包括以下几种</h3><ul>
<li><p>RS-232：</p>
<blockquote>
<p>RS-232是一种常见的串口通信标准，用于在计算机和外部设备之间传输数据。它使用DB-9或DB-25连接器，支持较短距离的数据传输。</p>
</blockquote>
</li>
<li><p>RS-485：</p>
<blockquote>
<p>RS-485是一种多点通信协议，可以实现多个设备之间的串口通信。它支持较长距离的数据传输，通常用于工业控制系统和远程监控等领域。</p>
</blockquote>
</li>
<li><p>USB串口：</p>
<blockquote>
<p>USB串口是通过USB接口进行串口通信的方式。它广泛应用于各种外部设备，如打印机、调制解调器、数码相机等。</p>
</blockquote>
</li>
<li><p>TTL串口：</p>
<blockquote>
<p>TTL串口是一种基于TTL电平的串口通信方式，常用于嵌入式系统和单片机开发中。</p>
</blockquote>
</li>
</ul>
<h3 id="三、串口怎样通信"><a href="#三、串口怎样通信" class="headerlink" title="三、串口怎样通信"></a>三、串口怎样通信</h3><p>串口通信的基本原理是通过发送和接收数据位来实现。下面是串口通信的基本步骤：</p>
<ol>
<li><p>确定串口参数：首先需要确定串口的参数，包括波特率（Baud Rate）、数据位（Data Bits）、停止位（Stop Bits）和校验位（Parity）等。这些参数需要在发送和接收端保持一致。</p>
<blockquote>
<p>以下是一些常见的串口参数定义方式：</p>
<ul>
<li>波特率（Baud Rate）：指的是每秒传输的比特数。常见的波特率有9600、115200等。发送和接收数据的设备必须使用相同 的波特率才能正常通信。</li>
<li>数据位（Data Bits）：指的是每个数据字节中所使用的位数。常见的数据位有5、6、7、8位。</li>
<li>停止位（Stop Bits）：指的是每个数据字节之后的停止位数。常见的停止位有1位和2位。</li>
<li>校验位（Parity Bit）：用于数据传输的错误检测。常见的校验位有无校验位、奇校验位和偶校验位。</li>
</ul>
<p>串口参数的定义可以根据具体的应用需求进行配置，以确保设备之间的串口通信正常进行。</p>
</blockquote>
</li>
<li><p>打开串口：在计算机或设备上，需要打开串口以进行通信。这可以通过编程语言或串口通信工具实现。</p>
<p>在C#中，你可以使用 <code>System.IO.Ports</code> 命名空间提供的 <code>SerialPort</code> 类来打开和操作串口。下面是使用C#打开232和485串口的示例代码：</p>
<ul>
<li><p>打开232串口：</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Ports</span><span class="token punctuation">;</span>
<span class="token comment">// 创建SerialPort对象</span>
<span class="token class-name">SerialPort</span> serialPort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SerialPort</span><span class="token punctuation">(</span><span class="token string">"COM1"</span><span class="token punctuation">,</span> <span class="token number">9600</span><span class="token punctuation">,</span> Parity<span class="token punctuation">.</span>None<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> StopBits<span class="token punctuation">.</span>One<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 打开串口</span>
serialPort<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 串口打开后，可以进行数据的读取和写入操作</span>
<span class="token comment">// 关闭串口</span>
serialPort<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>打开485串口：</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO<span class="token punctuation">.</span>Ports</span><span class="token punctuation">;</span>
<span class="token comment">// 创建SerialPort对象</span>
<span class="token class-name">SerialPort</span> serialPort <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SerialPort</span><span class="token punctuation">(</span><span class="token string">"COM1"</span><span class="token punctuation">,</span> <span class="token number">9600</span><span class="token punctuation">,</span> Parity<span class="token punctuation">.</span>None<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> StopBits<span class="token punctuation">.</span>One<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 设置485串口为半双工模式</span>
serialPort<span class="token punctuation">.</span>RtsEnable <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
serialPort<span class="token punctuation">.</span>DtrEnable <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token comment">// 打开串口</span>
serialPort<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 串口打开后，可以进行数据的读取和写入操作</span>
<span class="token comment">// 关闭串口</span>
serialPort<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<blockquote>
<p>请注意，上述代码中的参数值可能需要根据你的具体需求进行调整。同时，确保在使用完串口后及时关闭串口以释放资源。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL2RvdG5ldC9hcGkvc3lzdGVtLmlvLnBvcnRzLnNlcmlhbHBvcnQ/dmlldz1kb3RuZXQtcGxhdC1leHQtNy4w">点此查看SerialPort类说明:<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
</li>
<li><p>发送数据：在发送端，将要发送的数据转化为二进制形式，并按照串口参数进行传输。通常是按照字节（8位）的形式发送数据。</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token comment">// 要发送的数据</span>
<span class="token class-name"><span class="token keyword">string</span></span> data <span class="token operator">=</span> <span class="token string">"Hello, World!"</span><span class="token punctuation">;</span>
<span class="token comment">// 将数据转换为ASCII码</span>
<span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> asciiBytes <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>ASCII<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 发送数据</span>
serialPort<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>asciiBytes<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> asciiBytes<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>接收数据：在接收端，通过串口接收器接收数据，并将其转化为可读形式。接收端需要按照相同的串口参数配置进行接收。</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token comment">// 设置接收事件处理程序</span>
serialPort<span class="token punctuation">.</span>DataReceived <span class="token operator">+=</span> SerialPort_DataReceived<span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SerialPort_DataReceived</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">SerialDataReceivedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token class-name">SerialPort</span> serialPort <span class="token operator">=</span> <span class="token punctuation">(</span>SerialPort<span class="token punctuation">)</span>sender<span class="token punctuation">;</span>
    <span class="token comment">// 读取接收缓冲区中的所有可用字节</span>
    <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>serialPort<span class="token punctuation">.</span>BytesToRead<span class="token punctuation">]</span><span class="token punctuation">;</span>
    serialPort<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 将接收到的字节数组转换为字符串</span>
    <span class="token class-name"><span class="token keyword">string</span></span> receivedData <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>Encoding<span class="token punctuation">.</span>ASCII<span class="token punctuation">.</span><span class="token function">GetString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>数据校验：为了确保数据的完整性和准确性，可以使用校验位进行数据校验。常见的校验方式包括奇偶校验和循环冗余校验（CRC）等。</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">SerialPort_DataReceived</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">SerialDataReceivedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token class-name">SerialPort</span> serialPort <span class="token operator">=</span> <span class="token punctuation">(</span>SerialPort<span class="token punctuation">)</span>sender<span class="token punctuation">;</span>

    <span class="token comment">// 读取接收缓冲区中的所有可用字节</span>
    <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">byte</span></span><span class="token punctuation">[</span>serialPort<span class="token punctuation">.</span>BytesToRead<span class="token punctuation">]</span><span class="token punctuation">;</span>
    serialPort<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buffer<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 按照串口参数规则与8位校验校验数据</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>buffer<span class="token punctuation">.</span>Length <span class="token operator">==</span> serialPort<span class="token punctuation">.</span>DataBits <span class="token operator">/</span> <span class="token number">8</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token comment">// 校验停止位</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>serialPort<span class="token punctuation">.</span>StopBits <span class="token operator">==</span> StopBits<span class="token punctuation">.</span>One <span class="token operator">&amp;&amp;</span> buffer<span class="token punctuation">[</span>buffer<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0x00</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"停止位校验失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>serialPort<span class="token punctuation">.</span>StopBits <span class="token operator">==</span> StopBits<span class="token punctuation">.</span>Two <span class="token operator">&amp;&amp;</span> buffer<span class="token punctuation">[</span>buffer<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0xFF</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"停止位校验失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>

        <span class="token comment">// 校验奇偶校验位</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>serialPort<span class="token punctuation">.</span>Parity <span class="token operator">==</span> Parity<span class="token punctuation">.</span>None<span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token comment">// 无奇偶校验位，直接输出数据</span>
            Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"数据校验通过："</span> <span class="token operator">+</span> BitConverter<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>serialPort<span class="token punctuation">.</span>Parity <span class="token operator">==</span> Parity<span class="token punctuation">.</span>Even<span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token comment">// 偶校验</span>
            <span class="token class-name"><span class="token keyword">int</span></span> parityBit <span class="token operator">=</span> buffer<span class="token punctuation">[</span>buffer<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> dataBits <span class="token operator">=</span> serialPort<span class="token punctuation">.</span>DataBits<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">bool</span></span> isEvenParity <span class="token operator">=</span> <span class="token function">IsEvenParity</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> dataBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isEvenParity <span class="token operator">&amp;&amp;</span> parityBit <span class="token operator">==</span> <span class="token number">0x00</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"数据校验通过："</span> <span class="token operator">+</span> BitConverter<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">&#123;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"奇偶校验位校验失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>serialPort<span class="token punctuation">.</span>Parity <span class="token operator">==</span> Parity<span class="token punctuation">.</span>Odd<span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            <span class="token comment">// 奇校验</span>
            <span class="token class-name"><span class="token keyword">int</span></span> parityBit <span class="token operator">=</span> buffer<span class="token punctuation">[</span>buffer<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">int</span></span> dataBits <span class="token operator">=</span> serialPort<span class="token punctuation">.</span>DataBits<span class="token punctuation">;</span>
            <span class="token class-name"><span class="token keyword">bool</span></span> isOddParity <span class="token operator">=</span> <span class="token function">IsOddParity</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> dataBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>isOddParity <span class="token operator">&amp;&amp;</span> parityBit <span class="token operator">==</span> <span class="token number">0x00</span><span class="token punctuation">)</span>
            <span class="token punctuation">&#123;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"数据校验通过："</span> <span class="token operator">+</span> BitConverter<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">&#123;</span>
                Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"奇偶校验位校验失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">&#125;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">&#123;</span>
        Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"数据长度校验失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsEvenParity</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> data<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> dataBits<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token class-name"><span class="token keyword">int</span></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>Length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token class-name"><span class="token keyword">byte</span></span> b <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>b <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">&#123;</span>
            count<span class="token operator">++</span><span class="token punctuation">;</span>
            b <span class="token operator">&amp;=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>b <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>

    <span class="token keyword">return</span> count <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">bool</span></span> <span class="token function">IsOddParity</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> data<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">int</span></span> dataBits<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token function">IsEvenParity</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> dataBits<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>数据处理：接收到数据后，可以根据需求进行相应的数据处理，如解析数据、执行相应的操作等。</p>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">com_DataReceived</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">SerialDataReceivedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token comment">// 使用二进制或字符串技术（但不能同时使用两者）</span>
    <span class="token comment">// 缓冲和处理二进制数据</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>com<span class="token punctuation">.</span>BytesToRead <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>
        bBuffer<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span>com<span class="token punctuation">.</span><span class="token function">ReadByte</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">ProcessBuffer</span><span class="token punctuation">(</span>bBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 缓冲区字符串数据</span>
    sBuffer <span class="token operator">+=</span> com<span class="token punctuation">.</span><span class="token function">ReadExisting</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">ProcessBuffer</span><span class="token punctuation">(</span>sBuffer<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessBuffer</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> sBuffer<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token comment">// 在字符串中查找有用信息</span>
    <span class="token comment">// 然后从缓冲区中删除有用的数据</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">ProcessBuffer</span><span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">byte</span><span class="token punctuation">></span></span> bBuffer<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    <span class="token comment">// 在字节数组中查找有用的信息</span>
    <span class="token comment">// 然后从缓冲区中删除有用的数据</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>关闭串口：通信完成后，需要关闭串口以释放资源。</p>
</li>
</ol>
<blockquote>
<p>需要注意的是，串口通信需要发送端和接收端的串口参数保持一致，否则数据可能无法正确传输。同时，串口通信的稳定性和可靠性较差，对于长距离通信或高速通信，可能需要使用更可靠的通信方式。</p>
</blockquote>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><blockquote>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDg0MTU2OS9hcnRpY2xlL2RldGFpbHMvMTI4MjcwOTQw">串口RS232和RS485<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3NpbmF0XzE2NjQzMjIzL2FydGljbGUvZGV0YWlscy8xMTgzNTc2NTA=">串口通信校验方式：奇偶校验、累加和校验<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2thbHZpbl95X2xpdS9hcnRpY2xlL2RldGFpbHMvMTI2ODg1NTI4">C#实现串口通信解析<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTAxMjc2NS9hcnRpY2xlL2RldGFpbHMvMTI1MDI0MDQ4">C#实现串口通信的上位机开发<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
]]></content>
      <categories>
        <category>经验随笔</category>
      </categories>
      <tags>
        <tag>Port</tag>
        <tag>Serial</tag>
      </tags>
  </entry>
  <entry>
    <title>GIS - 天地图应用开发基础知识 - 编写第一个Map应用</title>
    <url>/GIS/TDT/FirstCode/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>使用第三方 GIS 平台 - “天地图”，搭建 Map 应用。</p>
<span id="more"></span>

<h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p><span class="exturl" data-url="aHR0cHM6Ly91dW1zLnRpYW5kaXR1Lmdvdi5jbi9yZWdpc3Rlcg==">https://uums.tianditu.gov.cn/register<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="打开控制台"><a href="#打开控制台" class="headerlink" title="打开控制台"></a>打开控制台</h2><p><span class="exturl" data-url="aHR0cHM6Ly9jb25zb2xlLnRpYW5kaXR1Lmdvdi5jbi9hcGkva2V5">https://console.tianditu.gov.cn/api/key<i class="fa fa-external-link-alt"></i></span></p>
<ol>
<li>创建新应用（浏览器端）</li>
<li>复制 Key 备用</li>
</ol>
<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>天地图<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>GIS - 天地图应用开发基础知识 - 生成第一个Map应用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span>
      <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span>
      <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://api.tianditu.gov.cn/api?v=4.0&amp;tk=您的密钥<span class="token punctuation">"</span></span>
    <span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
      <span class="token selector">body,
      html</span> <span class="token punctuation">&#123;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
        <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Microsoft YaHei"</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
      <span class="token selector">#mapDiv</span> <span class="token punctuation">&#123;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
      <span class="token selector">input,
      b,
      p</span> <span class="token punctuation">&#123;</span>
        <span class="token property">margin-left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">var</span> map<span class="token punctuation">;</span>
      <span class="token keyword">var</span> zoom <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
      <span class="token keyword">function</span> <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// map = new T.Map("mapDiv"); // 默认为：球面墨卡托投影</span>
        map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">T<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token string">"mapDiv"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
          <span class="token literal-property property">projection</span><span class="token operator">:</span> <span class="token string">"EPSG:4326"</span><span class="token punctuation">,</span> <span class="token comment">// 经纬度直投，编码为：EPSG:4326</span>
        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">centerAndZoom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">T<span class="token punctuation">.</span>LngLat</span><span class="token punctuation">(</span><span class="token number">112.54502</span><span class="token punctuation">,</span> <span class="token number">37.86789</span><span class="token punctuation">)</span><span class="token punctuation">,</span> zoom<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">&#125;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span> <span class="token special-attr"><span class="token attr-name">onLoad</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mapDiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><img data-src="/GIS/TDT/FirstCode/image.jpg" alt="效果图片"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>GIS</tag>
        <tag>天地图</tag>
      </tags>
  </entry>
  <entry>
    <title>H5PlusAPI 学习内容整理 - Geolocation</title>
    <url>/H5/PlusAPI/Geolocation/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Geolocation 模块管理设备位置信息，用于获取地理位置信息，如经度、纬度等。通过 plus.geolocation 可获取设备位置管理对象。虽然 W3C 已经提供标准 API 获取位置信息，但在某些平台存在差异或未实现，为了保持各平台的统一性，定义此规范接口获取位置信息。</p>
<span id="more"></span>

<h2 id="H5Plus-功能模块配置"><a href="#H5Plus-功能模块配置" class="headerlink" title="H5Plus 功能模块配置"></a>H5Plus 功能模块配置</h2><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>
  <span class="token property">"permissions"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token property">"Geolocation"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
      <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"位置信息"</span>
    <span class="token punctuation">&#125;</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="getCurrentPosition"><a href="#getCurrentPosition" class="headerlink" title="getCurrentPosition"></a>getCurrentPosition</h2><p>获取当前设备位置信息</p>
<blockquote>
<p>位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取，由于获取位置信息可能需要较长的时间，当成功获取位置信息后将通过 successCB 回调函数返回。</p>
</blockquote>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">void</span> plus<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">getCurrentPosition</span><span class="token punctuation">(</span>successCB<span class="token punctuation">,</span> errorCB<span class="token punctuation">,</span> option<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol>
<li>successCB: ( GeolocationSuccessCallback )<br>必选 获取设备位置信息成功回调函数<br>回调参数: Position</li>
<li>errorCB: ( GeolocationErrorCallback )<br>可选 获取设备位置信息失败回调函数<br>回调参数: GeolocationError</li>
<li>options: ( PositionOptions )<br>可选 获取设备位置信息的参数</li>
</ol>
<h2 id="watchPosition"><a href="#watchPosition" class="headerlink" title="watchPosition"></a>watchPosition</h2><p>监听设备位置变化信息</p>
<blockquote>
<p>位置信息将通过手机 GPS 设备或其它信息如 IP 地址、移动网络信号获取。 当位置信息更新后将通过 successCB 回调函数返回。 位置信息获取失败则调用回调函数 errorCB。</p>
</blockquote>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Number plus<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">watchPosition</span><span class="token punctuation">(</span>successCB<span class="token punctuation">,</span> errorCB<span class="token punctuation">,</span> option<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol>
<li>successCB: ( GeolocationSuccessCallback )<br>必选 获取设备位置信息成功回调函数<br>回调参数: Position</li>
<li>errorCB: ( GeolocationErrorCallback )<br>可选 获取设备位置信息失败回调函数<br>回调参数: GeolocationError</li>
<li>options: ( PositionOptions )<br>可选 获取设备位置信息的参数</li>
<li>返回值: ( Number )<br>用于标识位置信息监听器(watchId)，可通过 clearWatch 方法取消监听</li>
</ol>
<h2 id="clearWatch"><a href="#clearWatch" class="headerlink" title="clearWatch"></a>clearWatch</h2><p>关闭监听设备位置信息</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">void</span> plus<span class="token punctuation">.</span>geolocation<span class="token punctuation">.</span><span class="token function">clearWatch</span><span class="token punctuation">(</span>watchId<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol>
<li>watchId: ( Number )<br>必选 需要取消的位置监听器标识，调用 watchPosition 方法的返回值</li>
</ol>
<h2 id="GeolocationSuccessCallback"><a href="#GeolocationSuccessCallback" class="headerlink" title="GeolocationSuccessCallback"></a>GeolocationSuccessCallback</h2><p>获取设备位置信息成功的回调函数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">onSuccess</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol>
<li>position: ( Position )<br>必选 设备的地理位置信息</li>
</ol>
<h2 id="GeolocationErrorCallback"><a href="#GeolocationErrorCallback" class="headerlink" title="GeolocationErrorCallback"></a>GeolocationErrorCallback</h2><p>获取设备位置信息失败的回调函数</p>
<pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">void</span> <span class="token function">onError</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ol>
<li>error: ( GeolocationError )<br>必选 获取位置操作的错误信息</li>
</ol>
<h2 id="Position"><a href="#Position" class="headerlink" title="Position"></a>Position</h2><p>设备位置信息数据</p>
<ul>
<li>coords: (Coordinates 类型 )地理坐标信息，包括经纬度、海拔、速度等信息</li>
<li>coordsType: (String 类型 )获取到地理坐标信息的坐标系类型<blockquote>
<p>可取以下坐标系类型： “wgs84”：表示 WGS-84 坐标系； “gcj02”：表示国测局经纬度坐标系； “bd09”：表示百度墨卡托坐标系，仅百度定位支持； “bd09ll”：表示百度经纬度坐标系，仅百度定位支持。</p>
</blockquote>
</li>
<li>timestamp: (Number 类型 )获取到地理坐标的时间戳信息<blockquote>
<p>时间戳值为从 1970 年 1 月 1 日至今的毫秒数</p>
</blockquote>
</li>
<li>address: (Address 类型 )获取到地理位置对应的地址信息<blockquote>
<p>获取地址信息需要连接到服务器进行解析，所以会消耗更多的资源，如果不需要获取地址信息可通过设置 PositionOptions 参数的 geocode 属性值为 false 避免获取地址信息。 如果没有获取到地址信息则返回 undefined。</p>
</blockquote>
</li>
<li>addresses: (String 类型 )获取完整地址描述信息<blockquote>
<p>获取完整地址描述信息，如果没有获取到地址信息则返回 undefined</p>
</blockquote>
</li>
</ul>
<h2 id="Address"><a href="#Address" class="headerlink" title="Address"></a>Address</h2><p>地址信息</p>
<ul>
<li>country: (String 类型 )国家<blockquote>
<p>如“中国”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>province: (String 类型 )省份名称<blockquote>
<p>如“北京市”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>city: (String 类型 )城市名称<blockquote>
<p>如“北京市”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>district: (String 类型 )区（县）名称<blockquote>
<p>如“朝阳区”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>street: (String 类型 )街道信息<blockquote>
<p>如“酒仙桥路”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>streetNum: (String 类型 )获取街道门牌号信息<blockquote>
<p>如“3 号”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>poiName: (String 类型 )POI 信息<blockquote>
<p>如“电子城．国际电子总部”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>postalCode: (String 类型 )邮政编码<blockquote>
<p>如“100016”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
<li>cityCode: (String 类型 )城市代码<blockquote>
<p>如“010”，如果无法获取此信息则返回 undefined。</p>
</blockquote>
</li>
</ul>
<h2 id="Coordinates"><a href="#Coordinates" class="headerlink" title="Coordinates"></a>Coordinates</h2><p>地理坐标信息</p>
<ul>
<li>latitude: (Number 类型 )坐标纬度值<blockquote>
<p>数据类型对象，地理坐标中的纬度值。</p>
</blockquote>
</li>
<li>longitude: (Number 类型 )坐标经度值<blockquote>
<p>数据类型对象，地理坐标中的经度值。</p>
</blockquote>
</li>
<li>altitude: (Number 类型 )海拔信息<blockquote>
<p>数据类型对象，如果无法获取此信息，则此值为空（null）。</p>
</blockquote>
</li>
<li>accuracy: (Number 类型 )地理坐标信息的精确度信息<blockquote>
<p>数据类型对象，单位为米，其有效值必须大于 0。</p>
</blockquote>
</li>
<li>altitudeAccuracy: (Number 类型 )海拔的精确度信息<blockquote>
<p>数据类型对象，单位为米，其有效值必须大于 0。如果无法获取海拔信息，则此值为空（null）。</p>
</blockquote>
</li>
<li>heading: (Number 类型 )表示设备移动的方向<blockquote>
<p>数据类型对象，范围为 0 到 360，表示相对于正北方向的角度。如果无法获取此信息，则此值为空（null）。如果设备没有移动则此值为 NaN。</p>
</blockquote>
</li>
<li>speed: (Number 类型 )表示设备移动的速度<blockquote>
<p>数据类型对象，单位为米每秒（m&#x2F;s），其有效值必须大于 0。如果无法获取速度信息，则此值为空（null）。</p>
</blockquote>
</li>
</ul>
<h2 id="PositionOptions"><a href="#PositionOptions" class="headerlink" title="PositionOptions"></a>PositionOptions</h2><p>监听设备位置信息参数</p>
<ul>
<li>enableHighAccuracy: (Boolean 类型 )是否高精确度获取位置信息<blockquote>
<p>高精度获取表示需要使用更多的系统资源，默认值为 false。</p>
</blockquote>
</li>
<li>timeout: (Number 类型 )获取位置信息的超时时间<blockquote>
<p>单位为毫秒（ms），默认值为不超时。如果在指定的时间内没有获取到位置信息则触发错误回调函数。</p>
</blockquote>
</li>
<li>maximumAge: (Number 类型 )获取位置信息的间隔时间<blockquote>
<p>单位为毫秒（ms），默认值为 5000（即 5 秒）。调用 plus.geolocation.watchPosition 时为更新位置信息的间隔时间。 注意：在不同定位模块下支持范围值可能不同，如百度定位模块的间隔范围为大于等于 1 秒，如果设置的值小于最小值则使用最小值。</p>
</blockquote>
</li>
<li>provider: (String 类型 )优先使用的定位模块<blockquote>
<p>可取以下供应者： “system”：表示系统定位模块，支持 wgs84 坐标系； “baidu”：表示百度定位模块，支持 gcj02&#x2F;bd09&#x2F;bd09ll 坐标系； “amap”：表示高德定位模块，支持 gcj02 坐标系。 默认值按以下优先顺序获取（amap&gt;baidu&gt;system），若指定的 provider 不存在或无效则返回错误回调。 注意：百度&#x2F;高德定位模块需要配置百度&#x2F;高德地图相关参数才能正常使用。</p>
</blockquote>
</li>
<li>coordsType: (String 类型 )指定获取的定位数据坐标系类型<blockquote>
<p>可取以下坐标系类型： “wgs84”：表示 WGS-84 坐标系； “gcj02”：表示国测局经纬度坐标系； “bd09”：表示百度墨卡托坐标系； “bd09ll”：表示百度经纬度坐标系； provider 为”system”时，支持 wgs84 坐标系，默认使用”wgs84”坐标系； provider 为”baidu”时，支持 gcj02&#x2F;bd09&#x2F;bd09ll 坐标系，默认使用”gcj02”坐标系； provider 为”amap”时，支持 gcj02 坐标系，默认使用”gcj02”坐标系。 如果设置的坐标系类型 provider 不支持，则返回错误。</p>
</blockquote>
</li>
<li>geocode: (Boolean 类型 )是否解析地址信息<blockquote>
<p>解析的地址信息保存到 Position 对象的 address、addresses 属性中，true 表示解析地址信息，false 表示不解析地址信息，返回的 Position 对象的 address、addresses 属性值为 undefined，默认值为 true。 如果解析地址信息失败则返回的 Position 对象的 address、addresses 属性值为 null。</p>
</blockquote>
</li>
</ul>
<h2 id="GeolocationError"><a href="#GeolocationError" class="headerlink" title="GeolocationError"></a>GeolocationError</h2><p>定位错误信息</p>
<ul>
<li>PERMISSION_DENIED: (Number 类型 )访问权限被拒绝<blockquote>
<p>系统不允许程序获取定位功能，错误代码常量值为 1。</p>
</blockquote>
</li>
<li>POSITION_UNAVAILABLE: (Number 类型 )位置信息不可用<blockquote>
<p>无法获取有效的位置信息，错误代码常量值为 2。</p>
</blockquote>
</li>
<li>TIMEOUT: (Number 类型 )获取位置信息超时<blockquote>
<p>无法在指定的时间内获取位置信息，错误代码常量值为 3。</p>
</blockquote>
</li>
<li>code: (Number 类型 )错误代码<blockquote>
<p>可取值:</p>
<ul>
<li>PERMISSION_DENIED - 用户拒绝授权</li>
<li>POSITION_UNAVAILABLE - 位置服务不可用，如系统定位服务关闭</li>
<li>TIMEOUT - 定位超时，定位时超过 PositionOptions.timeout 设置的时间触发，此时通常可以重试</li>
<li>其它错误 - 5+ 扩展错误码，参考 5+ API 错误代码中的“Geolocation 模块错误”</li>
</ul>
</blockquote>
</li>
<li>message: (String 类型 )错误描述信息<blockquote>
<p>详细错误描述信息。</p>
</blockquote>
</li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>UniApp</tag>
        <tag>H5</tag>
        <tag>定位</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 人脸检测（Face）</title>
    <url>/Python/Mediapipe/Face/</url>
    <content><![CDATA[<h3 id="人脸检测（Face）"><a href="#人脸检测（Face）" class="headerlink" title="人脸检测（Face）"></a>人脸检测（Face）</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp
<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils <span class="token keyword">import</span> DrawingSpec

mp_face_detection <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>face_detection
mp_drawing <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils
<span class="token comment"># model_selection: 0 或 1。</span>
<span class="token comment"># 0 选择最适合距离相机 2 米范围内的人脸的短距离模型，</span>
<span class="token comment"># 1 表示最适合 5 米以内人脸的全频模型。</span>
<span class="token keyword">with</span> mp_face_detection<span class="token punctuation">.</span>FaceDetection<span class="token punctuation">(</span>
    min_detection_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> model_selection<span class="token operator">=</span><span class="token number">0</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> face_detection<span class="token punctuation">:</span>
    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> success<span class="token punctuation">:</span>
            imgRGB <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>
            results <span class="token operator">=</span> face_detection<span class="token punctuation">.</span>process<span class="token punctuation">(</span>imgRGB<span class="token punctuation">)</span>

            <span class="token keyword">if</span> results<span class="token punctuation">.</span>detections <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">continue</span>
            <span class="token keyword">for</span> face <span class="token keyword">in</span> results<span class="token punctuation">.</span>detections<span class="token punctuation">:</span>
                color <span class="token operator">=</span> DrawingSpec<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                mp_drawing<span class="token punctuation">.</span>draw_detection<span class="token punctuation">(</span>img<span class="token punctuation">,</span> face<span class="token punctuation">,</span> color<span class="token punctuation">,</span> color<span class="token punctuation">)</span>
                cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'face'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>

    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li>人脸检测</li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 面网格（FaceMesh）</title>
    <url>/Python/Mediapipe/FaceMesh/</url>
    <content><![CDATA[<h3 id="面部网格（FaceMesh）"><a href="#面部网格（FaceMesh）" class="headerlink" title="面部网格（FaceMesh）"></a>面部网格（FaceMesh）</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp

mp_drawing <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils
mp_drawing_styles <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_styles
mp_face_mesh <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>face_mesh

<span class="token keyword">with</span> mp_face_mesh<span class="token punctuation">.</span>FaceMesh<span class="token punctuation">(</span>
    static_image_mode<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    max_num_faces<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>
    min_detection_confidence<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">,</span>
    min_tracking_confidence<span class="token operator">=</span><span class="token number">0.7</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> face_mesh<span class="token punctuation">:</span>

    drawing_spec <span class="token operator">=</span> mp_drawing<span class="token punctuation">.</span>DrawingSpec<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> success<span class="token punctuation">:</span>
            results <span class="token operator">=</span> face_mesh<span class="token punctuation">.</span>process<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> results<span class="token punctuation">.</span>multi_face_landmarks <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">continue</span>

            <span class="token keyword">for</span> face <span class="token keyword">in</span> results<span class="token punctuation">.</span>multi_face_landmarks<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"face: "</span><span class="token punctuation">,</span> face<span class="token punctuation">)</span>
                mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                    image<span class="token operator">=</span>img<span class="token punctuation">,</span>
                    landmark_list<span class="token operator">=</span>face<span class="token punctuation">,</span>
                    connections<span class="token operator">=</span>mp_face_mesh<span class="token punctuation">.</span>FACEMESH_TESSELATION<span class="token punctuation">,</span>
                    landmark_drawing_spec<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
                    connection_drawing_spec<span class="token operator">=</span>mp_drawing_styles<span class="token punctuation">.</span>get_default_face_mesh_tesselation_style<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
                mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                    image<span class="token operator">=</span>img<span class="token punctuation">,</span>
                    landmark_list<span class="token operator">=</span>face<span class="token punctuation">,</span>
                    connections<span class="token operator">=</span>mp_face_mesh<span class="token punctuation">.</span>FACEMESH_CONTOURS<span class="token punctuation">,</span>
                    landmark_drawing_spec<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
                    connection_drawing_spec<span class="token operator">=</span>mp_drawing_styles<span class="token punctuation">.</span>get_default_face_mesh_contours_style<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">)</span>
            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'face mash'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>

            <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span>

    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li>面网格</li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 手（Hands）</title>
    <url>/Python/Mediapipe/Hands/</url>
    <content><![CDATA[<h3 id="手部识别（Hands）"><a href="#手部识别（Hands）" class="headerlink" title="手部识别（Hands）"></a>手部识别（Hands）</h3><span id="more"></span>

<ol>
<li><p>编写手部识别类</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> typing
<span class="token keyword">from</span> cv2 <span class="token keyword">import</span> COLOR_BGR2RGB<span class="token punctuation">,</span> FILLED<span class="token punctuation">,</span> circle<span class="token punctuation">,</span> cvtColor
<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils <span class="token keyword">import</span> draw_landmarks
<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>hands <span class="token keyword">import</span> HAND_CONNECTIONS<span class="token punctuation">,</span> Hands
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">class</span> <span class="token class-name">handDetector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> static_image_mode<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> max_num_hands<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> min_detection_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> min_tracking_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> typing<span class="token punctuation">.</span>Any<span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">"""
        处理 RGB 图像并返回每只检测到的手的手部标志和惯用性。

        Args:
            static_image_mode: 是否将输入图像视为一批静态且可能不相关的图像，或视频流。
            max_num_hands: 要检测的最大手数。
            min_detection_confidence: 手部检测成功的最小置信值 ([0.0, 1.0])。
            min_tracking_confidence: 要被视为成功跟踪的手部标志的最小置信值 ([0.0, 1.0])。

        Raises:
            RuntimeError: 如果底层图形抛出任何错误。
            ValueError: 如果输入图像不是三通道 RGB。
        """</span>

        self<span class="token punctuation">.</span>hands <span class="token operator">=</span> Hands<span class="token punctuation">(</span>
            static_image_mode<span class="token punctuation">,</span>
            max_num_hands<span class="token punctuation">,</span>
            min_detection_confidence<span class="token punctuation">,</span>
            min_tracking_confidence
        <span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">drawHands</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> typing<span class="token punctuation">.</span>Any<span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">"""
        返回手部骨骼识别后绘制图片

        Args:
            img: 表示为 numpy ndarray 的 RGB 图像。

        Return:
            绘制手部骨骼后的 numpy ndarray 的 RGB 图像
        """</span>
        results <span class="token operator">=</span> self<span class="token punctuation">.</span>findHands<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        <span class="token keyword">if</span> results<span class="token punctuation">.</span>multi_handedness <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">for</span> handLms <span class="token keyword">in</span> results<span class="token punctuation">.</span>multi_hand_landmarks<span class="token punctuation">:</span>
                draw_landmarks<span class="token punctuation">(</span>img<span class="token punctuation">,</span> handLms<span class="token punctuation">,</span> HAND_CONNECTIONS<span class="token punctuation">)</span>
                <span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span> lm <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>handLms<span class="token punctuation">.</span>landmark<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    h<span class="token punctuation">,</span> w<span class="token punctuation">,</span> c <span class="token operator">=</span> img<span class="token punctuation">.</span>shape
                    cx<span class="token punctuation">,</span> cy <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>x <span class="token operator">*</span> w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>lm<span class="token punctuation">.</span>y <span class="token operator">*</span> h<span class="token punctuation">)</span>
                    circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>cx<span class="token punctuation">,</span> cy<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FILLED<span class="token punctuation">)</span>
        <span class="token keyword">return</span> img

    <span class="token keyword">def</span> <span class="token function">findHands</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> img<span class="token punctuation">:</span> np<span class="token punctuation">.</span>ndarray<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> typing<span class="token punctuation">.</span>Any<span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">"""
        返回手部识别骨骼数据

        Args:
            img: 表示为 numpy ndarray 的 RGB 图像。

        Return:
            具有两个字段的 NamedTuple 对象：
            “multi_hand_landmarks”字段包含检测到的每只手上的手部标志
            “multi_handedness”字段包含检测到的手的惯用手（左手与右手）
        """</span>
        imgRGB <span class="token operator">=</span> cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> COLOR_BGR2RGB<span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>hands<span class="token punctuation">.</span>process<span class="token punctuation">(</span>imgRGB<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>识别视频中的手</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> time <span class="token keyword">import</span> time
<span class="token keyword">from</span> Hands <span class="token keyword">import</span> handDetector
<span class="token keyword">from</span> cv2 <span class="token keyword">import</span> FONT_HERSHEY_PLAIN<span class="token punctuation">,</span> VideoCapture<span class="token punctuation">,</span> imshow<span class="token punctuation">,</span> putText<span class="token punctuation">,</span> waitKey

<span class="token comment"># 打开视频链接</span>
cap <span class="token operator">=</span> VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment"># 创建识别器，并开始识别</span>
hands <span class="token operator">=</span> handDetector<span class="token punctuation">(</span>
    static_image_mode<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    max_num_hands<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>
    min_detection_confidence<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span>
    min_tracking_confidence<span class="token operator">=</span><span class="token number">0.8</span>
<span class="token punctuation">)</span>
start <span class="token operator">=</span> <span class="token number">0</span>
end <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> success<span class="token punctuation">:</span>
        img <span class="token operator">=</span> hands<span class="token punctuation">.</span>drawHands<span class="token punctuation">(</span>img<span class="token punctuation">)</span>
        end <span class="token operator">=</span> time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        fps <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span>
        putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f'FPS:</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">int</span><span class="token punctuation">(</span>fps<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                FONT_HERSHEY_PLAIN<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
        imshow<span class="token punctuation">(</span><span class="token string">'hand'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
        <span class="token keyword">if</span> waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>

cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ol>
<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li>手</li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 整体（Holistic）</title>
    <url>/Python/Mediapipe/Holistic/</url>
    <content><![CDATA[<h3 id="整体识别（Holistic）"><a href="#整体识别（Holistic）" class="headerlink" title="整体识别（Holistic）"></a>整体识别（Holistic）</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> typing
<span class="token keyword">import</span> cv2
<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp
<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils <span class="token keyword">import</span> DrawingSpec

mp_drawing <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils
mp_drawing_styles <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_styles
mp_holistic <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>holistic

<span class="token keyword">def</span> <span class="token function">hiddenPoseFace</span><span class="token punctuation">(</span>landmarks<span class="token punctuation">:</span> typing<span class="token punctuation">.</span>NamedTuple<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> typing<span class="token punctuation">.</span>Any<span class="token punctuation">:</span>
    <span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        landmarks<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">.</span>landmark<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token number">0</span>

<span class="token keyword">with</span> mp_holistic<span class="token punctuation">.</span>Holistic<span class="token punctuation">(</span>
    min_detection_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>
    min_tracking_confidence<span class="token operator">=</span><span class="token number">0.5</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> holistic<span class="token punctuation">:</span>
    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> success<span class="token punctuation">:</span>
            img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
            results <span class="token operator">=</span> holistic<span class="token punctuation">.</span>process<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>

            hiddenPoseFace<span class="token punctuation">(</span>results<span class="token punctuation">)</span>

            mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                img<span class="token punctuation">,</span> results<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">,</span> mp_holistic<span class="token punctuation">.</span>POSE_CONNECTIONS<span class="token punctuation">,</span>
                landmark_drawing_spec<span class="token operator">=</span>DrawingSpec<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>

            mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                img<span class="token punctuation">,</span> results<span class="token punctuation">.</span>face_landmarks<span class="token punctuation">,</span> mp_holistic<span class="token punctuation">.</span>FACEMESH_CONTOURS<span class="token punctuation">,</span>
                landmark_drawing_spec<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
                connection_drawing_spec<span class="token operator">=</span>mp_drawing_styles<span class="token punctuation">.</span>get_default_face_mesh_contours_style<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>
            mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                img<span class="token punctuation">,</span> results<span class="token punctuation">.</span>face_landmarks<span class="token punctuation">,</span> mp_holistic<span class="token punctuation">.</span>FACEMESH_TESSELATION<span class="token punctuation">,</span>
                landmark_drawing_spec<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
                connection_drawing_spec<span class="token operator">=</span>mp_drawing_styles<span class="token punctuation">.</span>get_default_face_mesh_tesselation_style<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">)</span>

            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'综合识别'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
            <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li>整体</li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe 安装</title>
    <url>/Python/Mediapipe/Install/</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MediaPipe 以预构建的 Python 包的形式提供即用型但可自定义的 Python 解决方案。 MediaPipe Python 包适用于 Linux、macOS 和 Windows。</p>
<span id="more"></span>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> mediapipe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 物体空间（Objectron）</title>
    <url>/Python/Mediapipe/Objectron/</url>
    <content><![CDATA[<h3 id="物体空间检测（Objectron）"><a href="#物体空间检测（Objectron）" class="headerlink" title="物体空间检测（Objectron）"></a>物体空间检测（Objectron）</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp

mp_drawing <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils
mp_objectron <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>objectron

<span class="token keyword">with</span> mp_objectron<span class="token punctuation">.</span>Objectron<span class="token punctuation">(</span>
    static_image_mode<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
    max_num_objects<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
    min_detection_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>
    min_tracking_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>
    model_name<span class="token operator">=</span><span class="token string">'Shoe'</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> objectron<span class="token punctuation">:</span>
    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> success<span class="token punctuation">:</span>
            results <span class="token operator">=</span> objectron<span class="token punctuation">.</span>process<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> results<span class="token punctuation">.</span>detected_objects <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">for</span> obj <span class="token keyword">in</span> results<span class="token punctuation">.</span>detected_objects<span class="token punctuation">:</span>
                    mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                        img<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>landmarks_2d<span class="token punctuation">,</span> mp_objectron<span class="token punctuation">.</span>BOX_CONNECTIONS<span class="token punctuation">)</span>
                    mp_drawing<span class="token punctuation">.</span>draw_axis<span class="token punctuation">(</span>img<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>rotation<span class="token punctuation">,</span> obj<span class="token punctuation">.</span>translation<span class="token punctuation">)</span>

        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'物体空间识别'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
        <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>

    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li>物体空间</li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 姿势（Pose）</title>
    <url>/Python/Mediapipe/Pose/</url>
    <content><![CDATA[<h3 id="姿势检测（Pose）"><a href="#姿势检测（Pose）" class="headerlink" title="姿势检测（Pose）"></a>姿势检测（Pose）</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> mediapipe <span class="token keyword">as</span> mp
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

mp_drawing <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_utils
mp_drawing_styles <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>drawing_styles
mp_pose <span class="token operator">=</span> mp<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>pose

cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">with</span> mp_pose<span class="token punctuation">.</span>Pose<span class="token punctuation">(</span>
    min_detection_confidence<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span>
    min_tracking_confidence<span class="token operator">=</span><span class="token number">0.5</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> pose<span class="token punctuation">:</span>
    <span class="token keyword">while</span> cap<span class="token punctuation">.</span> isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> success<span class="token punctuation">:</span>
            img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
            imgRGB <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>
            results <span class="token operator">=</span> pose<span class="token punctuation">.</span>process<span class="token punctuation">(</span>imgRGB<span class="token punctuation">)</span>

            <span class="token keyword">if</span> results<span class="token punctuation">.</span>pose_landmarks <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">continue</span>

            mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                img<span class="token punctuation">,</span> results<span class="token punctuation">.</span>pose_landmarks<span class="token punctuation">,</span> mp_pose<span class="token punctuation">.</span>POSE_CONNECTIONS<span class="token punctuation">,</span> mp_drawing_styles<span class="token punctuation">.</span>get_default_pose_landmarks_style<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'Pose'</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
            <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span>

    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li>姿势</li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 自拍（SelfieSegmentation）</title>
    <url>/Python/Mediapipe/SelfieSegmentation/</url>
    <content><![CDATA[<h3 id="自拍分割（SelfieSegmentation）"><a href="#自拍分割（SelfieSegmentation）" class="headerlink" title="自拍分割（SelfieSegmentation）"></a>自拍分割（SelfieSegmentation）</h3><span id="more"></span>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2

<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions<span class="token punctuation">.</span>selfie_segmentation <span class="token keyword">import</span> SelfieSegmentation
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token keyword">with</span> SelfieSegmentation<span class="token punctuation">(</span>
    model_selection<span class="token operator">=</span><span class="token number">1</span>
<span class="token punctuation">)</span> <span class="token keyword">as</span> selfie_segmentation<span class="token punctuation">:</span>
    bg_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>
        <span class="token string">'/Users/dx/Documents/Python/PaddleXDemo/opencv/mediapipe/images/bg.jpeg'</span><span class="token punctuation">)</span>

    cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        success<span class="token punctuation">,</span> img <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> success<span class="token punctuation">:</span>
            img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>flip<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>
            img<span class="token punctuation">.</span>flags<span class="token punctuation">.</span>writeable <span class="token operator">=</span> <span class="token boolean">False</span>
            results <span class="token operator">=</span> selfie_segmentation<span class="token punctuation">.</span>process<span class="token punctuation">(</span>img<span class="token punctuation">)</span>

            img<span class="token punctuation">.</span>flags<span class="token punctuation">.</span>writeable <span class="token operator">=</span> <span class="token boolean">True</span>
            img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>

            <span class="token comment"># 在背景图像上绘制自拍分割。</span>
            <span class="token comment"># 要改进边界周围的分割，请考虑应用联合双边过滤器到“results.segmentation_mask”与“image”。</span>
            <span class="token comment"># 轮廓</span>
            condition <span class="token operator">=</span> np<span class="token punctuation">.</span>stack<span class="token punctuation">(</span>
                <span class="token punctuation">(</span>results<span class="token punctuation">.</span>segmentation_mask<span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.1</span>
            <span class="token keyword">if</span> bg_img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                bg_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>bg_img<span class="token punctuation">,</span> <span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment"># 按轮廓合并</span>
            output_image <span class="token operator">=</span> np<span class="token punctuation">.</span>where<span class="token punctuation">(</span>condition<span class="token punctuation">,</span> img<span class="token punctuation">,</span> bg_img<span class="token punctuation">)</span>

            cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'自拍抠图'</span><span class="token punctuation">,</span> output_image<span class="token punctuation">)</span>
            <span class="token keyword">if</span> cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">break</span>

    cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li><a href="../PoseClassification/">姿势分类</a></li>
<li>自拍分割</li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期</title>
    <url>/Xamarin/Forms/10_LifeCycle/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示应用程序的生命周期事件与各事件之间的数据处理。</p>
<ol>
<li>生命周期事件。</li>
<li>生命周期数据处理。</li>
</ol>
<span id="more"></span>

<h2 id="生命周期事件"><a href="#生命周期事件" class="headerlink" title="生命周期事件"></a>生命周期事件</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"OnStart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnSleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"OnSleep"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnResume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"OnResume"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>调试界面：<blockquote>
<p>应用程序起动时触发<br><img data-src="https://img-blog.csdnimg.cn/20200309114151711.png" alt="Onstart"></p>
</blockquote>
</li>
</ol>
<blockquote>
<p>应用程序切换到后台时触发<br><img data-src="https://img-blog.csdnimg.cn/20200309114647300.png" alt="OnSleep"></p>
</blockquote>
<blockquote>
<p>当前活动应用程序切换回本程序时触发<img data-src="https://img-blog.csdnimg.cn/20200309115207278.png" alt="OnResume"></p>
</blockquote>
<h2 id="生命周期数据处理"><a href="#生命周期数据处理" class="headerlink" title="生命周期数据处理"></a>生命周期数据处理</h2><ol>
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> displayText <span class="token operator">=</span> <span class="token string">"displayText"</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DisplayText <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
……
<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"OnStart"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>Properties<span class="token punctuation">.</span><span class="token function">ContainsKey</span><span class="token punctuation">(</span>displayText<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		DisplayText <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">)</span>Properties<span class="token punctuation">[</span>displayText<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnSleep</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"OnSleep"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	Properties<span class="token punctuation">[</span>displayText<span class="token punctuation">]</span> <span class="token operator">=</span> DisplayText<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>编辑 MainPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Entry</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>entEvent<span class="token punctuation">"</span></span>
	   <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这里显示生命周期内容<span class="token punctuation">"</span></span>
	   <span class="token attr-name">Completed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>entEvent_Completed<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>编辑 MainPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnAppearing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnAppearing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	entEvent<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span>Application<span class="token punctuation">.</span>Current <span class="token keyword">as</span> <span class="token class-name">App</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DisplayText<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">entEvent_Completed</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token punctuation">(</span>Application<span class="token punctuation">.</span>Current <span class="token keyword">as</span> <span class="token class-name">App</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DisplayText <span class="token operator">=</span> <span class="token punctuation">(</span>sender <span class="token keyword">as</span> <span class="token class-name">Entry</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>调试界面：<blockquote>
<p>无输入内容、APP 永久属性字典中不包含 displayText 或 displayText 无值时显示<br><img data-src="https://img-blog.csdnimg.cn/20200309121724339.png"></p>
</blockquote>
</li>
</ol>
<blockquote>
<p>应用程序切换时 APP 永久属性字典包含 displayText 并 displayText 有值时显示<br><img data-src="https://img-blog.csdnimg.cn/20200309124017490.png"></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 媒体识别包 Mediapipe - 姿势分类（PoseClassification）</title>
    <url>/Python/Mediapipe/PoseClassification/</url>
    <content><![CDATA[<h3 id="姿势分类（PoseClassification）"><a href="#姿势分类（PoseClassification）" class="headerlink" title="姿势分类（PoseClassification）"></a>姿势分类（PoseClassification）</h3><span id="more"></span>

<ul>
<li><p>模型训练</p>
<blockquote>
<p>官方详细说明：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYXBpcGUucGFnZS5saW5rL3Bvc2VfY2xhc3NpZmljYXRpb25fYmFzaWM=">https://mediapipe.page.link/pose_classification_basic<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os
<span class="token keyword">import</span> csv
<span class="token keyword">from</span> BootstrapHelper <span class="token keyword">import</span> BootstrapHelper
<span class="token keyword">from</span> FullBodyPoseEmbedder <span class="token keyword">import</span> FullBodyPoseEmbedder
<span class="token keyword">from</span> PoseClassification <span class="token keyword">import</span> PoseClassifier

<span class="token comment"># region Bootstrap images</span>

<span class="token comment"># images_in_folder 的必需结构：</span>
<span class="token comment">#</span>
<span class="token comment">#   fitness_poses_images_in/</span>
<span class="token comment">#     pushups_up/</span>
<span class="token comment">#       image_001.jpg</span>
<span class="token comment">#       image_002.jpg</span>
<span class="token comment">#       ...</span>
<span class="token comment">#     pushups_down/</span>
<span class="token comment">#       image_001.jpg</span>
<span class="token comment">#       image_002.jpg</span>
<span class="token comment">#       ...</span>
<span class="token comment">#     ...</span>
bootstrap_images_in_folder <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/train'</span>

<span class="token comment"># 引导图像和 CSV 的输出文件夹。</span>
bootstrap_images_out_folder <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/images_out'</span>
bootstrap_csvs_out_folder <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/csvs_out'</span>

<span class="token comment"># 初始化助手。</span>
bootstrap_helper <span class="token operator">=</span> BootstrapHelper<span class="token punctuation">(</span>
    images_in_folder<span class="token operator">=</span>bootstrap_images_in_folder<span class="token punctuation">,</span>
    images_out_folder<span class="token operator">=</span>bootstrap_images_out_folder<span class="token punctuation">,</span>
    csvs_out_folder<span class="token operator">=</span>bootstrap_csvs_out_folder<span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token comment"># 检查有多少姿势类和图像可用。</span>
bootstrap_helper<span class="token punctuation">.</span>print_images_in_statistics<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 引导所有图像。</span>
<span class="token comment"># 将限制设置为一些小的数字以进行调试。</span>
bootstrap_helper<span class="token punctuation">.</span>bootstrap<span class="token punctuation">(</span>per_pose_class_limit<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>

<span class="token comment"># 检查引导了多少图像。</span>
bootstrap_helper<span class="token punctuation">.</span>print_images_out_statistics<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 没有检测到姿势的初始引导图像仍然保存在</span>
<span class="token comment"># 用于调试目的的文件夹（但不在 CSV 中）。 让我们移除它们。</span>
bootstrap_helper<span class="token punctuation">.</span>align_images_and_csvs<span class="token punctuation">(</span>print_removed_items<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
bootstrap_helper<span class="token punctuation">.</span>print_images_out_statistics<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># endregion Bootstrap images</span>

<span class="token comment"># region Manual filtration</span>

<span class="token comment"># # 请手动验证预测并删除姿势预测错误的样本（图像）。 检查是否要求您仅根据预测的地标对姿势进行分类。 如果你不能 - 删除它。</span>
<span class="token comment"># # 完成后对齐 CSV 和图像文件夹。</span>
<span class="token comment"># # 将 CSV 与过滤后的图像对齐。</span>
<span class="token comment"># bootstrap_helper.align_images_and_csvs(print_removed_items=False)</span>
<span class="token comment"># bootstrap_helper.print_images_out_statistics()</span>

<span class="token comment"># endregion Manual filtration</span>

<span class="token comment"># region Automatic filtration</span>

<span class="token comment"># 找出异常值。</span>
<span class="token comment"># 将姿势地标转换为嵌入。</span>
pose_embedder <span class="token operator">=</span> FullBodyPoseEmbedder<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 根据姿势数据库对姿势进行分类。</span>
pose_classifier <span class="token operator">=</span> PoseClassifier<span class="token punctuation">(</span>
    pose_samples_folder<span class="token operator">=</span>bootstrap_csvs_out_folder<span class="token punctuation">,</span>
    pose_embedder<span class="token operator">=</span>pose_embedder<span class="token punctuation">,</span>
    top_n_by_max_distance<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>
    top_n_by_mean_distance<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>

outliers <span class="token operator">=</span> pose_classifier<span class="token punctuation">.</span>find_pose_sample_outliers<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Number of outliers: '</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>outliers<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 分析异常值。</span>
bootstrap_helper<span class="token punctuation">.</span>analyze_outliers<span class="token punctuation">(</span>outliers<span class="token punctuation">)</span>

<span class="token comment"># 删除所有异常值（如果您不想手动选择）。</span>
bootstrap_helper<span class="token punctuation">.</span>remove_outliers<span class="token punctuation">(</span>outliers<span class="token punctuation">)</span>

<span class="token comment"># 去除异常值后将 CSV 与图像对齐。</span>
bootstrap_helper<span class="token punctuation">.</span>align_images_and_csvs<span class="token punctuation">(</span>print_removed_items<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
bootstrap_helper<span class="token punctuation">.</span>print_images_out_statistics<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># endregion Automatic filtration</span>

<span class="token comment"># region Dump for the App</span>


<span class="token keyword">def</span> <span class="token function">dump_for_the_app</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    pose_samples_folder <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/fitness_poses_csvs_out'</span>
    pose_samples_csv_path <span class="token operator">=</span> <span class="token string">'fitness_poses_csvs_out.csv'</span>
    file_extension <span class="token operator">=</span> <span class="token string">'csv'</span>
    file_separator <span class="token operator">=</span> <span class="token string">','</span>

    <span class="token comment"># 文件夹中的每个文件代表一个姿势类。</span>
    file_names <span class="token operator">=</span> <span class="token punctuation">[</span>name <span class="token keyword">for</span> name <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>
        pose_samples_folder<span class="token punctuation">)</span> <span class="token keyword">if</span> name<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span>file_extension<span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>pose_samples_csv_path<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_out<span class="token punctuation">:</span>
        csv_out_writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>writer<span class="token punctuation">(</span>
            csv_out<span class="token punctuation">,</span> delimiter<span class="token operator">=</span>file_separator<span class="token punctuation">,</span> quoting<span class="token operator">=</span>csv<span class="token punctuation">.</span>QUOTE_MINIMAL<span class="token punctuation">)</span>
        <span class="token keyword">for</span> file_name <span class="token keyword">in</span> file_names<span class="token punctuation">:</span>
            <span class="token comment"># Use file name as pose class name.</span>
            class_name <span class="token operator">=</span> file_name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>file_extension<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>

            <span class="token comment"># 一个文件行：`sample_00001,x1,y1,x2,y2,....`。</span>
            <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>pose_samples_folder<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> csv_in<span class="token punctuation">:</span>
                csv_in_reader <span class="token operator">=</span> csv<span class="token punctuation">.</span>reader<span class="token punctuation">(</span>csv_in<span class="token punctuation">,</span> delimiter<span class="token operator">=</span>file_separator<span class="token punctuation">)</span>
                <span class="token keyword">for</span> row <span class="token keyword">in</span> csv_in_reader<span class="token punctuation">:</span>
                    row<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> class_name<span class="token punctuation">)</span>
                    csv_out_writer<span class="token punctuation">.</span>writerow<span class="token punctuation">(</span>row<span class="token punctuation">)</span>


<span class="token comment"># 将过滤后的姿势转储到 CSV 并下载。 如何在 ML Kit 示例应用程序中使用此 CSV。</span>
<span class="token comment"># dump_for_the_app()</span>

<span class="token comment"># endregion Dump for the App</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
</li>
<li><p>姿势识别</p>
<blockquote>
<p>官方详细说明：<span class="exturl" data-url="aHR0cHM6Ly9tZWRpYXBpcGUucGFnZS5saW5rL3Bvc2VfY2xhc3NpZmljYXRpb25fZXh0ZW5kZWQ=">https://mediapipe.page.link/pose_classification_extended<i class="fa fa-external-link-alt"></i></span></p>
</blockquote>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> tqdm
<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions <span class="token keyword">import</span> drawing_utils <span class="token keyword">as</span> mp_drawing
<span class="token keyword">from</span> mediapipe<span class="token punctuation">.</span>python<span class="token punctuation">.</span>solutions <span class="token keyword">import</span> pose <span class="token keyword">as</span> mp_pose

<span class="token keyword">from</span> EMADictSmoothing <span class="token keyword">import</span> EMADictSmoothing
<span class="token keyword">from</span> FullBodyPoseEmbedder <span class="token keyword">import</span> FullBodyPoseEmbedder
<span class="token keyword">from</span> PoseClassificationVisualizer <span class="token keyword">import</span> PoseClassificationVisualizer
<span class="token keyword">from</span> RepetitionCounter <span class="token keyword">import</span> RepetitionCounter
<span class="token keyword">from</span> PoseClassification <span class="token keyword">import</span> PoseClassifier

<span class="token comment"># 指定您的视频名称和目标姿势类以计算重复次数。</span>
video_path <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/test/5.mp4'</span>
class_name <span class="token operator">=</span> <span class="token string">'down'</span>
out_video_path <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/test_out/5_out.mp4'</span>

<span class="token comment"># 打开视频。</span>
video_cap <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>video_path<span class="token punctuation">)</span>

<span class="token comment"># 获取一些视频参数以生成带分类的输出视频。</span>
video_n_frames <span class="token operator">=</span> video_cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_COUNT<span class="token punctuation">)</span>
video_fps <span class="token operator">=</span> video_cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FPS<span class="token punctuation">)</span>
video_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>video_cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_WIDTH<span class="token punctuation">)</span><span class="token punctuation">)</span>
video_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>video_cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>CAP_PROP_FRAME_HEIGHT<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 初始化跟踪器、分类器和计数器。</span>
<span class="token comment"># 在每个视频之前都这样做，因为它们都有状态。</span>

<span class="token comment"># 包含姿势类 CSV 的文件夹。 那应该是你使用的同一个文件夹</span>
<span class="token comment"># 构建分类器以输出 CSV。</span>
pose_samples_folder <span class="token operator">=</span> <span class="token string">'mediapipe/images/pose/extended/csvs_out'</span>

<span class="token comment"># 初始化跟踪器。</span>
pose_tracker <span class="token operator">=</span> mp_pose<span class="token punctuation">.</span>Pose<span class="token punctuation">(</span>static_image_mode<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

<span class="token comment"># 初始化嵌入器。</span>
pose_embedder <span class="token operator">=</span> FullBodyPoseEmbedder<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 初始化分类器。</span>
<span class="token comment"># 确认您使用的参数与引导期间相同。</span>
pose_classifier <span class="token operator">=</span> PoseClassifier<span class="token punctuation">(</span>
    pose_samples_folder<span class="token operator">=</span>pose_samples_folder<span class="token punctuation">,</span>
    pose_embedder<span class="token operator">=</span>pose_embedder<span class="token punctuation">,</span>
    top_n_by_max_distance<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span>
    top_n_by_mean_distance<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment"># 取消注释以验证分类器使用的目标姿势并查找异常值。</span>
<span class="token comment"># outliers =pose_classifier.find_pose_sample_outliers()</span>
<span class="token comment"># print('姿势样本异常值的数量（考虑删除它们）：', len(outliers))</span>

<span class="token comment"># 初始化 EMA 平滑。</span>
pose_classification_filter <span class="token operator">=</span> EMADictSmoothing<span class="token punctuation">(</span>
    window_size<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>
    alpha<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>

<span class="token comment"># 初始化计数器。</span>
repetition_counter <span class="token operator">=</span> RepetitionCounter<span class="token punctuation">(</span>
    class_name<span class="token operator">=</span>class_name<span class="token punctuation">,</span>
    enter_threshold<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">,</span>
    exit_threshold<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>

<span class="token comment"># 初始化渲染器。</span>
pose_classification_visualizer <span class="token operator">=</span> PoseClassificationVisualizer<span class="token punctuation">(</span>
    class_name<span class="token operator">=</span>class_name<span class="token punctuation">,</span>
    plot_x_max<span class="token operator">=</span>video_n_frames<span class="token punctuation">,</span>
    <span class="token comment"># 如果与 `top_n_by_mean_distance` 相同，则图形看起来更好。</span>
    plot_y_max<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token comment"># 对视频运行分类。</span>

<span class="token comment"># 打开输出视频。</span>
out_video <span class="token operator">=</span> cv2<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span>out_video_path<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span>
    <span class="token operator">*</span><span class="token string">'mp4v'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> video_fps<span class="token punctuation">,</span> <span class="token punctuation">(</span>video_width<span class="token punctuation">,</span> video_height<span class="token punctuation">)</span><span class="token punctuation">)</span>

frame_idx <span class="token operator">=</span> <span class="token number">0</span>
output_frame <span class="token operator">=</span> <span class="token boolean">None</span>
<span class="token keyword">with</span> tqdm<span class="token punctuation">.</span>tqdm<span class="token punctuation">(</span>total<span class="token operator">=</span>video_n_frames<span class="token punctuation">,</span> position<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> leave<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token keyword">as</span> pbar<span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token comment"># 获取视频的下一帧。</span>
        success<span class="token punctuation">,</span> input_frame <span class="token operator">=</span> video_cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> success<span class="token punctuation">:</span>
            <span class="token keyword">break</span>

        <span class="token comment"># 运行姿势跟踪器。</span>
        input_frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>input_frame<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>
        result <span class="token operator">=</span> pose_tracker<span class="token punctuation">.</span>process<span class="token punctuation">(</span>image<span class="token operator">=</span>input_frame<span class="token punctuation">)</span>
        pose_landmarks <span class="token operator">=</span> result<span class="token punctuation">.</span>pose_landmarks

        <span class="token comment"># 绘制姿势预测。</span>
        output_frame <span class="token operator">=</span> input_frame<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> pose_landmarks <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            mp_drawing<span class="token punctuation">.</span>draw_landmarks<span class="token punctuation">(</span>
                image<span class="token operator">=</span>output_frame<span class="token punctuation">,</span>
                landmark_list<span class="token operator">=</span>pose_landmarks<span class="token punctuation">,</span>
                connections<span class="token operator">=</span>mp_pose<span class="token punctuation">.</span>POSE_CONNECTIONS<span class="token punctuation">)</span>

        <span class="token keyword">if</span> pose_landmarks <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token comment"># 获取地标。</span>
            frame_height<span class="token punctuation">,</span> frame_width <span class="token operator">=</span> output_frame<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> output_frame<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            pose_landmarks <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span>lmk<span class="token punctuation">.</span>x <span class="token operator">*</span> frame_width<span class="token punctuation">,</span> lmk<span class="token punctuation">.</span>y <span class="token operator">*</span> frame_height<span class="token punctuation">,</span> lmk<span class="token punctuation">.</span>z <span class="token operator">*</span> frame_width<span class="token punctuation">]</span>
                                      <span class="token keyword">for</span> lmk <span class="token keyword">in</span> pose_landmarks<span class="token punctuation">.</span>landmark<span class="token punctuation">]</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>
            <span class="token keyword">assert</span> pose_landmarks<span class="token punctuation">.</span>shape <span class="token operator">==</span> <span class="token punctuation">(</span>
                <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'意外的地标形状： &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>pose_landmarks<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>

            <span class="token comment"># 对当前帧的姿势进行分类。</span>
            pose_classification <span class="token operator">=</span> pose_classifier<span class="token punctuation">(</span>pose_landmarks<span class="token punctuation">)</span>

            <span class="token comment"># 使用 EMA 进行平滑分类。</span>
            pose_classification_filtered <span class="token operator">=</span> pose_classification_filter<span class="token punctuation">(</span>
                pose_classification<span class="token punctuation">)</span>

            <span class="token comment"># 计算重复次数。</span>
            repetitions_count <span class="token operator">=</span> repetition_counter<span class="token punctuation">(</span>
                pose_classification_filtered<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token comment"># 没有姿势 => 当前帧没有分类。</span>
            pose_classification <span class="token operator">=</span> <span class="token boolean">None</span>

            <span class="token comment"># 仍然向过滤器添加空分类以保持未来帧的正确平滑。</span>
            pose_classification_filtered <span class="token operator">=</span> pose_classification_filter<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            pose_classification_filtered <span class="token operator">=</span> <span class="token boolean">None</span>

            <span class="token comment"># 不要假设那个人被“冻结”而更新计数器。 只是取最新的重复次数。</span>
            repetitions_count <span class="token operator">=</span> repetition_counter<span class="token punctuation">.</span>n_repeats

        <span class="token comment"># 绘制分类图和重复计数器。</span>
        output_frame <span class="token operator">=</span> pose_classification_visualizer<span class="token punctuation">(</span>
            frame<span class="token operator">=</span>output_frame<span class="token punctuation">,</span>
            pose_classification<span class="token operator">=</span>pose_classification<span class="token punctuation">,</span>
            pose_classification_filtered<span class="token operator">=</span>pose_classification_filtered<span class="token punctuation">,</span>
            repetitions_count<span class="token operator">=</span>repetitions_count<span class="token punctuation">)</span>

        <span class="token comment"># 保存输出帧。</span>
        out_video<span class="token punctuation">.</span>write<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>
            np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>output_frame<span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token comment"># 显示视频的中间帧以跟踪进度。</span>
        cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'姿势分类 - 俯卧撑(down)'</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>output_frame<span class="token punctuation">)</span><span class="token punctuation">)</span>
        cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

        frame_idx <span class="token operator">+=</span> <span class="token number">1</span>
        pbar<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 关闭输出视频。</span>
out_video<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 释放MediaPipe资源。</span>
pose_tracker<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li>
</ul>
<h3 id="其它功能"><a href="#其它功能" class="headerlink" title="其它功能"></a>其它功能</h3><ul>
<li><a href="../Face/">人脸检测</a></li>
<li><a href="../FaceMesh/">面网格</a></li>
<li><a href="../Hands/">手</a></li>
<li><a href="../Holistic/">整体</a></li>
<li><a href="../Objectron/">物体空间</a></li>
<li><a href="../Pose/">姿势</a></li>
<li>姿势分类</li>
<li><a href="../SelfieSegmentation/">自拍分割</a></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Mediapipe</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite数据库</title>
    <url>/Xamarin/Forms/11_Sqlite/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示 SQLite 数据库访问与数据操作。</p>
<ol>
<li>SQLite 类库引用。</li>
<li>操作类与数据模型。</li>
<li>数据操作。</li>
</ol>
<span id="more"></span>

<h2 id="SQLite-类库引用"><a href="#SQLite-类库引用" class="headerlink" title="SQLite 类库引用"></a>SQLite 类库引用</h2><ol>
<li>管理 NuGet 包。</li>
<li>搜索 sqlite-net-pcl。</li>
<li>安装推荐版本。</li>
</ol>
<h2 id="操作类与数据模型"><a href="#操作类与数据模型" class="headerlink" title="操作类与数据模型"></a>操作类与数据模型</h2><ol>
<li>添加 Note.cs 到 Models 文件夹。</li>
<li>编辑 Note.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">SQLite</span><span class="token punctuation">;</span>
<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Note</span>
	<span class="token punctuation">&#123;</span>
		<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">PrimaryKey</span><span class="token punctuation">,</span> <span class="token class-name">AutoIncrement</span></span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> ID <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Name <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Text <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">DateTime</span> Date <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DateString
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">get</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">return</span> Date<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>PrimaryKey 属性标签表示为主键</li>
<li>AutoIncrement 属性标签表示为自增列</li>
</ul>
<ol start="3">
<li>添加 NoteDatabase.cs 到 Data 文件夹。</li>
<li>编辑 NoteDatabase.cs：</li>
</ol>
</blockquote>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">SQLite</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Data</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NoteDatabase</span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">SQLiteAsyncConnection</span> _database<span class="token punctuation">;</span>
		<span class="token keyword">public</span> <span class="token function">NoteDatabase</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> dbPath<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			_database <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SQLiteAsyncConnection</span><span class="token punctuation">(</span>dbPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
			_database<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">CreateTableAsync</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Note<span class="token punctuation">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token operator">~</span><span class="token function">NoteDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			_database<span class="token punctuation">.</span><span class="token function">CloseAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>List<span class="token punctuation">&lt;</span>Note<span class="token punctuation">></span><span class="token punctuation">></span></span> <span class="token function">GetNotesAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">return</span> _database<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Table</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Note<span class="token punctuation">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ToListAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>Note<span class="token punctuation">></span></span> <span class="token function">GetNoteAsync</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> id<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">return</span> _database<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Table</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Note<span class="token punctuation">></span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
							<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>i <span class="token operator">=></span> i<span class="token punctuation">.</span>ID <span class="token operator">==</span> id<span class="token punctuation">)</span>
							<span class="token punctuation">.</span><span class="token function">FirstOrDefaultAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">></span></span> <span class="token function">SaveNoteAsync</span><span class="token punctuation">(</span><span class="token class-name">Note</span> note<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>note<span class="token punctuation">.</span>ID <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">return</span> _database<span class="token punctuation">.</span><span class="token function">UpdateAsync</span><span class="token punctuation">(</span>note<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">else</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">return</span> _database<span class="token punctuation">.</span><span class="token function">InsertAsync</span><span class="token punctuation">(</span>note<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span><span class="token keyword">int</span><span class="token punctuation">></span></span> <span class="token function">DeleteNoteAsync</span><span class="token punctuation">(</span><span class="token class-name">Note</span> note<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">return</span> _database<span class="token punctuation">.</span><span class="token function">DeleteAsync</span><span class="token punctuation">(</span>note<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">static</span> <span class="token class-name">NoteDatabase</span> database<span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">NoteDatabase</span> Database
<span class="token punctuation">&#123;</span>
	<span class="token keyword">get</span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>database <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			database <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NoteDatabase</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span><span class="token function">GetFolderPath</span><span class="token punctuation">(</span>Environment<span class="token punctuation">.</span>SpecialFolder<span class="token punctuation">.</span>LocalApplicationData<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"Notes.db3"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
		<span class="token keyword">return</span> database<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
……
<span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">NavigationPage</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NotesPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><ol>
<li>添加 NotesPage.xaml。</li>
<li>编辑 NotesPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
			 <span class="token attr-name"><span class="token namespace">xmlns:</span>local</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clr-namespace:AwesomeApp;assembly=AwesomeApp<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.NotesPage<span class="token punctuation">"</span></span>
             <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Notes<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.ToolbarItems</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToolbarItem</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>新建<span class="token punctuation">"</span></span>
					 <span class="token attr-name">Order</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Primary<span class="token punctuation">"</span></span>
                     <span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnNoteAddedClicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.ToolbarItems</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;StaticResource PageMargin&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lblNull<span class="token punctuation">"</span></span>
				   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>暂无数据<span class="token punctuation">"</span></span>
				   <span class="token attr-name">FontSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>32<span class="token punctuation">"</span></span>
				   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span>
				   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
				   <span class="token attr-name">IsVisible</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>False<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>listView<span class="token punctuation">"</span></span>
					  <span class="token attr-name">RowHeight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>64<span class="token punctuation">"</span></span>
					  <span class="token attr-name">IsPullToRefreshEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
					  <span class="token attr-name">Refreshing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>listView_Refreshing<span class="token punctuation">"</span></span>
					  <span class="token attr-name">ItemSelected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnListViewItemSelected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewCell</span><span class="token punctuation">></span></span>
							<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewCell.ContextActions</span><span class="token punctuation">></span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MenuItem</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>delMenuItem<span class="token punctuation">"</span></span>
										  <span class="token attr-name">IconImageSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;local:ImageResource Icons.delete.png&#125;<span class="token punctuation">"</span></span>
										  <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>删除<span class="token punctuation">"</span></span>
										  <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding .&#125;<span class="token punctuation">"</span></span>
										  <span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MenuItem_OnDel_Clicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MenuItem</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>moreMenuItem<span class="token punctuation">"</span></span>
										  <span class="token attr-name">IconImageSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;local:ImageResource Icons.more.png&#125;<span class="token punctuation">"</span></span>
										  <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>更多<span class="token punctuation">"</span></span>
										  <span class="token attr-name">CommandParameter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding .&#125;<span class="token punctuation">"</span></span>
										  <span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>MenuItem_OnMore_Clicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
							<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ViewCell.ContextActions</span><span class="token punctuation">></span></span>
							<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6,4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Name&#125;<span class="token punctuation">"</span></span>
									   <span class="token attr-name">FontSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>
									   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding DateString&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
							<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ViewCell</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>ImageResource 嵌入资源处理类 ImageResourceExtension：</p>
</blockquote>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">ContentProperty</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token keyword">nameof</span><span class="token punctuation">(</span>Source<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImageResourceExtension</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">IMarkupExtension</span></span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Source <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

	<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">object</span></span> <span class="token function">ProvideValue</span><span class="token punctuation">(</span><span class="token class-name">IServiceProvider</span> serviceProvider<span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>Source <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token class-name"><span class="token keyword">var</span></span> type <span class="token operator">=</span> <span class="token keyword">typeof</span><span class="token punctuation">(</span><span class="token type-expression class-name">ImageResourceExtension</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">GetTypeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Assembly<span class="token punctuation">;</span>

		<span class="token class-name">ImageSource</span> imageSource <span class="token operator">=</span> ImageSource<span class="token punctuation">.</span><span class="token function">FromResource</span><span class="token punctuation">(</span>type<span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">+</span> Source<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">return</span> imageSource<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>编辑 NotesPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Xamarin<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">NotesPage</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ContentPage</span></span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">public</span> <span class="token function">NotesPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnAppearing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnAppearing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">await</span> <span class="token function">bindListItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task</span> <span class="token function">bindListItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token class-name">List<span class="token punctuation">&lt;</span>Note<span class="token punctuation">></span></span> notes <span class="token operator">=</span> <span class="token keyword">await</span> App<span class="token punctuation">.</span>Database<span class="token punctuation">.</span><span class="token function">GetNotesAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>notes<span class="token punctuation">.</span>Count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				lblNull<span class="token punctuation">.</span>IsVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				listView<span class="token punctuation">.</span>IsVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">else</span>
			<span class="token punctuation">&#123;</span>
				lblNull<span class="token punctuation">.</span>IsVisible <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
				listView<span class="token punctuation">.</span>IsVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
				listView<span class="token punctuation">.</span>ItemsSource <span class="token operator">=</span> notes<span class="token punctuation">.</span>Count <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> notes<span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnNoteAddedClicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">await</span> Navigation<span class="token punctuation">.</span><span class="token function">PushAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NoteEntryPage</span>
			<span class="token punctuation">&#123;</span>
				BindingContext <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Note</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnListViewItemSelected</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">SelectedItemChangedEventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>SelectedItem <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">await</span> Navigation<span class="token punctuation">.</span><span class="token function">PushAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NoteEntryPage</span>
				<span class="token punctuation">&#123;</span>
					BindingContext <span class="token operator">=</span> e<span class="token punctuation">.</span>SelectedItem <span class="token keyword">as</span> <span class="token class-name">Note</span>
				<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MenuItem_OnMore_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token class-name">MenuItem</span> menu <span class="token operator">=</span> sender <span class="token keyword">as</span> <span class="token class-name">MenuItem</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Note<span class="token punctuation">)</span>menu<span class="token punctuation">.</span>CommandParameter <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">await</span> Navigation<span class="token punctuation">.</span><span class="token function">PushAsync</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">NoteEntryPage</span>
				<span class="token punctuation">&#123;</span>
					BindingContext <span class="token operator">=</span> <span class="token punctuation">(</span>Note<span class="token punctuation">)</span>menu<span class="token punctuation">.</span>CommandParameter <span class="token keyword">as</span> <span class="token class-name">Note</span>
				<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MenuItem_OnDel_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token class-name">MenuItem</span> menu <span class="token operator">=</span> sender <span class="token keyword">as</span> <span class="token class-name">MenuItem</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span> <span class="token operator">==</span> <span class="token keyword">await</span> <span class="token function">DisplayAlert</span><span class="token punctuation">(</span><span class="token string">"要删除 "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Note<span class="token punctuation">)</span>menu<span class="token punctuation">.</span>CommandParameter<span class="token punctuation">)</span><span class="token punctuation">.</span>Name <span class="token operator">+</span> <span class="token string">" 这条数据吗？"</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"删除"</span><span class="token punctuation">,</span> <span class="token string">"取消"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">await</span> App<span class="token punctuation">.</span>Database<span class="token punctuation">.</span><span class="token function">DeleteNoteAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>Note<span class="token punctuation">)</span>menu<span class="token punctuation">.</span>CommandParameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
				listView<span class="token punctuation">.</span><span class="token function">BeginRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">listView_Refreshing</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">await</span> <span class="token function">bindListItems</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			listView<span class="token punctuation">.</span><span class="token function">EndRefresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>添加 NoteEntryPage.xaml。</li>
<li>编辑 NoteEntryPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.NoteEntryPage<span class="token punctuation">"</span></span>
             <span class="token attr-name">Title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Note Entry<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Resources</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;x:Type Editor&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
			&lt;Setter Property=<span class="token string">"BackgroundColor"</span>
                    Value=<span class="token string">"&#123;StaticResource AppBackgroundColor&#125;"</span> />
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">></span></span>

		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button<span class="token punctuation">"</span></span>
               <span class="token attr-name">ApplyToDerivedTypes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span>
               <span class="token attr-name">CanCascade</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
			&lt;Setter Property=<span class="token string">"FontSize"</span> Value=<span class="token string">"Medium"</span> />
			&lt;Setter Property=<span class="token string">"BackgroundColor"</span> Value=<span class="token string">"#2196F3"</span> />
			&lt;Setter Property=<span class="token string">"TextColor"</span> Value=<span class="token string">"White"</span> />
			&lt;Setter Property=<span class="token string">"CornerRadius"</span> Value=<span class="token string">"5"</span> />
		</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Resources</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;StaticResource PageMargin&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Data&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Entry</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>entName<span class="token punctuation">"</span></span>
				   <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>文件名<span class="token punctuation">"</span></span>
				   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Name&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Editor</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ediTtext<span class="token punctuation">"</span></span>
					<span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>内容<span class="token punctuation">"</span></span>
					<span class="token attr-name">AutoSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TextChanges<span class="token punctuation">"</span></span>
					<span class="token attr-name">MaxLength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span>
					<span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Text&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>保存<span class="token punctuation">"</span></span>
						<span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnSaveButtonClicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
					    <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>取消<span class="token punctuation">"</span></span>
					    <span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnCancelButtonClicked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li>编辑 NoteEntryPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Reflection</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Xamarin<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">NoteEntryPage</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ContentPage</span></span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">public</span> <span class="token function">NoteEntryPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnSaveButtonClicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token class-name"><span class="token keyword">var</span></span> note <span class="token operator">=</span> <span class="token punctuation">(</span>Note<span class="token punctuation">)</span>BindingContext<span class="token punctuation">;</span>
			note<span class="token punctuation">.</span>Date <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">;</span>

			<span class="token keyword">await</span> App<span class="token punctuation">.</span>Database<span class="token punctuation">.</span><span class="token function">SaveNoteAsync</span><span class="token punctuation">(</span>note<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">await</span> Navigation<span class="token punctuation">.</span><span class="token function">PopAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnCancelButtonClicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">await</span> Navigation<span class="token punctuation">.</span><span class="token function">PopAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="7">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200309171537312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200309171553783.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200309171638665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200309171656902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200309171711780.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问URL数据</title>
    <url>/Xamarin/Forms/12_UrlData/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何访问并将使用网络数据。</p>
<ol>
<li>添加 Newtonsoft.Json。</li>
<li>创建访问业务。</li>
<li>使用访问数据。</li>
</ol>
<span id="more"></span>

<h2 id="Newtonsoft-Json-类库引用"><a href="#Newtonsoft-Json-类库引用" class="headerlink" title="Newtonsoft.Json 类库引用"></a>Newtonsoft.Json 类库引用</h2><ol>
<li>管理 NuGet 包。</li>
<li>搜索 Newtonsoft.Json。</li>
<li>安装推荐版本。</li>
</ol>
<h2 id="创建访问业务"><a href="#创建访问业务" class="headerlink" title="创建访问业务"></a>创建访问业务</h2><ol>
<li>添加 TianQiModel.cs 到 Models 文件夹。</li>
<li>编辑 TianQiModel.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">Newtonsoft<span class="token punctuation">.</span>Json</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span>
<span class="token punctuation">&#123;</span>
	<span class="token comment">/// &lt;summary></span>
	<span class="token comment">/// 天气数据模型</span>
	<span class="token comment">/// &lt;/summary></span>
	<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TianQiModel</span>
	<span class="token punctuation">&#123;</span>
		<span class="token comment">/// &lt;summary></span>
		<span class="token comment">/// 城市ID</span>
		<span class="token comment">/// &lt;/summary></span>
		<span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">"cityid"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> CityID <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token comment">/// &lt;summary></span>
		<span class="token comment">/// 城市名称</span>
		<span class="token comment">/// &lt;/summary></span>
		<span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">"city"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> City <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		……

		<span class="token comment">/// &lt;summary></span>
		<span class="token comment">/// 警报</span>
		<span class="token comment">/// &lt;/summary></span>
		<span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">"alarm"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">AlarmModel</span> Alarm <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>

	<span class="token comment">/// &lt;summary></span>
	<span class="token comment">/// 警报数据模型</span>
	<span class="token comment">/// &lt;/summary></span>
	<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AlarmModel</span>
	<span class="token punctuation">&#123;</span>
		<span class="token comment">/// &lt;summary></span>
		<span class="token comment">/// 类型</span>
		<span class="token comment">/// &lt;/summary></span>
		<span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">"alarm_type"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Type <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token comment">/// &lt;summary></span>
		<span class="token comment">/// 等级</span>
		<span class="token comment">/// &lt;/summary></span>
		<span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">"alarm_level"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Level <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token comment">/// &lt;summary></span>
		<span class="token comment">/// 内容</span>
		<span class="token comment">/// &lt;/summary></span>
		<span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">"alarm_content"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Content <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>JsonProperty 属性标签表示 JSON 数据名称</li>
</ul>
</blockquote>
<ol start="3">
<li>添加 TianQiAPI.cs 到 APIs 文件夹。</li>
<li>编辑 TianQiAPI.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Newtonsoft<span class="token punctuation">.</span>Json</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Diagnostics</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Net<span class="token punctuation">.</span>Http</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>APIs</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TianQiAPI</span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> _api_url <span class="token operator">=</span> <span class="token string">"https://www.tianqiapi.com/api"</span><span class="token punctuation">;</span>
		<span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> _api_version <span class="token operator">=</span> <span class="token string">"v6"</span><span class="token punctuation">;</span>
		<span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> _api_appid <span class="token operator">=</span> <span class="token string">"YOUR_APPID"</span><span class="token punctuation">;</span>
		<span class="token keyword">private</span> <span class="token keyword">const</span> <span class="token class-name"><span class="token keyword">string</span></span> _api_appsecret <span class="token operator">=</span> <span class="token string">"YOUR_SECRET"</span><span class="token punctuation">;</span>
		<span class="token keyword">private</span> <span class="token keyword">readonly</span> <span class="token class-name">HttpClient</span> _client<span class="token punctuation">;</span>

		<span class="token keyword">public</span> <span class="token function">TianQiAPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			_client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">HttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">public</span> <span class="token keyword">async</span> <span class="token return-type class-name">Task<span class="token punctuation">&lt;</span>TianQiModel<span class="token punctuation">></span></span> <span class="token function">GetWeatherDataAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token class-name">TianQiModel</span> tianQiData <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
			<span class="token keyword">try</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">HttpResponseMessage</span> response <span class="token operator">=</span> <span class="token keyword">await</span> _client<span class="token punctuation">.</span><span class="token function">GetAsync</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>
					<span class="token string">"&#123;0&#125;?version=&#123;1&#125;&amp;appid=&#123;2&#125;&amp;appsecret=&#123;3&#125;"</span><span class="token punctuation">,</span>
					_api_url<span class="token punctuation">,</span> _api_version<span class="token punctuation">,</span> _api_appid<span class="token punctuation">,</span> _api_appsecret<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
				<span class="token punctuation">&#123;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>IsSuccessStatusCode<span class="token punctuation">)</span>
					<span class="token punctuation">&#123;</span>
						<span class="token class-name"><span class="token keyword">string</span></span> content <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">.</span><span class="token function">ReadAsStringAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						tianQiData <span class="token operator">=</span> JsonConvert<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">DeserializeObject</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>TianQiModel<span class="token punctuation">></span></span></span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">&#125;</span>
					<span class="token keyword">else</span>
					<span class="token punctuation">&#123;</span>
						Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"\tERROR &#123;0&#125;"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>Content<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">&#125;</span>
				<span class="token punctuation">&#125;</span>
			<span class="token punctuation">&#125;</span>
			<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span>
			<span class="token punctuation">&#123;</span>
				Debug<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">"\tERROR &#123;0&#125;"</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span>Message<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">&#125;</span>

			<span class="token keyword">return</span> tianQiData<span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>APPID 与 SECRET 到 <span class="exturl" data-url="aHR0cHM6Ly93d3cudGlhbnFpYXBpLmNvbS8=">https://www.tianqiapi.com<i class="fa fa-external-link-alt"></i></span> 申请</p>
</blockquote>
<h2 id="使用访问数据"><a href="#使用访问数据" class="headerlink" title="使用访问数据"></a>使用访问数据</h2><ol>
<li>添加 TitleAndTextCell.xaml 单元格控件到 Controls。</li>
<li>编辑 TitleAndTextCell.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewCell</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.Controls.TitleAndTextCell<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewCell.View</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>grid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ViewCell.View</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ViewCell</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>编辑 TitleAndTextCell.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>

<span class="token keyword">using</span> <span class="token namespace">Xamarin<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Xamarin<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Xaml</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Controls</span>
<span class="token punctuation">&#123;</span>
	<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">XamlCompilation</span><span class="token attribute-arguments"><span class="token punctuation">(</span>XamlCompilationOptions<span class="token punctuation">.</span>Compile<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
	<span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">TitleAndTextCell</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ViewCell</span></span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">></span></span> TitleClass <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> TitleText <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token keyword">public</span> <span class="token return-type class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">></span></span> TextClass <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> TextBindingPath <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

		<span class="token keyword">public</span> <span class="token function">TitleAndTextCell</span><span class="token punctuation">(</span><span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">></span></span> titleClass<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> titleText<span class="token punctuation">,</span> <span class="token class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">></span></span> textClass<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> textBindingPath<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			TitleClass <span class="token operator">=</span> titleClass<span class="token punctuation">;</span>
			TitleText <span class="token operator">=</span> titleText<span class="token punctuation">;</span>
			TextClass <span class="token operator">=</span> textClass<span class="token punctuation">;</span>
			TextBindingPath <span class="token operator">=</span> textBindingPath<span class="token punctuation">;</span>

			<span class="token function">InitGrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">InitGrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			grid<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			grid<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">&#123;</span> StyleClass <span class="token operator">=</span> TitleClass<span class="token punctuation">,</span> Text <span class="token operator">=</span> TitleText <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Label</span> content <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Label</span> <span class="token punctuation">&#123;</span> StyleClass <span class="token operator">=</span> TextClass <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
			content<span class="token punctuation">.</span><span class="token function">SetBinding</span><span class="token punctuation">(</span>Label<span class="token punctuation">.</span>TextProperty<span class="token punctuation">,</span> TextBindingPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
			grid<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>添加 TianQiAPIPage.xaml。</li>
<li>编辑 TianQiAPIPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
			 <span class="token attr-name"><span class="token namespace">xmlns:</span>col</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clr-namespace:AwesomeApp.Controls;assembly=AwesomeApp<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.TianQiAPIPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Resources</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ResourceDictionary</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>StackLayout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
				&lt;Setter Property=<span class="token string">"Orientation"</span> Value=<span class="token string">"Horizontal"</span> />
				&lt;Setter Property=<span class="token string">"Margin"</span> Value=<span class="token string">"15,0"</span> />
			</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Grid<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
				&lt;Setter Property=<span class="token string">"Margin"</span> Value=<span class="token string">"15,0"</span> />
			</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Label<span class="token punctuation">"</span></span> <span class="token attr-name">Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
				&lt;Setter Property=<span class="token string">"HeightRequest"</span> Value=<span class="token string">"60"</span> />
				&lt;Setter Property=<span class="token string">"WidthRequest"</span> Value=<span class="token string">"80"</span> />
				&lt;Setter Property=<span class="token string">"TextColor"</span> Value=<span class="token string">"Black"</span> />
				&lt;Setter Property=<span class="token string">"VerticalTextAlignment"</span> Value=<span class="token string">"Center"</span> />
			</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Style</span> <span class="token attr-name">TargetType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Label<span class="token punctuation">"</span></span> <span class="token attr-name">Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
				&lt;Setter Property=<span class="token string">"TextColor"</span> Value=<span class="token string">"DimGray"</span> />
				&lt;Setter Property=<span class="token string">"VerticalOptions"</span> Value=<span class="token string">"CenterAndExpand"</span> />
				&lt;Setter Property=<span class="token string">"HorizontalOptions"</span> Value=<span class="token string">"FillAndExpand"</span> />
				&lt;Setter Property=<span class="token string">"LineBreakMode"</span> Value=<span class="token string">"WordWrap"</span> />
			</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Style</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ResourceDictionary</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Resources</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableView</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tableView<span class="token punctuation">"</span></span> <span class="token attr-name">Intent</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Settings<span class="token punctuation">"</span></span> <span class="token attr-name">HasUnevenRows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>True<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>TableView</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="6">
<li>编辑 TianQiAPIPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>APIs</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Controls</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">AwesomeApp<span class="token punctuation">.</span>Models</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Collections<span class="token punctuation">.</span>Generic</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Xamarin<span class="token punctuation">.</span>Forms</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Xamarin<span class="token punctuation">.</span>Forms<span class="token punctuation">.</span>Xaml</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">AwesomeApp</span>
<span class="token punctuation">&#123;</span>
	<span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">XamlCompilation</span><span class="token attribute-arguments"><span class="token punctuation">(</span>XamlCompilationOptions<span class="token punctuation">.</span>Compile<span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
	<span class="token keyword">public</span> <span class="token keyword">partial</span> <span class="token keyword">class</span> <span class="token class-name">TianQiAPIPage</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ContentPage</span></span>
	<span class="token punctuation">&#123;</span>
		<span class="token keyword">public</span> <span class="token function">TianQiAPIPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			tableView<span class="token punctuation">.</span>Root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TableRoot</span>
			<span class="token punctuation">&#123;</span>
				<span class="token keyword">new</span> <span class="token constructor-invocation class-name">TableSection</span><span class="token punctuation">(</span><span class="token string">"实时天气预报"</span><span class="token punctuation">)</span>
				<span class="token punctuation">&#123;</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"城市ID"</span><span class="token punctuation">,</span> <span class="token string">"CityID"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"城市"</span><span class="token punctuation">,</span> <span class="token string">"City"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"城市英文"</span><span class="token punctuation">,</span> <span class="token string">"CityEn"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"国家"</span><span class="token punctuation">,</span> <span class="token string">"Country"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"国家英文"</span><span class="token punctuation">,</span> <span class="token string">"CountryEn"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"日期"</span><span class="token punctuation">,</span> <span class="token string">"Date"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"星期"</span><span class="token punctuation">,</span> <span class="token string">"Week"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"更新时间"</span><span class="token punctuation">,</span> <span class="token string">"UpdateTime"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"天气"</span><span class="token punctuation">,</span> <span class="token string">"Weather"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"天气图标"</span><span class="token punctuation">,</span> <span class="token string">"WeatherImage"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"温度"</span><span class="token punctuation">,</span> <span class="token string">"Temperature"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"高温"</span><span class="token punctuation">,</span> <span class="token string">"TemperatureHigh"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"低温"</span><span class="token punctuation">,</span> <span class="token string">"TemperatureLow"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"风向"</span><span class="token punctuation">,</span> <span class="token string">"Wind"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"风力"</span><span class="token punctuation">,</span> <span class="token string">"WindSpeed"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"风速"</span><span class="token punctuation">,</span> <span class="token string">"WindMeter"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"湿度"</span><span class="token punctuation">,</span> <span class="token string">"Humidity"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"能见度"</span><span class="token punctuation">,</span> <span class="token string">"Visibility"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"气压hPa"</span><span class="token punctuation">,</span> <span class="token string">"Pressure"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"空气质量"</span><span class="token punctuation">,</span> <span class="token string">"Air"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"PM2.5"</span><span class="token punctuation">,</span> <span class="token string">"AirPM25"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"空气等级"</span><span class="token punctuation">,</span> <span class="token string">"AirLevel"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"空气质量"</span><span class="token punctuation">,</span> <span class="token string">"AirTips"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"警报类型"</span><span class="token punctuation">,</span> <span class="token string">"Alarm.Type"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"警报等级"</span><span class="token punctuation">,</span> <span class="token string">"Alarm.Level"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
					<span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token string">"警报内容"</span><span class="token punctuation">,</span> <span class="token string">"Alarm.Content"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				<span class="token punctuation">&#125;</span>
			<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">private</span> <span class="token return-type class-name">TitleAndTextCell</span> <span class="token function">CreateTableViewViewCell</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> text<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> bindingPath<span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TitleAndTextCell</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span> <span class="token string">"title"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> text<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span><span class="token keyword">string</span><span class="token punctuation">></span></span> <span class="token punctuation">&#123;</span> <span class="token string">"text"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> bindingPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>

		<span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnAppearing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">&#123;</span>
			<span class="token keyword">base</span><span class="token punctuation">.</span><span class="token function">OnAppearing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token class-name">TianQiModel</span> tianQi <span class="token operator">=</span> <span class="token keyword">await</span> TianQiAPI<span class="token punctuation">.</span><span class="token function">GetWeatherDataAsync</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span>Empty<span class="token punctuation">)</span><span class="token punctuation">;</span>
			BindingContext <span class="token operator">=</span> tianQi<span class="token punctuation">;</span>
		<span class="token punctuation">&#125;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="7">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TianQiAPIPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="8">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200312100609605.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200312100640511.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200312100701690.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout</title>
    <url>/Xamarin/Forms/1_StackLayout/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何在 StackLayout 中对齐控件。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms StackLayout。</li>
<li>指定 StackLayout 的方向。</li>
<li>控制 StackLayout 内子视图的对齐和扩展。</li>
</ol>
<span id="more"></span>

<h2 id="创建-stacklayout"><a href="#创建-stacklayout" class="headerlink" title="创建 stacklayout"></a>创建 stacklayout</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 StackLayoutPage.xaml：<br><img data-src="https://img-blog.csdnimg.cn/20200305134444615.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>编辑 StackLayoutPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第一个Label。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第二个Label。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第三个Label。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>StackLayout 默认为垂直方向。 此外，Margin 属性表示 ContentPage 中 StackLayout 的外边距。</p>
</blockquote>
<blockquote>
<p>*<em>除 Margin 外，StackLayout 还可设置 Padding 和 Spacing。 Padding 指定 StackLayout 的内边距，Spacing 指定 StackLayout 中每个子元素之间的间隔大小。</em></p>
</blockquote>
<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">StackLayoutPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305135303284.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="StackLayout-方向"><a href="#StackLayout-方向" class="headerlink" title="StackLayout 方向"></a>StackLayout 方向</h2><ol>
<li>编辑 StackLayoutPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span> <span class="token attr-name">Orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Horizontal<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第一个Label的显示内容。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第二个Label的显示内容。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>第三个Label的显示内容。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>Orientation 属性：Horizontal 横向，Vertical 纵向</p>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305135351611.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="对齐方式和扩展选项"><a href="#对齐方式和扩展选项" class="headerlink" title="对齐方式和扩展选项"></a>对齐方式和扩展选项</h2><ol>
<li>编辑 StackLayoutPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span>
		   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
		   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>End<span class="token punctuation">"</span></span>
		   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>End<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fill<span class="token punctuation">"</span></span>
		   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fill<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>StartAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>StartAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EndAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>EndAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>FillAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>FillAndExpand<span class="token punctuation">"</span></span>
		   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>前四个 Label 设置 HorizontalOptions 横向配置 Start、Center、End 和 Fill 各元素的显示位置，后四个 Label 设置 VerticalOptions 纵向配置 StartAndExpand、CenterAndExpand、EndAndExpand 和 FillAndExpand 在剩余空间中的位置。</p>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305135430671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><blockquote>
<p>StackLayout 仅遵循与 StackLayout 方向相反的子元素位置配置。 因此，Vertical 方向的 HorizontalOptions 属性设置时有效</p>
</blockquote>
</li>
</ol>
<blockquote>
<p>StackLayout 只能按照其方向扩展元素位置。 因此，Vertical 方向的 StackLayout 可以扩展 Label 子元素。 这意味着，对于 Vertical 对齐方式，每个 Label 在 StackLayout 内占据相同的空间量。 但是，只有最后一个 Label（可将 VerticalOptions 属性设置为 FillAndExpand）具有不同的大小</p>
</blockquote>
<blockquote>
<p>*<em>以上代码中 StackLayout.Orientation 默认为 Vertical，故前四个 Label 配置 HorizontalOptions 位置有效，后四个 Label 配置 VerticalOptions 为 Expand 有效</em></p>
</blockquote>
<blockquote>
<p>*<em>使用 StackLayout 中的所有空间时，Expand 不起作用</em></p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid</title>
    <url>/Xamarin/Forms/2_Grid/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何在 Grid 中布局。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms Grid。</li>
<li>指定 Grid 的列和行。</li>
<li>涉及 Grid 中多列或多行的内容。</li>
</ol>
<span id="more"></span>

<h2 id="创建-Grid"><a href="#创建-Grid" class="headerlink" title="创建 Grid"></a>创建 Grid</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 GridPage.xaml：<br><img data-src="https://img-blog.csdnimg.cn/20200305132648634.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>编辑 GridPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.GridPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,35<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>设置Grid.Margin，可控制Grid外边距。<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>*<em>除 Margin 属性外，还可在 Grid 上设置 Padding 属性。 Padding 指定 Grid 的内边距。</em></p>
</blockquote>
<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">GridPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305140418953.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="行列配置"><a href="#行列配置" class="headerlink" title="行列配置"></a>行列配置</h2><ol>
<li>编辑 GridPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,35,20,20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.RowDefinitions</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.RowDefinitions</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Column 0, Row 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
           <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Column 1, Row 0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
           <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Column 0, Row 1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
           <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
           <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Column 1, Row 1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305143245643.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><blockquote>
<p>有效的宽度值和高度值为：</p>
<ul>
<li>Auto 对列或行进行大小调整以适应内容。</li>
<li>比例值，将列和行的大小设置为剩余空间的比例。 以 * 结尾表示比例值。</li>
<li>绝对值，使用特定的固定值调整列或行的大小。</li>
</ul>
</blockquote>
</li>
</ol>
<blockquote>
<p>*<em>可以使用 ColumnSpacing 和 RowSpacing 属性设置 Grid 中列和行之间的间距</em></p>
</blockquote>
<h2 id="跨行跨列"><a href="#跨行跨列" class="headerlink" title="跨行跨列"></a>跨行跨列</h2><ol>
<li>编辑 GridPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,35,20,20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.5*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.RowDefinitions</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>30<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.RowDefinitions</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.ColumnSpan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
           <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This text uses the ColumnSpan property to span both columns.<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
           <span class="token attr-name">Grid.RowSpan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
           <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>This text uses the RowSpan property to span two rows.<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>ColumnSpan 跨越多列，RowSpan 跨越多行</p>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305145400950.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 3 - Label</title>
    <url>/Xamarin/Forms/3_Label/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何在 Label 中显示文本。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms Label。</li>
<li>更改 Label 的样式。</li>
<li>在一个 Label 中显示具有多种格式的文本。</li>
</ol>
<span id="more"></span>

<h2 id="创建-Label"><a href="#创建-Label" class="headerlink" title="创建 Label"></a>创建 Label</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 LabelPage.xaml：<br><img data-src="https://img-blog.csdnimg.cn/20200305150539729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>编辑 LabelPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.LabelPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎使用 Xamarin.Forms！<span class="token punctuation">"</span></span>
                <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
                <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">LabelPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305150842798.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="配置-Label-样式"><a href="#配置-Label-样式" class="headerlink" title="配置 Label 样式"></a>配置 Label 样式</h2><ol>
<li>编辑 LabelPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎使用 Xamarin.Forms！<span class="token punctuation">"</span></span>
	   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
	   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
	   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Blue<span class="token punctuation">"</span></span>
       <span class="token attr-name">FontAttributes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Italic<span class="token punctuation">"</span></span>
       <span class="token attr-name">FontSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span>
       <span class="token attr-name">TextDecorations</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Underline<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>TextColor 设置文本的颜色，FontAttributes 设置字体为斜体，FontSize 设置字号，TextDecorations 应用下划线效果</p>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305151324276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="自定义-Label-文本格式"><a href="#自定义-Label-文本格式" class="headerlink" title="自定义 Label 文本格式"></a>自定义 Label 文本格式</h2><ol>
<li>编辑 LabelPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span>
	   <span class="token attr-name">FontSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>
	   <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
	   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label.FormattedText</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FormattedString</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Span</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎 <span class="token punctuation">"</span></span>
				  <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Blue<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Span</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>使用 <span class="token punctuation">"</span></span>
				  <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Red<span class="token punctuation">"</span></span>
				  <span class="token attr-name">FontAttributes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Italic<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Span</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Xamarin.Form！<span class="token punctuation">"</span></span>
				  <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Green<span class="token punctuation">"</span></span>
				  <span class="token attr-name">TextDecorations</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Underline<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FormattedString</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Label.FormattedText</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Label</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>FormattedText 属性是 FormattedString 类型，可以包含一个或多个 Span 实例</p>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305152247542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 4 - Button</title>
    <url>/Xamarin/Forms/4_Button/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何自定义 Button。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms Button。</li>
<li>Button 点击事件。</li>
<li>更改 Button 的样式。</li>
</ol>
<span id="more"></span>

<h2 id="创建-Button"><a href="#创建-Button" class="headerlink" title="创建 Button"></a>创建 Button</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 ButtonPage.xaml。</li>
<li>编辑 ButtonPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.ButtonPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎使用 Xamarin.Forms！<span class="token punctuation">"</span></span>
                <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
                <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ButtonPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/2020030515320694.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="Button-点击事件"><a href="#Button-点击事件" class="headerlink" title="Button 点击事件"></a>Button 点击事件</h2><ol>
<li>编辑 ButtonPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎使用 Xamarin.Forms！<span class="token punctuation">"</span></span>
		<span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnWel<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
		<span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnButtonClicked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>除了 Clicked 事件，Button 还定义了 Pressed 和 Released 事件</p>
</blockquote>
<ol start="2">
<li>编辑 ButtonPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnButtonClicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	btnWel<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token string">"你点击了我一下！"</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305153708933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="更改-Button-的样式"><a href="#更改-Button-的样式" class="headerlink" title="更改 Button 的样式"></a>更改 Button 的样式</h2><ol>
<li>编辑 ButtonPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎使用 Xamarin.Forms！<span class="token punctuation">"</span></span>
		<span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btnWel<span class="token punctuation">"</span></span>
        <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span>
        <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span>
        <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span>
		<span class="token attr-name">FontSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span>
        <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span>
        <span class="token attr-name">BorderColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span>
        <span class="token attr-name">BorderWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
        <span class="token attr-name">CornerRadius</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span>
        <span class="token attr-name">WidthRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span>
        <span class="token attr-name">HeightRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>120<span class="token punctuation">"</span></span>
		<span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnButtonClicked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>BorderColor 设置边框颜色，BorderWidth 设置边框宽度，CornerRadius 设置圆角大小，WidthRequest 和 HeightRequest 设置 Button 大小</p>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305154412650.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry</title>
    <url>/Xamarin/Forms/5_Entry/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示 Entry 属性 。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms Entry 。</li>
<li>响应 Entry 的文本更改。</li>
<li>Entry 属性简介。</li>
</ol>
<span id="more"></span>

<h2 id="创建-Entry"><a href="#创建-Entry" class="headerlink" title="创建 Entry"></a>创建 Entry</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 EntryPage.xaml。</li>
<li>编辑 EntryPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.EntryPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Entry</span> <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入文本<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EntryPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305155717799.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="响应-Entry-的文本更改"><a href="#响应-Entry-的文本更改" class="headerlink" title="响应 Entry 的文本更改"></a>响应 Entry 的文本更改</h2><ol>
<li>编辑 EntryPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Entry</span> <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入文本<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextChanged</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEntryTextChanged<span class="token punctuation">"</span></span>
		   <span class="token attr-name">Completed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEntryCompleted<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OldText<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>labOld<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>NewText<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>labNew<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CompletedText<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>labCompleted<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>*<em>使用返回或完成键完成 Entry 中的文本输入时，才会触发 Completed 事件</em></p>
</blockquote>
<ol start="2">
<li>编辑 EntryPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEntryTextChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">TextChangedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	labOld<span class="token punctuation">.</span>Text <span class="token operator">=</span> e<span class="token punctuation">.</span>OldTextValue<span class="token punctuation">;</span>
	labNew<span class="token punctuation">.</span>Text <span class="token operator">=</span> e<span class="token punctuation">.</span>NewTextValue<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEntryCompleted</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	labCompleted<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Entry<span class="token punctuation">)</span>sender<span class="token punctuation">)</span><span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="Entry-属性简介"><a href="#Entry-属性简介" class="headerlink" title="Entry 属性简介"></a>Entry 属性简介</h2><ol>
<li>编辑 EntryPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Entry</span> <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入文本<span class="token punctuation">"</span></span>
	   <span class="token attr-name">MaxLength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span>
	   <span class="token attr-name">IsSpellCheckEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
	   <span class="token attr-name">IsTextPredictionEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
	   <span class="token attr-name">IsPassword</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
	   <span class="token attr-name">TextChanged</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEntryTextChanged<span class="token punctuation">"</span></span>
	   <span class="token attr-name">Completed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEntryCompleted<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>MaxLength 限制输入长度</li>
<li>IsSpellCheckEnabled 禁用拼写检查</li>
<li>IsTextPredictionEnabled 禁用文本预测和自动文本预测</li>
<li>IsPassword 对输入的字符进行掩码</li>
</ul>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor</title>
    <url>/Xamarin/Forms/6_Editor/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示 Editor 属性。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms Editor 。</li>
<li>响应 Editor 的文本更改。</li>
<li>Editor 属性简介。</li>
</ol>
<span id="more"></span>

<h2 id="创建-Editor"><a href="#创建-Editor" class="headerlink" title="创建 Editor"></a>创建 Editor</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 EditorPage.xaml。</li>
<li>编辑 EditorPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.EditorPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Editor</span> <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入文本<span class="token punctuation">"</span></span>
					<span class="token attr-name">AutoSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TextChanges<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>AutoSize 设备 Editor 按内容输入自动高度 4. 编辑 App.xaml.cs：</p>
</blockquote>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">EditorPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200306114715300.png"></li>
</ol>
<h2 id="响应-Editor-的文本更改"><a href="#响应-Editor-的文本更改" class="headerlink" title="响应 Editor 的文本更改"></a>响应 Editor 的文本更改</h2><ol>
<li>编辑 EditorPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Editor</span> <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入文本<span class="token punctuation">"</span></span>
			<span class="token attr-name">TextChanged</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEditorTextChanged<span class="token punctuation">"</span></span>
			<span class="token attr-name">Completed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEditorCompleted<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OldText<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>labOld<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>NewText<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>labNew<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CompletedText<span class="token punctuation">"</span></span>
		   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>labCompleted<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>*<em>使用返回或完成键完成 Editor 中的文本输入时，才会触发 Completed 事件</em></p>
</blockquote>
<ol start="2">
<li>编辑 EditorPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEditorTextChanged</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">TextChangedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	labOld<span class="token punctuation">.</span>Text <span class="token operator">=</span> e<span class="token punctuation">.</span>OldTextValue<span class="token punctuation">;</span>
	labNew<span class="token punctuation">.</span>Text <span class="token operator">=</span> e<span class="token punctuation">.</span>NewTextValue<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnEditorCompleted</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	labCompleted<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Editor<span class="token punctuation">)</span>sender<span class="token punctuation">)</span><span class="token punctuation">.</span>Text<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305161009906.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="Editor-属性简介"><a href="#Editor-属性简介" class="headerlink" title="Editor 属性简介"></a>Editor 属性简介</h2><ol>
<li>编辑 EditorPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Editor</span> <span class="token attr-name">Placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>输入文本<span class="token punctuation">"</span></span>
		<span class="token attr-name">AutoSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TextChanges<span class="token punctuation">"</span></span>
		<span class="token attr-name">MaxLength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span>
		<span class="token attr-name">IsSpellCheckEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
		<span class="token attr-name">IsTextPredictionEnabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span>
		<span class="token attr-name">TextChanged</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEditorTextChanged<span class="token punctuation">"</span></span>
		<span class="token attr-name">Completed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>OnEditorCompleted<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>MaxLength 限制输入长度</li>
<li>IsSpellCheckEnabled 禁用拼写检查</li>
<li>IsTextPredictionEnabled 禁用文本预测和自动文本预测</li>
</ul>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305161434688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 7 - Image</title>
    <url>/Xamarin/Forms/7_Image/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何显示图像。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms Image 。</li>
<li>Image 基本属性。</li>
<li>Image 图片引用。</li>
</ol>
<span id="more"></span>

<h2 id="创建-Image"><a href="#创建-Image" class="headerlink" title="创建 Image"></a>创建 Image</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 ImagePage.xaml。</li>
<li>编辑 ImagePage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.ImagePage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg<span class="token punctuation">"</span></span>
               <span class="token attr-name">HeightRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>Image.Source 属性是 ImageSource 类型，可以是文件、URI 或本地资源</p>
</blockquote>
<blockquote>
<p>*<em>Image 默认保持图像的纵横比</em></p>
</blockquote>
<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ImagePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200306144958616.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><blockquote>
<p>*<em>Image 自动将下载的图像缓存 24 小时</em></p>
</blockquote>
</li>
</ol>
<h2 id="Image-基本属性"><a href="#Image-基本属性" class="headerlink" title="Image 基本属性"></a>Image 基本属性</h2><ol>
<li>编辑 ImagePage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://avatar.csdnimg.cn/F/3/D/1_weixin_42456421_1583375444.jpg<span class="token punctuation">"</span></span>
       <span class="token attr-name">Aspect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fill<span class="token punctuation">"</span></span>
       <span class="token attr-name">HeightRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;OnPlatform iOS=300, Android=250&#125;<span class="token punctuation">"</span></span>
       <span class="token attr-name">WidthRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;OnPlatform iOS=300, Android=250&#125;<span class="token punctuation">"</span></span>
       <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>Aspect 图像的缩放模式</li>
<li>OnPlatform 标记扩展可每个平台自定义值</li>
</ul>
</blockquote>
<ol start="2">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200306151617294.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="Image-图片引用"><a href="#Image-图片引用" class="headerlink" title="Image 图片引用"></a>Image 图片引用</h2><p><img data-src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9jc2RuaW1nLmNuL2Nkbi9jb250ZW50LXRvb2xiYXIvY3Nkbi1sb2dvXy5wbmc?x-oss-process=image/format,png"></p>
<ol>
<li>本地图片引用：</li>
</ol>
<ul>
<li>Android<br><img data-src="https://img-blog.csdnimg.cn/2020030615274837.png"><br><img data-src="https://img-blog.csdnimg.cn/20200306155233812.png"></li>
<li>IOS<br><img data-src="https://img-blog.csdnimg.cn/20200306152825162.png"><br><img data-src="https://img-blog.csdnimg.cn/20200306152949849.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><blockquote>
<p>选择文件</p>
</blockquote>
</li>
</ul>
<p><img data-src="https://img-blog.csdnimg.cn/20200306153057589.png"></p>
<blockquote>
<p>重命名资源为文件名，保险与 Android 本地资源名称一致。</p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/20200306155621329.png"></p>
<ul>
<li>编辑 ImagePage.xaml：</li>
</ul>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>csdn_logo<span class="token punctuation">"</span></span>
       <span class="token attr-name">Aspect</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Fill<span class="token punctuation">"</span></span>
       <span class="token attr-name">HeightRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;OnPlatform iOS=88, Android=88&#125;<span class="token punctuation">"</span></span>
       <span class="token attr-name">WidthRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;OnPlatform iOS=180, Android=180&#125;<span class="token punctuation">"</span></span>
       <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>Source 本地资源 Android 引用直接使用文件名称 *<em>使用 OnPlatform 标记可分别定义</em></p>
</blockquote>
<ul>
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200306153544175.png"></li>
</ul>
<ol start="2">
<li>嵌入资源引用：<br><img data-src="https://img-blog.csdnimg.cn/20200306153912518.png"></li>
</ol>
<ul>
<li>编辑 ImagePage.xaml：</li>
</ul>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgIcon<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>编辑 ImagePage.xaml.cs：</li>
</ul>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">ImagePage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	imgIcon<span class="token punctuation">.</span>Source <span class="token operator">=</span> ImageSource<span class="token punctuation">.</span><span class="token function">FromResource</span><span class="token punctuation">(</span><span class="token string">"AwesomeApp.Icons.delete.png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>使用 ImageSource.FromResource 查找嵌入资源 *<em>路径：资源所在程序集命名空间.文件夹.文件名.文件类型</em></p>
</blockquote>
<ul>
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200306155107769.png"></li>
</ul>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口</title>
    <url>/Xamarin/Forms/9_PopWin/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何在 Xamarin.Forms 中显示弹出式菜单。</p>
<ol>
<li>弹出提醒。</li>
<li>模式对话框。</li>
</ol>
<span id="more"></span>

<h2 id="弹出提醒"><a href="#弹出提醒" class="headerlink" title="弹出提醒"></a>弹出提醒</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 PopupsPage.xaml。</li>
<li>编辑 PopupsPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.PopupsPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>弹出提醒1<span class="token punctuation">"</span></span>
					<span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button1_Clicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>弹出提醒2<span class="token punctuation">"</span></span>
					<span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button2_Clicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>弹出提醒2确认<span class="token punctuation">"</span></span>
					   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Switch</span> <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
						<span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swhBtn2OK<span class="token punctuation">"</span></span>
						<span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="4">
<li>编辑 PopupsPage.xaml：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Button1_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">await</span> <span class="token function">DisplayAlert</span><span class="token punctuation">(</span><span class="token string">"弹出框"</span><span class="token punctuation">,</span> <span class="token string">"这里是提醒内容"</span><span class="token punctuation">,</span> <span class="token string">"关闭"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Button2_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	swhBtn2OK<span class="token punctuation">.</span>IsToggled <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">DisplayAlert</span><span class="token punctuation">(</span><span class="token string">"确认框"</span><span class="token punctuation">,</span> <span class="token string">"这里是确认内容"</span><span class="token punctuation">,</span> <span class="token string">"确认"</span><span class="token punctuation">,</span> <span class="token string">"取消"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">PopupsPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200307151206169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"><br><img data-src="https://img-blog.csdnimg.cn/20200307151226189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="模式对话框"><a href="#模式对话框" class="headerlink" title="模式对话框"></a>模式对话框</h2><ol>
<li>编辑 PopupsPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>模式对话框<span class="token punctuation">"</span></span>
		<span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button3_Clicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lblBtn3Action<span class="token punctuation">"</span></span>
	   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>模式对话框返回值<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>编辑 PopupsPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Button3_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	lblBtn3Action<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">DisplayActionSheet</span><span class="token punctuation">(</span><span class="token string">"模式对话框"</span><span class="token punctuation">,</span> <span class="token string">"关闭"</span><span class="token punctuation">,</span> <span class="token string">"请选择一个Action"</span><span class="token punctuation">,</span> <span class="token string">"Action1"</span><span class="token punctuation">,</span> <span class="token string">"Action2"</span><span class="token punctuation">,</span> <span class="token string">"Action3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200307151046154.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView</title>
    <url>/Xamarin/Forms/8_ListView/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>演示如何自定义 ListView。</p>
<ol>
<li>在 XAML 中创建 Xamarin.Forms ListView 。</li>
<li>ListView 数据绑定。</li>
<li>ListView 选择事件。</li>
<li>ListView 自定义单元格。</li>
</ol>
<span id="more"></span>

<h2 id="创建-ListView"><a href="#创建-ListView" class="headerlink" title="创建 ListView"></a>创建 ListView</h2><ol>
<li>打开已有项目 AwesomeApp。</li>
<li>添加新项 ListViewPage.xaml。</li>
<li>编辑 ListViewPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/winfx/2009/xaml<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://xamarin.com/schemas/2014/forms/design<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">xmlns:</span>mc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/markup-compatibility/2006<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">mc:</span>Ignorable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span>
             <span class="token attr-name"><span class="token namespace">x:</span>Class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>AwesomeApp.ListViewPage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ContentPage.Content</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>StackLayout</span> <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20,32<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>
					  <span class="token attr-name">SeparatorColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.ItemsSource</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>Array</span> <span class="token attr-name">Type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;x:Type x:String&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>Item9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>String</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x:</span>Array</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.ItemsSource</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextCell</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding .&#125;<span class="token punctuation">"</span></span>
								  <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>StackLayout</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage.Content</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ContentPage</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>ItemsSource 指定了一个字符串数组做为数据源</li>
<li>ItemTemplate 定义了一个文本单元格</li>
</ul>
</blockquote>
<ol start="4">
<li>编辑 App.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	MainPage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ListViewPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="5">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200306172716586.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><ol>
<li>编辑 ListViewPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>
		  <span class="token attr-name">SeparatorColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageCell</span> <span class="token attr-name">ImageSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Image&#125;<span class="token punctuation">"</span></span>
					   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Title&#125;<span class="token punctuation">"</span></span>
					   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span>
					   <span class="token attr-name">Detail</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Detail&#125;<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>ItemTemplate 定义了一个图文单元格</p>
</blockquote>
<ol start="2">
<li>添加 ItemData 类</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ItemData</span>
<span class="token punctuation">&#123;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Title <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Detail <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> Image <span class="token punctuation">&#123;</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>

    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#123;</span>
        <span class="token keyword">return</span> Title<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>编辑 ListViewPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token function">ListViewPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token function">InitializeComponent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token class-name">List<span class="token punctuation">&lt;</span>ItemData<span class="token punctuation">></span></span> listData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ItemData<span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		listData<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">ItemData</span>
		<span class="token punctuation">&#123;</span>
			Title <span class="token operator">=</span> <span class="token string">"Title"</span> <span class="token operator">+</span> i<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			Detail <span class="token operator">=</span> <span class="token string">"Detail"</span> <span class="token operator">+</span> i<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			Image <span class="token operator">=</span> <span class="token string">"csdn_logo"</span>
		<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	list<span class="token punctuation">.</span>ItemsSource <span class="token operator">=</span> listData<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<p>Image 这里使用的是本地资源，还可以根据需要使用 URL 或嵌入资源 4. 调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200307091011181.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></p>
</blockquote>
<h2 id="选择事件"><a href="#选择事件" class="headerlink" title="选择事件"></a>选择事件</h2><ol>
<li>编辑 ListViewPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lblSelectTitle<span class="token punctuation">"</span></span>
	   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这里显示Selected事件的单元格绑定Title<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lblTappedTitle<span class="token punctuation">"</span></span>
	   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这里显示Tapped事件的单元格绑定Title<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>
		  <span class="token attr-name">SeparatorColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span>
		  <span class="token attr-name">ItemSelected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list_ItemSelected<span class="token punctuation">"</span></span>
		  <span class="token attr-name">ItemTapped</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list_ItemTapped<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>编辑 ListViewPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> selectIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">list_ItemSelected</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">SelectedItemChangedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>selectIndex <span class="token operator">!=</span> e<span class="token punctuation">.</span>SelectedItemIndex<span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		selectIndex <span class="token operator">=</span> e<span class="token punctuation">.</span>SelectedItemIndex<span class="token punctuation">;</span>
		lblSelectTitle<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>SelectedItem <span class="token keyword">as</span> <span class="token class-name">ItemData</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Title<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">else</span>
	<span class="token punctuation">&#123;</span>
		lblSelectTitle<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>SelectedItem <span class="token keyword">as</span> <span class="token class-name">ItemData</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Detail<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>
<span class="token keyword">private</span> <span class="token class-name"><span class="token keyword">int</span></span> tapIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">list_ItemTapped</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">ItemTappedEventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>tapIndex <span class="token operator">!=</span> e<span class="token punctuation">.</span>ItemIndex<span class="token punctuation">)</span>
	<span class="token punctuation">&#123;</span>
		tapIndex <span class="token operator">=</span> e<span class="token punctuation">.</span>ItemIndex<span class="token punctuation">;</span>
		lblTappedTitle<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Item <span class="token keyword">as</span> <span class="token class-name">ItemData</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Title<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	<span class="token keyword">else</span>
	<span class="token punctuation">&#123;</span>
		lblTappedTitle<span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Item <span class="token keyword">as</span> <span class="token class-name">ItemData</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Detail<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<blockquote>
<ul>
<li>ItemSelected 事件选择新项后触发</li>
<li>ItemTapped 事件每次点按后都会触发</li>
</ul>
<ol start="3">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200307092528623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
</blockquote>
<h2 id="自定义单元格"><a href="#自定义单元格" class="headerlink" title="自定义单元格"></a>自定义单元格</h2><ol>
<li>编辑 ListViewPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span> <span class="token attr-name"><span class="token namespace">x:</span>Name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list<span class="token punctuation">"</span></span>
		  <span class="token attr-name">SeparatorColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Gray<span class="token punctuation">"</span></span>
		  <span class="token attr-name">HasUnevenRows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span>
		  <span class="token attr-name">ItemsSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding listData&#125;<span class="token punctuation">"</span></span>
		  <span class="token attr-name">ItemSelected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list_ItemSelected<span class="token punctuation">"</span></span>
		  <span class="token attr-name">ItemTapped</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list_ItemTapped<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DataTemplate</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ViewCell</span><span class="token punctuation">></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid</span> <span class="token attr-name">Padding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.RowDefinitions</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RowDefinition</span> <span class="token attr-name">Height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.RowDefinitions</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Auto<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
						<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ColumnDefinition</span> <span class="token attr-name">Width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid.ColumnDefinitions</span><span class="token punctuation">></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Image</span> <span class="token attr-name">Grid.RowSpan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span>
						   <span class="token attr-name">Margin</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0,0,6,0<span class="token punctuation">"</span></span>
						   <span class="token attr-name">Source</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Image&#125;<span class="token punctuation">"</span></span>
						   <span class="token attr-name">HeightRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span>
						   <span class="token attr-name">WidthRequest</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>60<span class="token punctuation">"</span></span>
						   <span class="token attr-name">BackgroundColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LightGray<span class="token punctuation">"</span></span>
						   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
						   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Title&#125;<span class="token punctuation">"</span></span>
						   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Black<span class="token punctuation">"</span></span>
						   <span class="token attr-name">FontAttributes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Bold<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
					<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Grid.Row</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
						   <span class="token attr-name">Grid.Column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>
						   <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;Binding Detail&#125;<span class="token punctuation">"</span></span>
						   <span class="token attr-name">TextColor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DimGray<span class="token punctuation">"</span></span>
						   <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Start<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
				<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Grid</span><span class="token punctuation">></span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ViewCell</span><span class="token punctuation">></span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>DataTemplate</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView.ItemTemplate</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="2">
<li>调试界面：<br><img data-src="https://img-blog.csdnimg.cn/20200307113326591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个Xamarin应用</title>
    <url>/Xamarin/Forms/FirstCode/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>生成第一个 Xamarin 应用</p>
<span id="more"></span>

<h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><p>Visual Studio 2019</p>
<h2 id="Windows-分步说明"><a href="#Windows-分步说明" class="headerlink" title="Windows 分步说明"></a>Windows 分步说明</h2><ol>
<li>选择“文件”&gt;“新建”&gt;“项目…” ，或按“创建新项目…” 按钮：<img data-src="https://img-blog.csdnimg.cn/20200305094410752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>搜索“Xamarin”或从“项目类型” 菜单中选择“移动” 。 选择“移动应用(Xamarin.Forms)” 项目类型：<img data-src="https://img-blog.csdnimg.cn/20200305094544257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>选择项目名称 – 示例使用“AwesomeApp”：<img data-src="https://img-blog.csdnimg.cn/20200305094628686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>单击“空白” 项目类型，确保选择了“Android” 和“iOS” ：<img data-src="https://img-blog.csdnimg.cn/20200305094734459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>到 NuGet 包还原（状态栏中将出现“还原已完成”消息）。</li>
<li>新 Visual Studio 2019 安装不会配置 Android 模拟器。 单击“调试” 按钮上的下拉箭头，然后选择“创建 Android Emulator” 以启动仿真器创建屏幕：<br><img data-src="https://img-blog.csdnimg.cn/20200305092243262.png"></li>
<li>在仿真器创建屏幕中，使用默认设置并单击“创建” 按钮：<img data-src="https://img-blog.csdnimg.cn/20200305094857438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>创建仿真器会使你返回“设备管理器”窗口。 单击“启动” 按钮以启动新仿真器：<img data-src="https://img-blog.csdnimg.cn/20200305094923593.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
<li>Visual Studio 2019 现在应在“调试” 按钮上显示新仿真器的名称：<br><img data-src="https://img-blog.csdnimg.cn/20200305095008259.png"></li>
<li>单击“调试” 按钮以生成应用程序并将其部署到 Android 仿真器：<br><img data-src="https://img-blog.csdnimg.cn/20200305095224286.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="自定义应用程序"><a href="#自定义应用程序" class="headerlink" title="自定义应用程序"></a>自定义应用程序</h2><ol>
<li>编辑 MainPage.xaml：</li>
</ol>
<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Label</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>欢迎使用Xamarin！<span class="token punctuation">"</span></span> <span class="token attr-name">HorizontalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Center<span class="token punctuation">"</span></span> <span class="token attr-name">VerticalOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>CenterAndExpand<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">Text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>点我<span class="token punctuation">"</span></span> <span class="token attr-name">Clicked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Button_Clicked<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<ol start="2">
<li>编辑 MainPage.xaml.cs：</li>
</ol>
<pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp"><span class="token class-name"><span class="token keyword">int</span></span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Button_Clicked</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> sender<span class="token punctuation">,</span> <span class="token class-name">System<span class="token punctuation">.</span>EventArgs</span> e<span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span>
    count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span>Button<span class="token punctuation">)</span>sender<span class="token punctuation">)</span><span class="token punctuation">.</span>Text <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$"你点击了 </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token expression language-csharp">count</span><span class="token punctuation">&#125;</span></span><span class="token string"> 次。"</span></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<ol start="3">
<li>调试 Android 上的应用：<br><img data-src="https://img-blog.csdnimg.cn/20200305095949266.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjQ1NjQyMQ==,size_16,color_FFFFFF,t_70"></li>
</ol>
<h2 id="在-Visual-Studio-2019-中生成-iOS-应用"><a href="#在-Visual-Studio-2019-中生成-iOS-应用" class="headerlink" title="在 Visual Studio 2019 中生成 iOS 应用"></a>在 Visual Studio 2019 中生成 iOS 应用</h2><video src="https://sec.ch9.ms/ch9/093f/7c34917b-e6a0-41b5-8f49-4253b0b9093f/XamariniOS_high.mp4" preload="metadata" controlslist="nodownload" controls playsinline poster=""></video>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin.Forms 创建移动应用程序的基础知识 - 总结</title>
    <url>/Xamarin/Forms/Summarize/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>通过对 “Xamarin.Forms 创建移动应用程序的基础知识” 这个专题的编写，已经可以实现简单功能的 APP 编写，处理日常事务的简单工作</p>
<span id="more"></span>

<h2 id="专题内容"><a href="#专题内容" class="headerlink" title="专题内容"></a>专题内容</h2><ol>
<li><a href="../FirstCode/">了解 Xamarin.Forms 创建移动应用程序的基础知识 - 生成第一个 Xamarin 应用</a></li>
<li><a href="../1_StackLayout/">了解 Xamarin.Forms 创建移动应用程序的基础知识 1 - StackLayout</a></li>
<li><a href="../2_Grid/">了解 Xamarin.Forms 创建移动应用程序的基础知识 2 - Grid</a></li>
<li><a href="../3_Label/">了解 Xamarin.Forms 创建移动应用程序的基础知识 3 - Label</a></li>
<li><a href="../4_Button/">了解 Xamarin.Forms 创建移动应用程序的基础知识 4 - Button</a></li>
<li><a href="../5_Entry/">了解 Xamarin.Forms 创建移动应用程序的基础知识 5 - Entry</a></li>
<li><a href="../6_Editor/">了解 Xamarin.Forms 创建移动应用程序的基础知识 6 - Editor</a></li>
<li><a href="../7_Image/">了解 Xamarin.Forms 创建移动应用程序的基础知识 7 - Image</a></li>
<li><a href="../8_ListView/">了解 Xamarin.Forms 创建移动应用程序的基础知识 8 - ListView</a></li>
<li><a href="../9_PopWin/">了解 Xamarin.Forms 创建移动应用程序的基础知识 9 - 弹出窗口</a></li>
<li><a href="../10_LifeCycle/">了解 Xamarin.Forms 创建移动应用程序的基础知识 10 - 应用程序的生命周期</a></li>
<li><a href="../11_Sqlite/">了解 Xamarin.Forms 创建移动应用程序的基础知识 11 - SQLite 数据库</a></li>
<li><a href="../12_UrlData/">了解 Xamarin.Forms 创建移动应用程序的基础知识 12 - 访问 URL 数据</a></li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>.NetCore</tag>
        <tag>Xamarin</tag>
      </tags>
  </entry>
</search>
